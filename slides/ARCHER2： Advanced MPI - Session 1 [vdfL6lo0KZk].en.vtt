WEBVTT
Kind: captions
Language: en

00:00:04.960 --> 00:00:08.950 align:start position:0%
 
Okay.<00:00:05.359><c> So,</c><00:00:05.680><c> morning</c><00:00:06.000><c> everybody.</c><00:00:06.640><c> Um,</c><00:00:07.919><c> so</c><00:00:08.800><c> it's</c>

00:00:08.950 --> 00:00:08.960 align:start position:0%
Okay. So, morning everybody. Um, so it's
 

00:00:08.960 --> 00:00:13.110 align:start position:0%
Okay. So, morning everybody. Um, so it's
a<00:00:09.040><c> bit</c><00:00:09.200><c> of</c><00:00:09.280><c> a</c><00:00:09.440><c> delay</c><00:00:09.760><c> here.</c><00:00:11.040><c> Fine.</c><00:00:11.599><c> So,</c><00:00:12.240><c> um,</c>

00:00:13.110 --> 00:00:13.120 align:start position:0%
a bit of a delay here. Fine. So, um,
 

00:00:13.120 --> 00:00:14.629 align:start position:0%
a bit of a delay here. Fine. So, um,
just<00:00:13.280><c> to</c><00:00:13.519><c> show</c><00:00:13.599><c> you</c><00:00:13.759><c> how</c><00:00:13.920><c> to</c><00:00:14.080><c> navigate</c><00:00:14.400><c> around</c>

00:00:14.629 --> 00:00:14.639 align:start position:0%
just to show you how to navigate around
 

00:00:14.639 --> 00:00:17.830 align:start position:0%
just to show you how to navigate around
the<00:00:14.880><c> material.</c><00:00:15.839><c> Um,</c><00:00:16.320><c> this</c><00:00:16.560><c> is</c><00:00:16.640><c> the</c><00:00:16.800><c> Archer</c><00:00:17.359><c> 2</c>

00:00:17.830 --> 00:00:17.840 align:start position:0%
the material. Um, this is the Archer 2
 

00:00:17.840 --> 00:00:19.750 align:start position:0%
the material. Um, this is the Archer 2
um,<00:00:18.080><c> homepage.</c><00:00:18.720><c> Uh,</c><00:00:18.960><c> the</c><00:00:19.039><c> Arch</c><00:00:19.279><c> 2</c><00:00:19.520><c> training</c>

00:00:19.750 --> 00:00:19.760 align:start position:0%
um, homepage. Uh, the Arch 2 training
 

00:00:19.760 --> 00:00:22.070 align:start position:0%
um, homepage. Uh, the Arch 2 training
page.<00:00:20.720><c> And</c><00:00:20.880><c> if</c><00:00:21.119><c> you</c><00:00:21.199><c> go</c><00:00:21.359><c> to</c><00:00:21.520><c> upcoming</c>

00:00:22.070 --> 00:00:22.080 align:start position:0%
page. And if you go to upcoming
 

00:00:22.080 --> 00:00:24.710 align:start position:0%
page. And if you go to upcoming
training,<00:00:22.880><c> you</c><00:00:23.119><c> will</c><00:00:23.279><c> see</c><00:00:23.439><c> the</c><00:00:23.680><c> advanced</c><00:00:24.160><c> NPI</c>

00:00:24.710 --> 00:00:24.720 align:start position:0%
training, you will see the advanced NPI
 

00:00:24.720 --> 00:00:27.189 align:start position:0%
training, you will see the advanced NPI
course<00:00:25.199><c> is</c><00:00:25.439><c> this</c><00:00:25.680><c> one</c><00:00:25.840><c> here.</c><00:00:26.800><c> That's</c><00:00:27.039><c> the</c>

00:00:27.189 --> 00:00:27.199 align:start position:0%
course is this one here. That's the
 

00:00:27.199 --> 00:00:28.950 align:start position:0%
course is this one here. That's the
generic<00:00:27.680><c> page,</c><00:00:27.920><c> but</c><00:00:28.160><c> what's</c><00:00:28.400><c> been</c><00:00:28.480><c> added</c>

00:00:28.950 --> 00:00:28.960 align:start position:0%
generic page, but what's been added
 

00:00:28.960 --> 00:00:31.910 align:start position:0%
generic page, but what's been added
quite<00:00:29.199><c> recently</c><00:00:30.160><c> is</c><00:00:30.640><c> the</c><00:00:31.279><c> um</c><00:00:31.359><c> the</c><00:00:31.599><c> course</c>

00:00:31.910 --> 00:00:31.920 align:start position:0%
quite recently is the um the course
 

00:00:31.920 --> 00:00:33.750 align:start position:0%
quite recently is the um the course
materials.<00:00:32.480><c> So</c><00:00:32.640><c> if</c><00:00:32.800><c> you</c><00:00:32.880><c> go</c><00:00:32.960><c> to</c><00:00:33.200><c> So</c><00:00:33.360><c> if</c><00:00:33.520><c> you</c><00:00:33.600><c> go</c>

00:00:33.750 --> 00:00:33.760 align:start position:0%
materials. So if you go to So if you go
 

00:00:33.760 --> 00:00:36.229 align:start position:0%
materials. So if you go to So if you go
to<00:00:33.920><c> the</c><00:00:34.079><c> the</c><00:00:34.399><c> training</c><00:00:34.800><c> course</c><00:00:35.120><c> page,</c><00:00:35.920><c> go</c><00:00:36.079><c> to</c>

00:00:36.229 --> 00:00:36.239 align:start position:0%
to the the training course page, go to
 

00:00:36.239 --> 00:00:38.950 align:start position:0%
to the the training course page, go to
course<00:00:36.559><c> materials,</c><00:00:37.680><c> you</c><00:00:37.920><c> will</c><00:00:38.079><c> see</c><00:00:38.399><c> that</c><00:00:38.719><c> a</c>

00:00:38.950 --> 00:00:38.960 align:start position:0%
course materials, you will see that a
 

00:00:38.960 --> 00:00:42.630 align:start position:0%
course materials, you will see that a
slightly<00:00:39.440><c> scrappy</c><00:00:40.160><c> uh</c><00:00:40.559><c> markup</c><00:00:41.120><c> page.</c><00:00:42.000><c> Uh</c><00:00:42.399><c> I</c>

00:00:42.630 --> 00:00:42.640 align:start position:0%
slightly scrappy uh markup page. Uh I
 

00:00:42.640 --> 00:00:46.470 align:start position:0%
slightly scrappy uh markup page. Uh I
have<00:00:42.879><c> put</c><00:00:43.360><c> in</c><00:00:43.680><c> the</c><00:00:44.320><c> uh</c><00:00:44.719><c> timetable.</c>

00:00:46.470 --> 00:00:46.480 align:start position:0%
have put in the uh timetable.
 

00:00:46.480 --> 00:00:48.630 align:start position:0%
have put in the uh timetable.
So<00:00:47.120><c> um</c><00:00:47.360><c> the</c><00:00:47.600><c> first</c><00:00:47.760><c> talk</c><00:00:48.000><c> I</c><00:00:48.160><c> was</c><00:00:48.239><c> going</c><00:00:48.320><c> to</c><00:00:48.399><c> give</c>

00:00:48.630 --> 00:00:48.640 align:start position:0%
So um the first talk I was going to give
 

00:00:48.640 --> 00:00:50.389 align:start position:0%
So um the first talk I was going to give
the<00:00:48.800><c> tips</c><00:00:49.039><c> and</c><00:00:49.200><c> tricks.</c><00:00:49.600><c> So</c><00:00:49.760><c> we're</c><00:00:50.000><c> doing</c><00:00:50.160><c> 10</c>

00:00:50.389 --> 00:00:50.399 align:start position:0%
the tips and tricks. So we're doing 10
 

00:00:50.399 --> 00:00:53.350 align:start position:0%
the tips and tricks. So we're doing 10
to<00:00:50.719><c> four</c><00:00:50.960><c> each</c><00:00:51.200><c> day.</c><00:00:51.920><c> Uh</c><00:00:52.719><c> I've</c><00:00:53.039><c> tried</c><00:00:53.199><c> to</c>

00:00:53.350 --> 00:00:53.360 align:start position:0%
to four each day. Uh I've tried to
 

00:00:53.360 --> 00:00:54.869 align:start position:0%
to four each day. Uh I've tried to
tailor<00:00:53.680><c> it</c><00:00:53.760><c> to</c><00:00:53.920><c> what</c><00:00:54.079><c> people</c><00:00:54.320><c> said</c><00:00:54.480><c> in</c><00:00:54.719><c> the</c>

00:00:54.869 --> 00:00:54.879 align:start position:0%
tailor it to what people said in the
 

00:00:54.879 --> 00:00:57.590 align:start position:0%
tailor it to what people said in the
survey.<00:00:55.760><c> Um,</c><00:00:56.320><c> I'm</c><00:00:56.559><c> pulling</c><00:00:56.879><c> material</c><00:00:57.280><c> from</c><00:00:57.440><c> a</c>

00:00:57.590 --> 00:00:57.600 align:start position:0%
survey. Um, I'm pulling material from a
 

00:00:57.600 --> 00:00:58.950 align:start position:0%
survey. Um, I'm pulling material from a
bunch<00:00:57.680><c> of</c><00:00:57.840><c> different</c><00:00:58.000><c> sources</c><00:00:58.320><c> here.</c><00:00:58.559><c> So</c>

00:00:58.950 --> 00:00:58.960 align:start position:0%
bunch of different sources here. So
 

00:00:58.960 --> 00:01:01.189 align:start position:0%
bunch of different sources here. So
hopefully<00:00:59.359><c> it</c><00:00:59.600><c> may</c><00:00:59.760><c> not</c><00:00:59.920><c> flow</c><00:01:00.239><c> 100%</c><00:01:00.719><c> smoothly,</c>

00:01:01.189 --> 00:01:01.199 align:start position:0%
hopefully it may not flow 100% smoothly,
 

00:01:01.199 --> 00:01:04.149 align:start position:0%
hopefully it may not flow 100% smoothly,
but<00:01:01.359><c> hopefully</c><00:01:01.600><c> it'll</c><00:01:01.920><c> make</c><00:01:02.079><c> some</c><00:01:02.320><c> sense.</c><00:01:03.359><c> Um,</c>

00:01:04.149 --> 00:01:04.159 align:start position:0%
but hopefully it'll make some sense. Um,
 

00:01:04.159 --> 00:01:06.149 align:start position:0%
but hopefully it'll make some sense. Um,
so<00:01:04.799><c> these</c><00:01:05.119><c> links</c><00:01:05.439><c> will</c><00:01:05.680><c> link</c><00:01:05.840><c> to</c><00:01:06.000><c> the</c>

00:01:06.149 --> 00:01:06.159 align:start position:0%
so these links will link to the
 

00:01:06.159 --> 00:01:08.149 align:start position:0%
so these links will link to the
material.<00:01:06.560><c> These</c><00:01:06.720><c> are</c><00:01:06.880><c> links</c><00:01:07.040><c> to</c><00:01:07.200><c> the</c><00:01:07.360><c> PDFs</c><00:01:07.920><c> of</c>

00:01:08.149 --> 00:01:08.159 align:start position:0%
material. These are links to the PDFs of
 

00:01:08.159 --> 00:01:12.789 align:start position:0%
material. These are links to the PDFs of
the<00:01:08.320><c> material</c><00:01:09.280><c> for</c><00:01:09.360><c> example.</c><00:01:09.920><c> That's</c><00:01:10.159><c> the</c><00:01:11.600><c> um</c>

00:01:12.789 --> 00:01:12.799 align:start position:0%
the material for example. That's the um
 

00:01:12.799 --> 00:01:14.710 align:start position:0%
the material for example. That's the um
Okay,<00:01:13.200><c> that's</c><00:01:13.439><c> the</c><00:01:13.920><c> the</c><00:01:14.080><c> course</c><00:01:14.320><c> we've</c><00:01:14.560><c> just</c>

00:01:14.710 --> 00:01:14.720 align:start position:0%
Okay, that's the the course we've just
 

00:01:14.720 --> 00:01:17.749 align:start position:0%
Okay, that's the the course we've just
had.<00:01:15.439><c> Um,</c><00:01:16.240><c> the</c><00:01:16.560><c> exercise</c><00:01:17.040><c> material</c><00:01:17.360><c> I've</c><00:01:17.600><c> got</c>

00:01:17.749 --> 00:01:17.759 align:start position:0%
had. Um, the exercise material I've got
 

00:01:17.759 --> 00:01:19.030 align:start position:0%
had. Um, the exercise material I've got
down<00:01:18.000><c> here.</c><00:01:18.320><c> Now,</c><00:01:18.479><c> we're</c><00:01:18.640><c> not</c><00:01:18.720><c> going</c><00:01:18.799><c> to</c><00:01:18.880><c> do</c>

00:01:19.030 --> 00:01:19.040 align:start position:0%
down here. Now, we're not going to do
 

00:01:19.040 --> 00:01:22.070 align:start position:0%
down here. Now, we're not going to do
any<00:01:19.200><c> exercises</c><00:01:19.759><c> till</c><00:01:20.479><c> uh</c><00:01:20.880><c> after</c><00:01:21.200><c> the</c><00:01:21.600><c> first</c>

00:01:22.070 --> 00:01:22.080 align:start position:0%
any exercises till uh after the first
 

00:01:22.080 --> 00:01:23.990 align:start position:0%
any exercises till uh after the first
coffee<00:01:22.479><c> break,</c><00:01:22.799><c> I</c><00:01:23.040><c> don't</c><00:01:23.280><c> think.</c><00:01:23.520><c> In</c><00:01:23.680><c> fact,</c>

00:01:23.990 --> 00:01:24.000 align:start position:0%
coffee break, I don't think. In fact,
 

00:01:24.000 --> 00:01:27.830 align:start position:0%
coffee break, I don't think. In fact,
actually<00:01:24.880><c> till</c><00:01:25.119><c> after</c><00:01:25.439><c> lunch.</c><00:01:26.159><c> Uh</c><00:01:26.560><c> but</c><00:01:27.360><c> um</c><00:01:27.520><c> the</c>

00:01:27.830 --> 00:01:27.840 align:start position:0%
actually till after lunch. Uh but um the
 

00:01:27.840 --> 00:01:30.950 align:start position:0%
actually till after lunch. Uh but um the
exercises<00:01:28.400><c> are</c><00:01:28.560><c> are</c><00:01:28.960><c> here.</c><00:01:29.840><c> Um</c><00:01:30.560><c> they're</c>

00:01:30.950 --> 00:01:30.960 align:start position:0%
exercises are are here. Um they're
 

00:01:30.960 --> 00:01:33.429 align:start position:0%
exercises are are here. Um they're
slightly<00:01:32.240><c> um</c><00:01:32.479><c> we'll</c><00:01:32.720><c> go</c><00:01:32.880><c> through</c><00:01:33.119><c> them,</c><00:01:33.280><c> but</c>

00:01:33.429 --> 00:01:33.439 align:start position:0%
slightly um we'll go through them, but
 

00:01:33.439 --> 00:01:34.710 align:start position:0%
slightly um we'll go through them, but
this<00:01:33.600><c> should</c><00:01:33.759><c> be</c><00:01:33.920><c> all</c><00:01:34.000><c> the</c><00:01:34.159><c> material.</c><00:01:34.479><c> It's</c>

00:01:34.710 --> 00:01:34.720 align:start position:0%
this should be all the material. It's
 

00:01:34.720 --> 00:01:37.590 align:start position:0%
this should be all the material. It's
not<00:01:35.280><c> particularly</c><00:01:35.680><c> brilliantly</c><00:01:36.400><c> arranged</c><00:01:37.439><c> uh</c>

00:01:37.590 --> 00:01:37.600 align:start position:0%
not particularly brilliantly arranged uh
 

00:01:37.600 --> 00:01:40.710 align:start position:0%
not particularly brilliantly arranged uh
but<00:01:37.920><c> hopefully</c><00:01:38.240><c> should</c><00:01:38.479><c> make</c><00:01:38.720><c> sense.</c><00:01:39.439><c> Um</c><00:01:40.560><c> um</c>

00:01:40.710 --> 00:01:40.720 align:start position:0%
but hopefully should make sense. Um um
 

00:01:40.720 --> 00:01:42.149 align:start position:0%
but hopefully should make sense. Um um
so<00:01:40.880><c> the</c><00:01:41.119><c> first</c><00:01:41.360><c> exercise</c><00:01:41.680><c> we're</c><00:01:41.840><c> going</c><00:01:41.920><c> to</c><00:01:42.000><c> do</c>

00:01:42.149 --> 00:01:42.159 align:start position:0%
so the first exercise we're going to do
 

00:01:42.159 --> 00:01:43.670 align:start position:0%
so the first exercise we're going to do
actually<00:01:42.320><c> is</c><00:01:42.479><c> after</c><00:01:42.720><c> the</c><00:01:42.960><c> after</c><00:01:43.200><c> lunch</c><00:01:43.439><c> you'll</c>

00:01:43.670 --> 00:01:43.680 align:start position:0%
actually is after the after lunch you'll
 

00:01:43.680 --> 00:01:45.990 align:start position:0%
actually is after the after lunch you'll
do<00:01:43.759><c> a</c><00:01:43.840><c> ping</c><00:01:44.079><c> pong</c><00:01:44.640><c> and</c><00:01:44.960><c> that</c><00:01:45.200><c> will</c><00:01:45.360><c> hopefully</c>

00:01:45.990 --> 00:01:46.000 align:start position:0%
do a ping pong and that will hopefully
 

00:01:46.000 --> 00:01:50.389 align:start position:0%
do a ping pong and that will hopefully
illustrate<00:01:46.399><c> some</c><00:01:46.640><c> of</c><00:01:46.799><c> the</c><00:01:47.680><c> um</c><00:01:48.799><c> um</c><00:01:49.759><c> some</c><00:01:50.000><c> of</c><00:01:50.159><c> the</c>

00:01:50.389 --> 00:01:50.399 align:start position:0%
illustrate some of the um um some of the
 

00:01:50.399 --> 00:01:52.069 align:start position:0%
illustrate some of the um um some of the
topics<00:01:50.799><c> we</c><00:01:51.040><c> I've</c><00:01:51.280><c> covered</c><00:01:51.439><c> in</c><00:01:51.520><c> the</c><00:01:51.680><c> NPN</c>

00:01:52.069 --> 00:01:52.079 align:start position:0%
topics we I've covered in the NPN
 

00:01:52.079 --> 00:01:54.230 align:start position:0%
topics we I've covered in the NPN
interns.<00:01:52.880><c> But</c><00:01:53.200><c> uh</c><00:01:53.360><c> a</c><00:01:53.600><c> lot</c><00:01:53.680><c> of</c><00:01:53.759><c> people</c><00:01:54.000><c> wanted</c>

00:01:54.230 --> 00:01:54.240 align:start position:0%
interns. But uh a lot of people wanted
 

00:01:54.240 --> 00:01:55.429 align:start position:0%
interns. But uh a lot of people wanted
to<00:01:54.320><c> have</c><00:01:54.399><c> the</c><00:01:54.640><c> sort</c><00:01:54.720><c> of</c><00:01:54.799><c> tips</c><00:01:55.040><c> and</c><00:01:55.200><c> tricks</c>

00:01:55.429 --> 00:01:55.439 align:start position:0%
to have the sort of tips and tricks
 

00:01:55.439 --> 00:01:56.789 align:start position:0%
to have the sort of tips and tricks
lectures.<00:01:55.920><c> That's</c><00:01:56.079><c> what</c><00:01:56.240><c> I'm</c><00:01:56.399><c> going</c><00:01:56.479><c> to</c><00:01:56.560><c> give</c>

00:01:56.789 --> 00:01:56.799 align:start position:0%
lectures. That's what I'm going to give
 

00:01:56.799 --> 00:01:58.950 align:start position:0%
lectures. That's what I'm going to give
first.<00:01:57.600><c> Um</c><00:01:57.920><c> so</c><00:01:58.079><c> hope</c><00:01:58.399><c> that</c><00:01:58.560><c> so</c><00:01:58.719><c> that's</c><00:01:58.880><c> where</c>

00:01:58.950 --> 00:01:58.960 align:start position:0%
first. Um so hope that so that's where
 

00:01:58.960 --> 00:02:00.789 align:start position:0%
first. Um so hope that so that's where
the<00:01:59.119><c> that's</c><00:01:59.360><c> where</c><00:01:59.520><c> the</c><00:01:59.680><c> the</c><00:01:59.840><c> the</c><00:02:00.240><c> material</c><00:02:00.560><c> is</c>

00:02:00.789 --> 00:02:00.799 align:start position:0%
the that's where the the the material is
 

00:02:00.799 --> 00:02:04.630 align:start position:0%
the that's where the the the material is
just<00:02:00.960><c> to</c><00:02:01.119><c> go</c><00:02:01.280><c> back</c><00:02:02.240><c> um</c><00:02:02.960><c> the</c><00:02:03.200><c> main</c><00:02:03.439><c> arch</c><00:02:03.759><c> to</c><00:02:04.320><c> the</c>

00:02:04.630 --> 00:02:04.640 align:start position:0%
just to go back um the main arch to the
 

00:02:04.640 --> 00:02:08.790 align:start position:0%
just to go back um the main arch to the
arch<00:02:05.200><c> to</c><00:02:06.240><c> training</c><00:02:07.439><c> upcoming</c><00:02:08.000><c> training</c>

00:02:08.790 --> 00:02:08.800 align:start position:0%
arch to training upcoming training
 

00:02:08.800 --> 00:02:11.350 align:start position:0%
arch to training upcoming training
you'll<00:02:09.039><c> see</c><00:02:09.119><c> the</c><00:02:09.360><c> link</c><00:02:09.520><c> to</c><00:02:09.599><c> the</c><00:02:09.759><c> advanced</c><00:02:10.160><c> NPI</c>

00:02:11.350 --> 00:02:11.360 align:start position:0%
you'll see the link to the advanced NPI
 

00:02:11.360 --> 00:02:14.949 align:start position:0%
you'll see the link to the advanced NPI
and<00:02:11.599><c> then</c><00:02:13.040><c> go</c><00:02:13.280><c> to</c><00:02:13.360><c> the</c><00:02:13.440><c> course</c><00:02:13.760><c> materials</c><00:02:14.720><c> and</c>

00:02:14.949 --> 00:02:14.959 align:start position:0%
and then go to the course materials and
 

00:02:14.959 --> 00:02:16.790 align:start position:0%
and then go to the course materials and
this<00:02:15.200><c> is</c><00:02:15.280><c> just</c><00:02:15.520><c> a</c><00:02:15.680><c> a</c><00:02:15.840><c> stand</c><00:02:16.080><c> this</c><00:02:16.239><c> is</c><00:02:16.239><c> a</c><00:02:16.400><c> GitHub</c>

00:02:16.790 --> 00:02:16.800 align:start position:0%
this is just a a stand this is a GitHub
 

00:02:16.800 --> 00:02:19.510 align:start position:0%
this is just a a stand this is a GitHub
page<00:02:17.760><c> uh</c><00:02:17.920><c> which</c><00:02:18.640><c> hopefully</c><00:02:19.040><c> explains</c>

00:02:19.510 --> 00:02:19.520 align:start position:0%
page uh which hopefully explains
 

00:02:19.520 --> 00:02:21.110 align:start position:0%
page uh which hopefully explains
everything.

00:02:21.110 --> 00:02:21.120 align:start position:0%
everything.
 

00:02:21.120 --> 00:02:24.070 align:start position:0%
everything.
So<00:02:21.440><c> this</c><00:02:21.920><c> um</c><00:02:22.640><c> tips</c><00:02:22.959><c> and</c><00:02:23.120><c> tricks</c><00:02:23.360><c> lecture</c><00:02:23.760><c> is</c>

00:02:24.070 --> 00:02:24.080 align:start position:0%
So this um tips and tricks lecture is
 

00:02:24.080 --> 00:02:26.949 align:start position:0%
So this um tips and tricks lecture is
actually<00:02:24.800><c> one</c><00:02:25.040><c> of</c><00:02:25.120><c> the</c><00:02:25.280><c> last</c><00:02:25.520><c> lectures</c><00:02:25.920><c> I</c><00:02:26.160><c> give</c>

00:02:26.949 --> 00:02:26.959 align:start position:0%
actually one of the last lectures I give
 

00:02:26.959 --> 00:02:29.830 align:start position:0%
actually one of the last lectures I give
on<00:02:27.280><c> my</c><00:02:27.760><c> message</c><00:02:28.160><c> passing</c><00:02:28.560><c> course.</c><00:02:28.879><c> However,</c><00:02:29.680><c> I</c>

00:02:29.830 --> 00:02:29.840 align:start position:0%
on my message passing course. However, I
 

00:02:29.840 --> 00:02:31.830 align:start position:0%
on my message passing course. However, I
have<00:02:30.239><c> run</c><00:02:30.400><c> a</c><00:02:30.560><c> shorter</c><00:02:31.040><c> of</c><00:02:31.280><c> the</c><00:02:31.440><c> introductory</c>

00:02:31.830 --> 00:02:31.840 align:start position:0%
have run a shorter of the introductory
 

00:02:31.840 --> 00:02:33.190 align:start position:0%
have run a shorter of the introductory
message<00:02:32.160><c> passing</c><00:02:32.400><c> course.</c><00:02:32.560><c> I</c><00:02:32.720><c> run</c><00:02:32.800><c> a</c><00:02:32.959><c> slightly</c>

00:02:33.190 --> 00:02:33.200 align:start position:0%
message passing course. I run a slightly
 

00:02:33.200 --> 00:02:34.710 align:start position:0%
message passing course. I run a slightly
shorter<00:02:33.519><c> version</c><00:02:33.680><c> of</c><00:02:33.840><c> that</c><00:02:34.000><c> these</c><00:02:34.239><c> days.</c><00:02:34.480><c> So</c><00:02:34.560><c> I</c>

00:02:34.710 --> 00:02:34.720 align:start position:0%
shorter version of that these days. So I
 

00:02:34.720 --> 00:02:36.229 align:start position:0%
shorter version of that these days. So I
don't<00:02:34.879><c> give</c><00:02:35.040><c> that</c><00:02:35.200><c> in</c><00:02:35.360><c> that</c><00:02:35.519><c> session.</c><00:02:36.000><c> So</c>

00:02:36.229 --> 00:02:36.239 align:start position:0%
don't give that in that session. So
 

00:02:36.239 --> 00:02:37.750 align:start position:0%
don't give that in that session. So
hopefully<00:02:36.560><c> I'm</c><00:02:36.800><c> not</c><00:02:36.959><c> repeating</c><00:02:37.440><c> material</c>

00:02:37.750 --> 00:02:37.760 align:start position:0%
hopefully I'm not repeating material
 

00:02:37.760 --> 00:02:39.430 align:start position:0%
hopefully I'm not repeating material
that<00:02:37.920><c> you</c><00:02:38.160><c> already</c><00:02:38.319><c> have</c><00:02:38.480><c> known.</c><00:02:38.959><c> If</c><00:02:39.120><c> you</c><00:02:39.280><c> have</c>

00:02:39.430 --> 00:02:39.440 align:start position:0%
that you already have known. If you have
 

00:02:39.440 --> 00:02:40.710 align:start position:0%
that you already have known. If you have
heard<00:02:39.599><c> this</c><00:02:39.680><c> talk</c><00:02:39.840><c> before,</c><00:02:40.080><c> I</c><00:02:40.239><c> do</c><00:02:40.319><c> up</c><00:02:40.480><c> this</c><00:02:40.640><c> is</c>

00:02:40.710 --> 00:02:40.720 align:start position:0%
heard this talk before, I do up this is
 

00:02:40.720 --> 00:02:42.790 align:start position:0%
heard this talk before, I do up this is
one<00:02:40.879><c> of</c><00:02:40.959><c> the</c><00:02:41.120><c> talks</c><00:02:41.360><c> I</c><00:02:41.519><c> do</c><00:02:41.680><c> update</c><00:02:42.080><c> relatively</c>

00:02:42.790 --> 00:02:42.800 align:start position:0%
one of the talks I do update relatively
 

00:02:42.800 --> 00:02:51.190 align:start position:0%
one of the talks I do update relatively
uh<00:02:43.200><c> relatively</c><00:02:43.760><c> frequently.</c><00:02:44.640><c> So</c><00:02:44.879><c> let's</c><00:02:45.519><c> um</c>

00:02:51.190 --> 00:02:51.200 align:start position:0%
 
 

00:02:51.200 --> 00:02:53.910 align:start position:0%
 
okay

00:02:53.910 --> 00:02:53.920 align:start position:0%
okay
 

00:02:53.920 --> 00:02:57.750 align:start position:0%
okay
so<00:02:54.319><c> please</c><00:02:54.959><c> um</c><00:02:55.200><c> now</c><00:02:55.440><c> this</c><00:02:55.680><c> is</c><00:02:55.840><c> basically</c>

00:02:57.750 --> 00:02:57.760 align:start position:0%
so please um now this is basically
 

00:02:57.760 --> 00:02:59.589 align:start position:0%
so please um now this is basically
um<00:02:57.840><c> you</c><00:02:58.000><c> know</c><00:02:58.160><c> you've</c><00:02:58.400><c> written</c><00:02:58.640><c> NPI</c><00:02:59.120><c> programs</c>

00:02:59.589 --> 00:02:59.599 align:start position:0%
um you know you've written NPI programs
 

00:02:59.599 --> 00:03:02.229 align:start position:0%
um you know you've written NPI programs
hopefully<00:02:59.920><c> written</c><00:03:00.080><c> a</c><00:03:00.239><c> few</c><00:03:00.640><c> yourself</c><00:03:01.760><c> um</c><00:03:01.920><c> and</c>

00:03:02.229 --> 00:03:02.239 align:start position:0%
hopefully written a few yourself um and
 

00:03:02.239 --> 00:03:03.990 align:start position:0%
hopefully written a few yourself um and
this<00:03:02.480><c> is</c><00:03:02.720><c> going</c><00:03:02.959><c> through</c><00:03:03.200><c> sort</c><00:03:03.360><c> of</c><00:03:03.599><c> tips</c><00:03:03.840><c> and</c>

00:03:03.990 --> 00:03:04.000 align:start position:0%
this is going through sort of tips and
 

00:03:04.000 --> 00:03:05.350 align:start position:0%
this is going through sort of tips and
tricks<00:03:04.239><c> and</c><00:03:04.480><c> please</c><00:03:04.720><c> comment</c><00:03:04.959><c> on</c><00:03:05.120><c> these</c>

00:03:05.350 --> 00:03:05.360 align:start position:0%
tricks and please comment on these
 

00:03:05.360 --> 00:03:06.550 align:start position:0%
tricks and please comment on these
please<00:03:05.599><c> ask</c><00:03:05.760><c> questions</c><00:03:06.080><c> we're</c><00:03:06.239><c> going</c><00:03:06.400><c> through</c>

00:03:06.550 --> 00:03:06.560 align:start position:0%
please ask questions we're going through
 

00:03:06.560 --> 00:03:09.190 align:start position:0%
please ask questions we're going through
this<00:03:06.720><c> is</c><00:03:06.879><c> this</c><00:03:07.120><c> is</c><00:03:07.200><c> I</c><00:03:07.440><c> used</c><00:03:07.599><c> to</c><00:03:07.840><c> this</c><00:03:08.080><c> is</c><00:03:08.239><c> rather</c>

00:03:09.190 --> 00:03:09.200 align:start position:0%
this is this is I used to this is rather
 

00:03:09.200 --> 00:03:11.270 align:start position:0%
this is this is I used to this is rather
um<00:03:09.680><c> a</c><00:03:09.920><c> butterfly</c><00:03:10.480><c> collecting</c><00:03:10.800><c> of</c><00:03:11.040><c> different</c>

00:03:11.270 --> 00:03:11.280 align:start position:0%
um a butterfly collecting of different
 

00:03:11.280 --> 00:03:14.309 align:start position:0%
um a butterfly collecting of different
kinds<00:03:11.519><c> of</c><00:03:11.680><c> topics</c><00:03:12.080><c> and</c><00:03:12.239><c> such</c><00:03:13.200><c> but</c><00:03:13.680><c> Um</c>

00:03:14.309 --> 00:03:14.319 align:start position:0%
kinds of topics and such but Um
 

00:03:14.319 --> 00:03:26.390 align:start position:0%
kinds of topics and such but Um
hopefully<00:03:14.879><c> it</c><00:03:15.280><c> is</c><00:03:15.840><c> uh</c><00:03:16.080><c> interesting.</c><00:03:17.519><c> So</c>

00:03:26.390 --> 00:03:26.400 align:start position:0%
 
 

00:03:26.400 --> 00:03:27.670 align:start position:0%
 
okay,<00:03:26.640><c> there's</c><00:03:26.800><c> a</c><00:03:26.879><c> bit</c><00:03:26.959><c> of</c><00:03:27.040><c> a</c><00:03:27.120><c> delay</c><00:03:27.519><c> there</c>

00:03:27.670 --> 00:03:27.680 align:start position:0%
okay, there's a bit of a delay there
 

00:03:27.680 --> 00:03:29.990 align:start position:0%
okay, there's a bit of a delay there
with<00:03:27.760><c> our</c><00:03:27.920><c> message</c><00:03:28.239><c> passing</c><00:03:28.560><c> program</c><00:03:29.680><c> tips</c>

00:03:29.990 --> 00:03:30.000 align:start position:0%
with our message passing program tips
 

00:03:30.000 --> 00:03:32.789 align:start position:0%
with our message passing program tips
and<00:03:30.239><c> tricks.</c>

00:03:32.789 --> 00:03:32.799 align:start position:0%
and tricks.
 

00:03:32.799 --> 00:03:35.430 align:start position:0%
and tricks.
So<00:03:33.440><c> um</c><00:03:33.840><c> you</c><00:03:34.000><c> know</c><00:03:34.400><c> what</c><00:03:34.560><c> are</c><00:03:34.720><c> we</c><00:03:34.799><c> aiming</c><00:03:35.120><c> to</c><00:03:35.200><c> do?</c>

00:03:35.430 --> 00:03:35.440 align:start position:0%
So um you know what are we aiming to do?
 

00:03:35.440 --> 00:03:37.190 align:start position:0%
So um you know what are we aiming to do?
Well,<00:03:35.599><c> we're</c><00:03:35.680><c> aiming</c><00:03:35.920><c> to</c><00:03:36.080><c> write</c><00:03:36.239><c> correct</c><00:03:36.640><c> MPI</c>

00:03:37.190 --> 00:03:37.200 align:start position:0%
Well, we're aiming to write correct MPI
 

00:03:37.200 --> 00:03:39.990 align:start position:0%
Well, we're aiming to write correct MPI
programs<00:03:37.920><c> obviously</c><00:03:39.040><c> that</c><00:03:39.280><c> are</c><00:03:39.360><c> portable</c><00:03:39.760><c> to</c>

00:03:39.990 --> 00:03:40.000 align:start position:0%
programs obviously that are portable to
 

00:03:40.000 --> 00:03:43.110 align:start position:0%
programs obviously that are portable to
many<00:03:40.239><c> systems.</c><00:03:41.040><c> um</c><00:03:41.200><c> you</c><00:03:41.440><c> know</c><00:03:42.159><c> um</c><00:03:42.319><c> you</c><00:03:42.560><c> want</c><00:03:42.720><c> to</c>

00:03:43.110 --> 00:03:43.120 align:start position:0%
many systems. um you know um you want to
 

00:03:43.120 --> 00:03:45.990 align:start position:0%
many systems. um you know um you want to
software<00:03:43.599><c> is</c><00:03:43.920><c> much</c><00:03:44.959><c> uh</c><00:03:45.120><c> longer</c><00:03:45.519><c> lived</c><00:03:45.760><c> than</c>

00:03:45.990 --> 00:03:46.000 align:start position:0%
software is much uh longer lived than
 

00:03:46.000 --> 00:03:47.910 align:start position:0%
software is much uh longer lived than
hardware<00:03:46.480><c> and</c><00:03:46.720><c> so</c><00:03:46.879><c> you</c><00:03:47.120><c> you</c><00:03:47.360><c> want</c><00:03:47.519><c> your</c><00:03:47.680><c> code</c>

00:03:47.910 --> 00:03:47.920 align:start position:0%
hardware and so you you want your code
 

00:03:47.920 --> 00:03:50.229 align:start position:0%
hardware and so you you want your code
to<00:03:48.080><c> be</c><00:03:48.239><c> portable</c><00:03:49.040><c> easily</c><00:03:49.440><c> portable</c><00:03:49.760><c> to</c><00:03:50.000><c> many</c>

00:03:50.229 --> 00:03:50.239 align:start position:0%
to be portable easily portable to many
 

00:03:50.239 --> 00:03:52.070 align:start position:0%
to be portable easily portable to many
systems.<00:03:50.720><c> You</c><00:03:50.959><c> want</c><00:03:51.040><c> to</c><00:03:51.200><c> be</c><00:03:51.280><c> efficient</c><00:03:51.920><c> and</c>

00:03:52.070 --> 00:03:52.080 align:start position:0%
systems. You want to be efficient and
 

00:03:52.080 --> 00:03:54.390 align:start position:0%
systems. You want to be efficient and
you<00:03:52.239><c> want</c><00:03:52.400><c> to</c><00:03:52.480><c> be</c><00:03:52.640><c> easy</c><00:03:52.799><c> to</c><00:03:53.040><c> maintain</c><00:03:53.920><c> and</c><00:03:54.159><c> so</c>

00:03:54.390 --> 00:03:54.400 align:start position:0%
you want to be easy to maintain and so
 

00:03:54.400 --> 00:04:00.229 align:start position:0%
you want to be easy to maintain and so
this<00:03:55.519><c> talk</c><00:03:55.760><c> is</c><00:03:55.920><c> a</c><00:03:56.080><c> is</c><00:03:56.319><c> a</c><00:03:56.480><c> sort</c><00:03:56.640><c> of</c><00:03:57.840><c> um</c><00:03:59.040><c> um</c><00:04:00.000><c> a</c>

00:04:00.229 --> 00:04:00.239 align:start position:0%
this talk is a is a sort of um um a
 

00:04:00.239 --> 00:04:01.990 align:start position:0%
this talk is a is a sort of um um a
mixture<00:04:00.560><c> of</c><00:04:00.879><c> sort</c><00:04:00.959><c> of</c><00:04:01.040><c> software</c><00:04:01.360><c> development</c>

00:04:01.990 --> 00:04:02.000 align:start position:0%
mixture of sort of software development
 

00:04:02.000 --> 00:04:05.030 align:start position:0%
mixture of sort of software development
and<00:04:02.159><c> and</c><00:04:03.280><c> specific</c><00:04:03.760><c> tips</c><00:04:04.080><c> and</c><00:04:04.319><c> tricks.</c><00:04:04.799><c> So</c>

00:04:05.030 --> 00:04:05.040 align:start position:0%
and and specific tips and tricks. So
 

00:04:05.040 --> 00:04:07.350 align:start position:0%
and and specific tips and tricks. So
please<00:04:05.280><c> ask</c><00:04:05.599><c> questions</c><00:04:06.319><c> as</c><00:04:06.560><c> you</c><00:04:06.640><c> go</c><00:04:06.959><c> as</c><00:04:07.120><c> we</c><00:04:07.280><c> go</c>

00:04:07.350 --> 00:04:07.360 align:start position:0%
please ask questions as you go as we go
 

00:04:07.360 --> 00:04:09.830 align:start position:0%
please ask questions as you go as we go
along<00:04:07.519><c> if</c><00:04:07.680><c> you</c><00:04:07.760><c> have</c><00:04:07.840><c> any</c><00:04:08.080><c> issues.</c><00:04:09.280><c> So</c><00:04:09.680><c> and</c>

00:04:09.830 --> 00:04:09.840 align:start position:0%
along if you have any issues. So and
 

00:04:09.840 --> 00:04:11.270 align:start position:0%
along if you have any issues. So and
this<00:04:10.159><c> so</c><00:04:10.319><c> these</c><00:04:10.480><c> are</c><00:04:10.560><c> the</c><00:04:10.720><c> kind</c><00:04:10.799><c> of</c><00:04:10.959><c> things</c>

00:04:11.270 --> 00:04:11.280 align:start position:0%
this so these are the kind of things
 

00:04:11.280 --> 00:04:13.429 align:start position:0%
this so these are the kind of things
which<00:04:11.760><c> I</c><00:04:12.159><c> have</c><00:04:12.400><c> sort</c><00:04:12.640><c> of</c><00:04:12.720><c> come</c><00:04:12.959><c> across</c><00:04:13.200><c> that</c>

00:04:13.429 --> 00:04:13.439 align:start position:0%
which I have sort of come across that
 

00:04:13.439 --> 00:04:15.030 align:start position:0%
which I have sort of come across that
people<00:04:13.599><c> have</c><00:04:13.840><c> problems</c><00:04:14.159><c> with</c><00:04:14.480><c> and</c><00:04:14.720><c> they</c><00:04:14.879><c> kind</c>

00:04:15.030 --> 00:04:15.040 align:start position:0%
people have problems with and they kind
 

00:04:15.040 --> 00:04:17.670 align:start position:0%
people have problems with and they kind
of<00:04:15.200><c> cover</c><00:04:15.360><c> all</c><00:04:15.599><c> these</c><00:04:15.760><c> in</c><00:04:16.000><c> the</c><00:04:16.160><c> talk.</c>

00:04:17.670 --> 00:04:17.680 align:start position:0%
of cover all these in the talk.
 

00:04:17.680 --> 00:04:20.310 align:start position:0%
of cover all these in the talk.
Um<00:04:18.000><c> common</c><00:04:18.239><c> problems</c><00:04:18.560><c> in</c><00:04:18.720><c> NPI</c><00:04:19.519><c> assuming</c><00:04:19.919><c> NPI</c>

00:04:20.310 --> 00:04:20.320 align:start position:0%
Um common problems in NPI assuming NPI
 

00:04:20.320 --> 00:04:21.830 align:start position:0%
Um common problems in NPI assuming NPI
send<00:04:20.560><c> is</c><00:04:20.720><c> asynchronous</c><00:04:21.359><c> that</c><00:04:21.519><c> causes</c>

00:04:21.830 --> 00:04:21.840 align:start position:0%
send is asynchronous that causes
 

00:04:21.840 --> 00:04:24.070 align:start position:0%
send is asynchronous that causes
non-portability<00:04:22.720><c> I'll</c><00:04:22.960><c> cover</c><00:04:23.199><c> that</c><00:04:23.680><c> general</c>

00:04:24.070 --> 00:04:24.080 align:start position:0%
non-portability I'll cover that general
 

00:04:24.080 --> 00:04:27.430 align:start position:0%
non-portability I'll cover that general
nonportability<00:04:25.120><c> issues.</c><00:04:26.160><c> Um</c><00:04:26.960><c> program</c>

00:04:27.430 --> 00:04:27.440 align:start position:0%
nonportability issues. Um program
 

00:04:27.440 --> 00:04:28.950 align:start position:0%
nonportability issues. Um program
specific<00:04:27.840><c> process</c><00:04:28.160><c> counts</c><00:04:28.560><c> that's</c><00:04:28.720><c> that's</c>

00:04:28.950 --> 00:04:28.960 align:start position:0%
specific process counts that's that's
 

00:04:28.960 --> 00:04:30.310 align:start position:0%
specific process counts that's that's
something<00:04:29.199><c> which</c><00:04:29.440><c> people</c><00:04:29.600><c> do</c><00:04:29.759><c> as</c><00:04:29.919><c> beginners</c>

00:04:30.310 --> 00:04:30.320 align:start position:0%
something which people do as beginners
 

00:04:30.320 --> 00:04:32.950 align:start position:0%
something which people do as beginners
but<00:04:30.479><c> I'll</c><00:04:30.720><c> cover</c><00:04:30.960><c> that.</c><00:04:31.759><c> Uh</c><00:04:32.479><c> issues</c><00:04:32.800><c> with</c>

00:04:32.950 --> 00:04:32.960 align:start position:0%
but I'll cover that. Uh issues with
 

00:04:32.960 --> 00:04:36.469 align:start position:0%
but I'll cover that. Uh issues with
collectives<00:04:34.400><c> um</c><00:04:34.639><c> again</c><00:04:35.040><c> that's</c><00:04:35.440><c> that's</c><00:04:35.919><c> maybe</c>

00:04:36.469 --> 00:04:36.479 align:start position:0%
collectives um again that's that's maybe
 

00:04:36.479 --> 00:04:38.550 align:start position:0%
collectives um again that's that's maybe
a<00:04:36.880><c> bit</c><00:04:37.199><c> basic</c><00:04:37.520><c> but</c><00:04:37.680><c> I'll</c><00:04:37.840><c> cover</c><00:04:38.000><c> it</c><00:04:38.160><c> quickly.</c>

00:04:38.550 --> 00:04:38.560 align:start position:0%
a bit basic but I'll cover it quickly.
 

00:04:38.560 --> 00:04:40.390 align:start position:0%
a bit basic but I'll cover it quickly.
Incorrect<00:04:38.960><c> use</c><00:04:39.040><c> of</c><00:04:39.199><c> non-blocking</c><00:04:39.759><c> is</c><00:04:39.919><c> a</c><00:04:40.160><c> very</c>

00:04:40.390 --> 00:04:40.400 align:start position:0%
Incorrect use of non-blocking is a very
 

00:04:40.400 --> 00:04:42.310 align:start position:0%
Incorrect use of non-blocking is a very
important<00:04:40.720><c> one.</c><00:04:40.880><c> I</c><00:04:41.040><c> see</c><00:04:41.120><c> that</c><00:04:41.280><c> quite</c><00:04:41.520><c> a</c><00:04:41.680><c> lot.</c>

00:04:42.310 --> 00:04:42.320 align:start position:0%
important one. I see that quite a lot.
 

00:04:42.320 --> 00:04:44.070 align:start position:0%
important one. I see that quite a lot.
Uh<00:04:42.560><c> sending</c><00:04:42.800><c> lots</c><00:04:43.040><c> of</c><00:04:43.120><c> small</c><00:04:43.360><c> messages</c><00:04:43.680><c> is</c><00:04:43.919><c> an</c>

00:04:44.070 --> 00:04:44.080 align:start position:0%
Uh sending lots of small messages is an
 

00:04:44.080 --> 00:04:46.629 align:start position:0%
Uh sending lots of small messages is an
issue.<00:04:44.880><c> Array</c><00:04:45.199><c> allocation</c><00:04:45.680><c> issues</c><00:04:45.919><c> in</c><00:04:46.160><c> C</c><00:04:46.400><c> is</c>

00:04:46.629 --> 00:04:46.639 align:start position:0%
issue. Array allocation issues in C is
 

00:04:46.639 --> 00:04:51.909 align:start position:0%
issue. Array allocation issues in C is
always<00:04:46.880><c> an</c><00:04:47.120><c> issue.</c><00:04:47.440><c> Um</c><00:04:48.160><c> um</c><00:04:48.800><c> C</c><00:04:49.199><c> is</c><00:04:50.320><c> um</c>

00:04:51.909 --> 00:04:51.919 align:start position:0%
always an issue. Um um C is um
 

00:04:51.919 --> 00:04:53.830 align:start position:0%
always an issue. Um um C is um
um

00:04:53.830 --> 00:04:53.840 align:start position:0%
um
 

00:04:53.840 --> 00:04:56.310 align:start position:0%
um
is<00:04:54.240><c> pretty</c><00:04:54.639><c> terrible</c><00:04:54.960><c> for</c><00:04:55.199><c> the</c><00:04:55.280><c> way</c><00:04:55.440><c> it</c><00:04:55.680><c> has</c>

00:04:56.310 --> 00:04:56.320 align:start position:0%
is pretty terrible for the way it has
 

00:04:56.320 --> 00:04:58.550 align:start position:0%
is pretty terrible for the way it has
support<00:04:56.560><c> for</c><00:04:56.800><c> arrays.</c><00:04:57.440><c> C++</c><00:04:58.080><c> is</c><00:04:58.320><c> probably</c><00:04:58.400><c> a</c>

00:04:58.550 --> 00:04:58.560 align:start position:0%
support for arrays. C++ is probably a
 

00:04:58.560 --> 00:04:59.990 align:start position:0%
support for arrays. C++ is probably a
bit<00:04:58.639><c> better.</c><00:04:58.960><c> But</c><00:04:59.120><c> you</c><00:04:59.199><c> get</c><00:04:59.280><c> you</c><00:04:59.520><c> get</c><00:04:59.680><c> you</c><00:04:59.919><c> get</c>

00:04:59.990 --> 00:05:00.000 align:start position:0%
bit better. But you get you get you get
 

00:05:00.000 --> 00:05:01.670 align:start position:0%
bit better. But you get you get you get
issues<00:05:00.320><c> here</c><00:05:00.560><c> and</c><00:05:00.720><c> I'll</c><00:05:00.880><c> talk</c><00:05:01.040><c> about</c><00:05:01.199><c> that.</c>

00:05:01.670 --> 00:05:01.680 align:start position:0%
issues here and I'll talk about that.
 

00:05:01.680 --> 00:05:04.550 align:start position:0%
issues here and I'll talk about that.
Array<00:05:02.160><c> text</c><00:05:02.400><c> issues</c><00:05:02.639><c> in</c><00:05:02.800><c> forran</c><00:05:03.520><c> I</c><00:05:04.080><c> may</c><00:05:04.320><c> not</c>

00:05:04.550 --> 00:05:04.560 align:start position:0%
Array text issues in forran I may not
 

00:05:04.560 --> 00:05:05.749 align:start position:0%
Array text issues in forran I may not
cover.<00:05:04.800><c> But</c><00:05:04.960><c> this</c><00:05:05.120><c> is</c><00:05:05.199><c> one</c><00:05:05.280><c> of</c><00:05:05.360><c> the</c><00:05:05.440><c> things</c><00:05:05.600><c> I</c>

00:05:05.749 --> 00:05:05.759 align:start position:0%
cover. But this is one of the things I
 

00:05:05.759 --> 00:05:07.670 align:start position:0%
cover. But this is one of the things I
actually<00:05:06.000><c> wanted</c><00:05:06.320><c> to</c><00:05:06.479><c> cover</c><00:05:06.800><c> in</c><00:05:06.960><c> in</c><00:05:07.199><c> the</c><00:05:07.440><c> in</c>

00:05:07.670 --> 00:05:07.680 align:start position:0%
actually wanted to cover in in the in
 

00:05:07.680 --> 00:05:11.110 align:start position:0%
actually wanted to cover in in the in
the<00:05:07.919><c> in</c><00:05:08.240><c> the</c><00:05:08.639><c> uh</c><00:05:09.600><c> um</c>

00:05:11.110 --> 00:05:11.120 align:start position:0%
the in the uh um
 

00:05:11.120 --> 00:05:17.430 align:start position:0%
the in the uh um
in<00:05:11.440><c> the</c><00:05:12.160><c> uh</c>

00:05:17.430 --> 00:05:17.440 align:start position:0%
 
 

00:05:17.440 --> 00:05:25.430 align:start position:0%
 
um

00:05:25.430 --> 00:05:25.440 align:start position:0%
 
 

00:05:25.440 --> 00:05:28.629 align:start position:0%
 
what<00:05:25.680><c> people</c><00:05:26.080><c> did.</c>

00:05:28.629 --> 00:05:28.639 align:start position:0%
what people did.
 

00:05:28.639 --> 00:05:30.150 align:start position:0%
what people did.
So<00:05:28.880><c> I'm</c><00:05:29.039><c> actually</c><00:05:29.280><c> going</c><00:05:29.360><c> to</c><00:05:29.440><c> start</c><00:05:29.600><c> a</c><00:05:29.840><c> quiz</c>

00:05:30.150 --> 00:05:30.160 align:start position:0%
So I'm actually going to start a quiz
 

00:05:30.160 --> 00:05:34.150 align:start position:0%
So I'm actually going to start a quiz
here<00:05:31.520><c> if</c><00:05:31.840><c> just</c><00:05:32.000><c> to</c><00:05:32.160><c> get</c><00:05:32.320><c> if</c><00:05:32.560><c> people</c><00:05:32.960><c> you</c><00:05:33.919><c> I</c>

00:05:34.150 --> 00:05:34.160 align:start position:0%
here if just to get if people you I
 

00:05:34.160 --> 00:05:36.710 align:start position:0%
here if just to get if people you I
would<00:05:34.320><c> just</c><00:05:34.479><c> get</c><00:05:34.639><c> a</c><00:05:35.199><c> a</c><00:05:35.360><c> use</c><00:05:35.680><c> a</c><00:05:35.919><c> feeling</c><00:05:36.160><c> for.</c><00:05:36.560><c> So</c>

00:05:36.710 --> 00:05:36.720 align:start position:0%
would just get a a use a feeling for. So
 

00:05:36.720 --> 00:05:37.749 align:start position:0%
would just get a a use a feeling for. So
this<00:05:36.880><c> was</c><00:05:36.960><c> one</c><00:05:37.039><c> of</c><00:05:37.120><c> the</c><00:05:37.199><c> questions</c><00:05:37.360><c> in</c><00:05:37.520><c> the</c><00:05:37.600><c> in</c>

00:05:37.749 --> 00:05:37.759 align:start position:0%
this was one of the questions in the in
 

00:05:37.759 --> 00:05:48.629 align:start position:0%
this was one of the questions in the in
the<00:05:37.919><c> board.</c>

00:05:48.629 --> 00:05:48.639 align:start position:0%
 
 

00:05:48.639 --> 00:05:50.950 align:start position:0%
 
Okay.<00:05:48.960><c> So</c><00:05:49.120><c> that</c><00:05:49.280><c> is</c><00:05:49.440><c> useful</c><00:05:49.680><c> to</c><00:05:49.919><c> note.</c><00:05:50.160><c> So</c><00:05:50.639><c> so</c>

00:05:50.950 --> 00:05:50.960 align:start position:0%
Okay. So that is useful to note. So so
 

00:05:50.960 --> 00:05:53.909 align:start position:0%
Okay. So that is useful to note. So so
so<00:05:51.919><c> full</c><00:05:52.160><c> disclosure</c><00:05:52.639><c> I'm</c><00:05:52.800><c> not</c><00:05:52.960><c> really</c><00:05:53.039><c> a</c><00:05:53.280><c> C++</c>

00:05:53.909 --> 00:05:53.919 align:start position:0%
so full disclosure I'm not really a C++
 

00:05:53.919 --> 00:05:57.430 align:start position:0%
so full disclosure I'm not really a C++
programmer.<00:05:54.880><c> Um</c><00:05:55.280><c> but</c><00:05:55.520><c> then</c><00:05:56.080><c> NPI</c><00:05:56.479><c> is</c><00:05:56.639><c> in</c><00:05:56.880><c> C++</c>

00:05:57.430 --> 00:05:57.440 align:start position:0%
programmer. Um but then NPI is in C++
 

00:05:57.440 --> 00:05:59.830 align:start position:0%
programmer. Um but then NPI is in C++
interface.<00:05:57.919><c> Uh</c><00:05:58.240><c> so</c><00:05:58.880><c> please</c><00:05:59.120><c> correct</c><00:05:59.440><c> me</c><00:05:59.520><c> if</c><00:05:59.680><c> I</c>

00:05:59.830 --> 00:05:59.840 align:start position:0%
interface. Uh so please correct me if I
 

00:05:59.840 --> 00:06:02.230 align:start position:0%
interface. Uh so please correct me if I
but<00:06:00.000><c> but</c><00:06:00.240><c> I</c><00:06:00.639><c> I'm</c><00:06:00.880><c> I'm</c><00:06:01.120><c> so</c><00:06:01.360><c> that's</c><00:06:01.600><c> it's</c><00:06:02.080><c> so</c>

00:06:02.230 --> 00:06:02.240 align:start position:0%
but but I I'm I'm so that's it's so
 

00:06:02.240 --> 00:06:03.510 align:start position:0%
but but I I'm I'm so that's it's so
that's<00:06:02.479><c> very</c><00:06:02.720><c> interesting</c><00:06:02.880><c> to</c><00:06:03.039><c> know</c><00:06:03.199><c> that</c>

00:06:03.510 --> 00:06:03.520 align:start position:0%
that's very interesting to know that
 

00:06:03.520 --> 00:06:05.270 align:start position:0%
that's very interesting to know that
half<00:06:03.759><c> people</c><00:06:04.000><c> for</c><00:06:04.319><c> programs.</c><00:06:04.720><c> is</c><00:06:04.960><c> I</c><00:06:05.120><c> will</c>

00:06:05.270 --> 00:06:05.280 align:start position:0%
half people for programs. is I will
 

00:06:05.280 --> 00:06:09.990 align:start position:0%
half people for programs. is I will
cover<00:06:05.919><c> thank</c><00:06:06.160><c> you</c><00:06:06.880><c> uh</c><00:06:07.199><c> I</c><00:06:07.520><c> will</c><00:06:07.759><c> cover</c><00:06:08.960><c> um</c><00:06:09.600><c> the</c>

00:06:09.990 --> 00:06:10.000 align:start position:0%
cover thank you uh I will cover um the
 

00:06:10.000 --> 00:06:13.430 align:start position:0%
cover thank you uh I will cover um the
uh<00:06:10.160><c> array</c><00:06:10.560><c> syntax</c><00:06:10.960><c> issues</c><00:06:11.440><c> in</c><00:06:11.680><c> forran</c><00:06:12.720><c> that</c><00:06:12.880><c> is</c>

00:06:13.430 --> 00:06:13.440 align:start position:0%
uh array syntax issues in forran that is
 

00:06:13.440 --> 00:06:15.430 align:start position:0%
uh array syntax issues in forran that is
uh<00:06:14.240><c> thank</c><00:06:14.400><c> you</c><00:06:14.479><c> very</c><00:06:14.720><c> much</c><00:06:14.880><c> that</c><00:06:15.039><c> was</c><00:06:15.199><c> very</c>

00:06:15.430 --> 00:06:15.440 align:start position:0%
uh thank you very much that was very
 

00:06:15.440 --> 00:06:18.469 align:start position:0%
uh thank you very much that was very
useful<00:06:16.639><c> um</c><00:06:16.880><c> and</c><00:06:17.440><c> uh</c><00:06:17.600><c> code</c><00:06:17.840><c> readability</c><00:06:18.319><c> and</c>

00:06:18.469 --> 00:06:18.479 align:start position:0%
useful um and uh code readability and
 

00:06:18.479 --> 00:06:21.110 align:start position:0%
useful um and uh code readability and
general<00:06:18.720><c> debugging</c><00:06:19.199><c> problems</c>

00:06:21.110 --> 00:06:21.120 align:start position:0%
general debugging problems
 

00:06:21.120 --> 00:06:23.430 align:start position:0%
general debugging problems
so<00:06:21.680><c> so</c><00:06:21.919><c> we'll</c><00:06:22.240><c> cover</c><00:06:22.479><c> this</c><00:06:22.880><c> when</c><00:06:23.120><c> we</c><00:06:23.280><c> talk</c>

00:06:23.430 --> 00:06:23.440 align:start position:0%
so so we'll cover this when we talk
 

00:06:23.440 --> 00:06:26.390 align:start position:0%
so so we'll cover this when we talk
about<00:06:23.680><c> NPI</c><00:06:24.160><c> internals</c><00:06:24.960><c> maybe</c><00:06:25.440><c> motivate</c><00:06:26.080><c> why</c>

00:06:26.390 --> 00:06:26.400 align:start position:0%
about NPI internals maybe motivate why
 

00:06:26.400 --> 00:06:30.150 align:start position:0%
about NPI internals maybe motivate why
this<00:06:26.639><c> is</c><00:06:27.520><c> but</c><00:06:28.080><c> um</c><00:06:29.120><c> one</c><00:06:29.360><c> of</c><00:06:29.440><c> the</c><00:06:29.600><c> issues</c><00:06:29.919><c> about</c>

00:06:30.150 --> 00:06:30.160 align:start position:0%
this is but um one of the issues about
 

00:06:30.160 --> 00:06:33.110 align:start position:0%
this is but um one of the issues about
NPI<00:06:31.440><c> uh</c><00:06:31.600><c> is</c><00:06:32.080><c> you</c><00:06:32.240><c> know</c><00:06:32.319><c> if</c><00:06:32.560><c> you're</c><00:06:32.720><c> learning</c>

00:06:33.110 --> 00:06:33.120 align:start position:0%
NPI uh is you know if you're learning
 

00:06:33.120 --> 00:06:35.270 align:start position:0%
NPI uh is you know if you're learning
message<00:06:33.520><c> passing</c><00:06:33.840><c> for</c><00:06:34.000><c> the</c><00:06:34.160><c> first</c><00:06:34.400><c> time</c><00:06:34.960><c> you'd</c>

00:06:35.270 --> 00:06:35.280 align:start position:0%
message passing for the first time you'd
 

00:06:35.280 --> 00:06:37.350 align:start position:0%
message passing for the first time you'd
ask<00:06:35.520><c> how</c><00:06:35.680><c> do</c><00:06:35.759><c> I</c><00:06:35.919><c> send</c><00:06:36.080><c> a</c><00:06:36.319><c> message</c><00:06:36.880><c> and</c><00:06:37.120><c> someone</c>

00:06:37.350 --> 00:06:37.360 align:start position:0%
ask how do I send a message and someone
 

00:06:37.360 --> 00:06:39.909 align:start position:0%
ask how do I send a message and someone
says<00:06:37.680><c> well</c><00:06:37.840><c> use</c><00:06:38.160><c> NPI</c><00:06:38.720><c> send</c><00:06:39.440><c> and</c><00:06:39.680><c> then</c><00:06:39.759><c> you</c>

00:06:39.909 --> 00:06:39.919 align:start position:0%
says well use NPI send and then you
 

00:06:39.919 --> 00:06:42.070 align:start position:0%
says well use NPI send and then you
would<00:06:40.160><c> ask</c><00:06:40.560><c> well</c><00:06:41.039><c> is</c><00:06:41.280><c> it</c><00:06:41.440><c> synchronous</c><00:06:41.840><c> or</c>

00:06:42.070 --> 00:06:42.080 align:start position:0%
would ask well is it synchronous or
 

00:06:42.080 --> 00:06:44.390 align:start position:0%
would ask well is it synchronous or
asynchronous<00:06:42.720><c> does</c><00:06:42.880><c> it</c><00:06:43.280><c> does</c><00:06:43.600><c> if</c><00:06:43.840><c> I</c><00:06:43.919><c> issue</c><00:06:44.240><c> an</c>

00:06:44.390 --> 00:06:44.400 align:start position:0%
asynchronous does it does if I issue an
 

00:06:44.400 --> 00:06:46.629 align:start position:0%
asynchronous does it does if I issue an
NPI<00:06:44.880><c> send</c><00:06:45.120><c> and</c><00:06:45.360><c> there's</c><00:06:45.520><c> no</c><00:06:45.840><c> and</c><00:06:46.080><c> there</c><00:06:46.240><c> is</c><00:06:46.400><c> no</c>

00:06:46.629 --> 00:06:46.639 align:start position:0%
NPI send and there's no and there is no
 

00:06:46.639 --> 00:06:49.830 align:start position:0%
NPI send and there's no and there is no
receive<00:06:47.680><c> does</c><00:06:47.919><c> the</c><00:06:48.160><c> program</c><00:06:48.479><c> deadlock</c><00:06:48.960><c> or</c><00:06:49.199><c> not</c>

00:06:49.830 --> 00:06:49.840 align:start position:0%
receive does the program deadlock or not
 

00:06:49.840 --> 00:06:52.629 align:start position:0%
receive does the program deadlock or not
and<00:06:50.080><c> the</c><00:06:50.240><c> problem</c><00:06:50.479><c> is</c><00:06:50.720><c> that</c><00:06:51.039><c> you</c><00:06:51.280><c> don't</c><00:06:51.520><c> know</c>

00:06:52.629 --> 00:06:52.639 align:start position:0%
and the problem is that you don't know
 

00:06:52.639 --> 00:06:55.749 align:start position:0%
and the problem is that you don't know
uh<00:06:53.120><c> MPI</c><00:06:53.919><c> for</c><00:06:54.319><c> reasons</c><00:06:54.720><c> known</c><00:06:54.960><c> to</c><00:06:55.120><c> itself</c><00:06:55.600><c> which</c>

00:06:55.749 --> 00:06:55.759 align:start position:0%
uh MPI for reasons known to itself which
 

00:06:55.759 --> 00:06:58.390 align:start position:0%
uh MPI for reasons known to itself which
I<00:06:56.000><c> will</c><00:06:56.479><c> try</c><00:06:56.639><c> and</c><00:06:56.800><c> motivate</c><00:06:57.199><c> a</c><00:06:57.280><c> bit</c><00:06:57.440><c> later</c>

00:06:58.390 --> 00:06:58.400 align:start position:0%
I will try and motivate a bit later
 

00:06:58.400 --> 00:07:00.390 align:start position:0%
I will try and motivate a bit later
doesn't<00:06:58.800><c> define</c><00:06:59.120><c> if</c><00:06:59.360><c> NPI</c><00:06:59.919><c> send</c><00:07:00.160><c> is</c>

00:07:00.390 --> 00:07:00.400 align:start position:0%
doesn't define if NPI send is
 

00:07:00.400 --> 00:07:02.469 align:start position:0%
doesn't define if NPI send is
synchronous<00:07:01.039><c> or</c><00:07:01.360><c> asynchronous</c><00:07:02.000><c> if</c><00:07:02.160><c> it's</c><00:07:02.319><c> like</c>

00:07:02.469 --> 00:07:02.479 align:start position:0%
synchronous or asynchronous if it's like
 

00:07:02.479 --> 00:07:05.110 align:start position:0%
synchronous or asynchronous if it's like
sending<00:07:02.800><c> a</c><00:07:02.960><c> letter</c><00:07:03.120><c> or</c><00:07:03.360><c> making</c><00:07:03.520><c> a</c><00:07:03.759><c> phone</c><00:07:04.080><c> call</c>

00:07:05.110 --> 00:07:05.120 align:start position:0%
sending a letter or making a phone call
 

00:07:05.120 --> 00:07:07.670 align:start position:0%
sending a letter or making a phone call
and<00:07:05.759><c> this</c><00:07:06.000><c> can</c><00:07:06.240><c> cause</c><00:07:06.560><c> so</c><00:07:06.880><c> a</c><00:07:07.120><c> lot</c><00:07:07.199><c> of</c><00:07:07.360><c> people</c>

00:07:07.670 --> 00:07:07.680 align:start position:0%
and this can cause so a lot of people
 

00:07:07.680 --> 00:07:09.670 align:start position:0%
and this can cause so a lot of people
assume<00:07:08.080><c> that</c><00:07:08.240><c> NPI</c><00:07:08.800><c> send</c><00:07:09.120><c> a</c><00:07:09.360><c> lot</c><00:07:09.440><c> of</c><00:07:09.520><c> people</c>

00:07:09.670 --> 00:07:09.680 align:start position:0%
assume that NPI send a lot of people
 

00:07:09.680 --> 00:07:12.070 align:start position:0%
assume that NPI send a lot of people
assume<00:07:10.000><c> that</c><00:07:10.160><c> NPI</c><00:07:10.639><c> send</c><00:07:10.880><c> is</c><00:07:11.039><c> asynchronous.</c>

00:07:12.070 --> 00:07:12.080 align:start position:0%
assume that NPI send is asynchronous.
 

00:07:12.080 --> 00:07:15.110 align:start position:0%
assume that NPI send is asynchronous.
They<00:07:12.319><c> assume</c><00:07:12.720><c> that</c><00:07:13.120><c> NPI</c><00:07:13.680><c> send</c><00:07:14.000><c> will</c><00:07:14.720><c> be</c><00:07:14.880><c> like</c>

00:07:15.110 --> 00:07:15.120 align:start position:0%
They assume that NPI send will be like
 

00:07:15.120 --> 00:07:17.189 align:start position:0%
They assume that NPI send will be like
sending<00:07:15.440><c> an</c><00:07:15.520><c> email</c><00:07:15.759><c> be</c><00:07:15.919><c> a</c><00:07:16.080><c> fire</c><00:07:16.240><c> and</c><00:07:16.400><c> forget.</c>

00:07:17.189 --> 00:07:17.199 align:start position:0%
sending an email be a fire and forget.
 

00:07:17.199 --> 00:07:19.110 align:start position:0%
sending an email be a fire and forget.
Now<00:07:17.440><c> that</c><00:07:17.680><c> is</c><00:07:17.840><c> often</c><00:07:18.319><c> true</c><00:07:18.560><c> for</c><00:07:18.800><c> small</c>

00:07:19.110 --> 00:07:19.120 align:start position:0%
Now that is often true for small
 

00:07:19.120 --> 00:07:21.830 align:start position:0%
Now that is often true for small
messages.<00:07:19.759><c> Okay,</c><00:07:20.400><c> for</c><00:07:20.639><c> small</c><00:07:20.880><c> messages</c><00:07:21.360><c> NPI</c>

00:07:21.830 --> 00:07:21.840 align:start position:0%
messages. Okay, for small messages NPI
 

00:07:21.840 --> 00:07:23.830 align:start position:0%
messages. Okay, for small messages NPI
send<00:07:22.160><c> will</c><00:07:22.400><c> tend</c><00:07:22.639><c> to</c><00:07:22.800><c> be</c><00:07:22.960><c> asynchronous</c>

00:07:23.830 --> 00:07:23.840 align:start position:0%
send will tend to be asynchronous
 

00:07:23.840 --> 00:07:25.270 align:start position:0%
send will tend to be asynchronous
meaning<00:07:24.080><c> it</c><00:07:24.240><c> will</c><00:07:24.319><c> be</c><00:07:24.479><c> buffered.</c><00:07:24.960><c> What</c><00:07:25.120><c> will</c>

00:07:25.270 --> 00:07:25.280 align:start position:0%
meaning it will be buffered. What will
 

00:07:25.280 --> 00:07:27.510 align:start position:0%
meaning it will be buffered. What will
happen<00:07:25.440><c> is</c><00:07:25.680><c> NPI</c><00:07:26.160><c> will</c><00:07:26.319><c> say</c><00:07:26.560><c> okay</c><00:07:27.120><c> David's</c>

00:07:27.510 --> 00:07:27.520 align:start position:0%
happen is NPI will say okay David's
 

00:07:27.520 --> 00:07:29.430 align:start position:0%
happen is NPI will say okay David's
sending<00:07:27.759><c> a</c><00:07:27.919><c> small</c><00:07:28.240><c> message.</c><00:07:28.800><c> I'll</c><00:07:29.039><c> take</c><00:07:29.199><c> a</c>

00:07:29.430 --> 00:07:29.440 align:start position:0%
sending a small message. I'll take a
 

00:07:29.440 --> 00:07:30.950 align:start position:0%
sending a small message. I'll take a
copy<00:07:29.680><c> of</c><00:07:29.759><c> that</c><00:07:30.000><c> message</c><00:07:30.400><c> squirrel</c><00:07:30.720><c> it</c><00:07:30.800><c> away</c>

00:07:30.950 --> 00:07:30.960 align:start position:0%
copy of that message squirrel it away
 

00:07:30.960 --> 00:07:32.870 align:start position:0%
copy of that message squirrel it away
and<00:07:31.120><c> send</c><00:07:31.280><c> it</c><00:07:31.520><c> later</c><00:07:31.759><c> on.</c><00:07:32.319><c> So</c><00:07:32.560><c> that</c><00:07:32.720><c> means</c>

00:07:32.870 --> 00:07:32.880 align:start position:0%
and send it later on. So that means
 

00:07:32.880 --> 00:07:35.510 align:start position:0%
and send it later on. So that means
there's<00:07:33.199><c> less</c><00:07:33.599><c> likelihood</c><00:07:34.160><c> of</c><00:07:34.319><c> deadlock</c>

00:07:35.510 --> 00:07:35.520 align:start position:0%
there's less likelihood of deadlock
 

00:07:35.520 --> 00:07:37.510 align:start position:0%
there's less likelihood of deadlock
because<00:07:36.160><c> you</c><00:07:36.400><c> don't</c><00:07:36.560><c> have</c><00:07:36.720><c> to</c><00:07:36.800><c> have</c><00:07:36.880><c> a</c><00:07:37.120><c> receive</c>

00:07:37.510 --> 00:07:37.520 align:start position:0%
because you don't have to have a receive
 

00:07:37.520 --> 00:07:40.950 align:start position:0%
because you don't have to have a receive
pending.<00:07:38.319><c> However,</c><00:07:39.280><c> that's</c><00:07:39.599><c> not</c><00:07:39.840><c> guaranteed.</c>

00:07:40.950 --> 00:07:40.960 align:start position:0%
pending. However, that's not guaranteed.
 

00:07:40.960 --> 00:07:43.270 align:start position:0%
pending. However, that's not guaranteed.
So<00:07:41.120><c> you</c><00:07:41.360><c> should</c><00:07:41.520><c> always</c><00:07:41.919><c> program</c><00:07:42.400><c> as</c><00:07:42.560><c> if</c><00:07:42.800><c> NPI</c>

00:07:43.270 --> 00:07:43.280 align:start position:0%
So you should always program as if NPI
 

00:07:43.280 --> 00:07:45.189 align:start position:0%
So you should always program as if NPI
send<00:07:43.599><c> is</c><00:07:43.840><c> synchronous.</c><00:07:44.639><c> You</c><00:07:44.800><c> should</c><00:07:44.960><c> always</c>

00:07:45.189 --> 00:07:45.199 align:start position:0%
send is synchronous. You should always
 

00:07:45.199 --> 00:07:47.830 align:start position:0%
send is synchronous. You should always
make<00:07:45.360><c> sure</c><00:07:45.680><c> a</c><00:07:46.000><c> receive</c><00:07:46.400><c> is</c><00:07:46.560><c> posted</c><00:07:47.440><c> at</c><00:07:47.599><c> the</c>

00:07:47.830 --> 00:07:47.840 align:start position:0%
make sure a receive is posted at the
 

00:07:47.840 --> 00:07:49.830 align:start position:0%
make sure a receive is posted at the
time<00:07:48.000><c> you</c><00:07:48.319><c> post</c><00:07:48.639><c> NPI</c><00:07:49.120><c> send.</c><00:07:49.360><c> A</c><00:07:49.440><c> lot</c><00:07:49.520><c> of</c><00:07:49.599><c> people</c>

00:07:49.830 --> 00:07:49.840 align:start position:0%
time you post NPI send. A lot of people
 

00:07:49.840 --> 00:07:51.749 align:start position:0%
time you post NPI send. A lot of people
forget<00:07:50.080><c> that.</c><00:07:50.720><c> And</c><00:07:50.880><c> this</c><00:07:51.120><c> the</c><00:07:51.360><c> problem</c><00:07:51.520><c> is</c>

00:07:51.749 --> 00:07:51.759 align:start position:0%
forget that. And this the problem is
 

00:07:51.759 --> 00:07:54.790 align:start position:0%
forget that. And this the problem is
that<00:07:52.319><c> the</c><00:07:52.960><c> typically</c><00:07:54.000><c> small</c><00:07:54.240><c> messages</c><00:07:54.639><c> are</c>

00:07:54.790 --> 00:07:54.800 align:start position:0%
that the typically small messages are
 

00:07:54.800 --> 00:07:56.309 align:start position:0%
that the typically small messages are
buffered<00:07:55.120><c> but</c><00:07:55.280><c> large</c><00:07:55.599><c> messages</c><00:07:55.919><c> are</c><00:07:56.160><c> not</c>

00:07:56.309 --> 00:07:56.319 align:start position:0%
buffered but large messages are not
 

00:07:56.319 --> 00:07:58.629 align:start position:0%
buffered but large messages are not
buffered.<00:07:57.199><c> This</c><00:07:57.440><c> thresholds</c><00:07:58.000><c> varies</c><00:07:58.400><c> with</c>

00:07:58.629 --> 00:07:58.639 align:start position:0%
buffered. This thresholds varies with
 

00:07:58.639 --> 00:08:00.710 align:start position:0%
buffered. This thresholds varies with
implementation.<00:07:59.759><c> So</c><00:08:00.000><c> that</c><00:08:00.160><c> your</c><00:08:00.319><c> code</c><00:08:00.560><c> may</c>

00:08:00.710 --> 00:08:00.720 align:start position:0%
implementation. So that your code may
 

00:08:00.720 --> 00:08:02.070 align:start position:0%
implementation. So that your code may
run<00:08:00.879><c> on</c><00:08:01.039><c> one</c><00:08:01.199><c> machine</c><00:08:01.440><c> and</c><00:08:01.520><c> deadlock</c><00:08:01.919><c> on</c>

00:08:02.070 --> 00:08:02.080 align:start position:0%
run on one machine and deadlock on
 

00:08:02.080 --> 00:08:04.710 align:start position:0%
run on one machine and deadlock on
another.<00:08:03.039><c> And</c><00:08:03.280><c> so</c><00:08:03.520><c> you</c><00:08:03.680><c> know</c><00:08:03.840><c> this</c><00:08:04.000><c> is</c><00:08:04.080><c> a</c><00:08:04.400><c> real</c>

00:08:04.710 --> 00:08:04.720 align:start position:0%
another. And so you know this is a real
 

00:08:04.720 --> 00:08:06.629 align:start position:0%
another. And so you know this is a real
problem.<00:08:05.199><c> So</c><00:08:05.280><c> you</c><00:08:05.520><c> really</c><00:08:05.680><c> have</c><00:08:05.919><c> to</c><00:08:06.160><c> to</c><00:08:06.400><c> to</c>

00:08:06.629 --> 00:08:06.639 align:start position:0%
problem. So you really have to to to
 

00:08:06.639 --> 00:08:09.029 align:start position:0%
problem. So you really have to to to
worry<00:08:06.800><c> about</c><00:08:06.960><c> this</c><00:08:07.199><c> for</c><00:08:07.440><c> portability.</c><00:08:08.560><c> Uh</c><00:08:08.879><c> a</c>

00:08:09.029 --> 00:08:09.039 align:start position:0%
worry about this for portability. Uh a
 

00:08:09.039 --> 00:08:11.029 align:start position:0%
worry about this for portability. Uh a
correct<00:08:09.360><c> code</c><00:08:09.599><c> will</c><00:08:09.840><c> run</c><00:08:10.000><c> with</c><00:08:10.080><c> all</c><00:08:10.319><c> NPI</c><00:08:10.800><c> send</c>

00:08:11.029 --> 00:08:11.039 align:start position:0%
correct code will run with all NPI send
 

00:08:11.039 --> 00:08:13.589 align:start position:0%
correct code will run with all NPI send
calls<00:08:11.360><c> replaced</c><00:08:11.680><c> by</c><00:08:11.840><c> NPIs</c><00:08:12.400><c> send.</c><00:08:12.639><c> NPI</c><00:08:13.280><c> send</c><00:08:13.440><c> is</c>

00:08:13.589 --> 00:08:13.599 align:start position:0%
calls replaced by NPIs send. NPI send is
 

00:08:13.599 --> 00:08:15.430 align:start position:0%
calls replaced by NPIs send. NPI send is
synchronous<00:08:14.080><c> send.</c><00:08:14.479><c> It's</c><00:08:14.720><c> guaranteed</c>

00:08:15.430 --> 00:08:15.440 align:start position:0%
synchronous send. It's guaranteed
 

00:08:15.440 --> 00:08:17.510 align:start position:0%
synchronous send. It's guaranteed
synchronous.<00:08:16.240><c> There's</c><00:08:16.479><c> no</c><00:08:16.639><c> receive</c><00:08:17.039><c> posted.</c>

00:08:17.510 --> 00:08:17.520 align:start position:0%
synchronous. There's no receive posted.
 

00:08:17.520 --> 00:08:19.510 align:start position:0%
synchronous. There's no receive posted.
It<00:08:17.680><c> will</c><00:08:17.919><c> wait</c><00:08:18.319><c> and</c><00:08:18.560><c> then</c><00:08:18.800><c> potentially</c><00:08:19.280><c> wait</c>

00:08:19.510 --> 00:08:19.520 align:start position:0%
It will wait and then potentially wait
 

00:08:19.520 --> 00:08:23.270 align:start position:0%
It will wait and then potentially wait
forever.<00:08:20.400><c> And</c><00:08:20.639><c> so</c><00:08:20.960><c> you</c><00:08:21.120><c> know</c><00:08:21.840><c> that</c><00:08:22.560><c> um</c><00:08:22.879><c> that</c><00:08:23.120><c> is</c>

00:08:23.270 --> 00:08:23.280 align:start position:0%
forever. And so you know that um that is
 

00:08:23.280 --> 00:08:26.710 align:start position:0%
forever. And so you know that um that is
a<00:08:23.440><c> big</c><00:08:23.599><c> issue.</c><00:08:24.479><c> You</c><00:08:24.720><c> can</c><00:08:24.960><c> ask</c><00:08:25.199><c> for</c><00:08:25.440><c> NPI</c><00:08:26.000><c> to</c><00:08:26.160><c> do</c>

00:08:26.710 --> 00:08:26.720 align:start position:0%
a big issue. You can ask for NPI to do
 

00:08:26.720 --> 00:08:28.629 align:start position:0%
a big issue. You can ask for NPI to do
an<00:08:27.039><c> asynchronous</c><00:08:27.599><c> send,</c><00:08:27.840><c> a</c><00:08:28.000><c> buffered</c><00:08:28.400><c> send,</c>

00:08:28.629 --> 00:08:28.639 align:start position:0%
an asynchronous send, a buffered send,
 

00:08:28.639 --> 00:08:31.189 align:start position:0%
an asynchronous send, a buffered send,
but with<00:08:28.800><c> NPIB</c><00:08:29.520><c> send,</c><00:08:30.319><c> but</c><00:08:30.560><c> it's</c><00:08:30.800><c> really</c>

00:08:31.189 --> 00:08:31.199 align:start position:0%
but with NPIB send, but it's really
 

00:08:31.199 --> 00:08:33.430 align:start position:0%
but with NPIB send, but it's really
rather<00:08:31.520><c> a</c><00:08:31.759><c> horrible</c><00:08:32.159><c> routine</c><00:08:32.560><c> and</c><00:08:32.719><c> that</c><00:08:32.880><c> I</c>

00:08:33.430 --> 00:08:33.440 align:start position:0%
rather a horrible routine and that I
 

00:08:33.440 --> 00:08:35.269 align:start position:0%
rather a horrible routine and that I
it's<00:08:33.760><c> not</c><00:08:34.000><c> very</c><00:08:34.240><c> widely</c><00:08:34.640><c> used.</c><00:08:34.880><c> It's</c><00:08:35.039><c> in</c><00:08:35.200><c> the</c>

00:08:35.269 --> 00:08:35.279 align:start position:0%
it's not very widely used. It's in the
 

00:08:35.279 --> 00:08:37.430 align:start position:0%
it's not very widely used. It's in the
stand.<00:08:35.599><c> It's</c><00:08:35.760><c> not</c><00:08:35.839><c> very</c><00:08:36.080><c> widely</c><00:08:36.399><c> used.</c><00:08:36.959><c> It's</c><00:08:37.279><c> a</c>

00:08:37.430 --> 00:08:37.440 align:start position:0%
stand. It's not very widely used. It's a
 

00:08:37.440 --> 00:08:40.149 align:start position:0%
stand. It's not very widely used. It's a
nasty<00:08:37.919><c> routine</c><00:08:39.279><c> um</c><00:08:39.360><c> for</c><00:08:39.599><c> various</c><00:08:39.919><c> reasons,</c>

00:08:40.149 --> 00:08:40.159 align:start position:0%
nasty routine um for various reasons,
 

00:08:40.159 --> 00:08:42.070 align:start position:0%
nasty routine um for various reasons,
but<00:08:40.399><c> this</c><00:08:40.560><c> is</c><00:08:40.640><c> a</c><00:08:40.719><c> major</c><00:08:41.039><c> portability</c><00:08:41.680><c> problem.</c>

00:08:42.070 --> 00:08:42.080 align:start position:0%
but this is a major portability problem.
 

00:08:42.080 --> 00:08:43.430 align:start position:0%
but this is a major portability problem.
So,<00:08:42.240><c> one</c><00:08:42.399><c> of</c><00:08:42.399><c> the</c><00:08:42.560><c> classic</c><00:08:42.880><c> reasons</c><00:08:43.200><c> when</c>

00:08:43.430 --> 00:08:43.440 align:start position:0%
So, one of the classic reasons when
 

00:08:43.440 --> 00:08:47.110 align:start position:0%
So, one of the classic reasons when
people<00:08:44.320><c> um</c><00:08:45.440><c> whoops,</c><00:08:46.480><c> I</c><00:08:46.640><c> don't</c><00:08:46.720><c> know</c><00:08:46.800><c> why</c><00:08:46.959><c> I'm</c>

00:08:47.110 --> 00:08:47.120 align:start position:0%
people um whoops, I don't know why I'm
 

00:08:47.120 --> 00:08:48.389 align:start position:0%
people um whoops, I don't know why I'm
doing<00:08:47.279><c> that.</c><00:08:47.519><c> One</c><00:08:47.680><c> of</c><00:08:47.760><c> the</c><00:08:47.839><c> classic</c><00:08:48.160><c> reasons</c>

00:08:48.389 --> 00:08:48.399 align:start position:0%
doing that. One of the classic reasons
 

00:08:48.399 --> 00:08:49.829 align:start position:0%
doing that. One of the classic reasons
where<00:08:48.640><c> people</c><00:08:48.800><c> say</c><00:08:48.959><c> there's</c><00:08:49.120><c> a</c><00:08:49.279><c> bug</c><00:08:49.440><c> on</c><00:08:49.680><c> your</c>

00:08:49.829 --> 00:08:49.839 align:start position:0%
where people say there's a bug on your
 

00:08:49.839 --> 00:08:52.389 align:start position:0%
where people say there's a bug on your
machine,<00:08:50.720><c> my</c><00:08:50.959><c> program</c><00:08:51.360><c> runs</c><00:08:51.680><c> on</c><00:08:51.920><c> this</c><00:08:52.160><c> machine</c>

00:08:52.389 --> 00:08:52.399 align:start position:0%
machine, my program runs on this machine
 

00:08:52.399 --> 00:08:53.910 align:start position:0%
machine, my program runs on this machine
but<00:08:52.640><c> not</c><00:08:52.720><c> on</c><00:08:52.880><c> yours</c><00:08:53.360><c> is</c><00:08:53.519><c> because</c><00:08:53.680><c> they've</c>

00:08:53.910 --> 00:08:53.920 align:start position:0%
but not on yours is because they've
 

00:08:53.920 --> 00:08:56.150 align:start position:0%
but not on yours is because they've
assumed<00:08:54.240><c> NPI</c><00:08:54.720><c> send</c><00:08:54.880><c> is</c><00:08:55.040><c> asynchronous.</c><00:08:56.000><c> And</c>

00:08:56.150 --> 00:08:56.160 align:start position:0%
assumed NPI send is asynchronous. And
 

00:08:56.160 --> 00:08:58.790 align:start position:0%
assumed NPI send is asynchronous. And
we'll<00:08:56.480><c> cover</c><00:08:56.720><c> in</c><00:08:57.040><c> some</c><00:08:57.760><c> uh</c><00:08:58.240><c> uh</c><00:08:58.399><c> when</c><00:08:58.560><c> we</c><00:08:58.640><c> look</c>

00:08:58.790 --> 00:08:58.800 align:start position:0%
we'll cover in some uh uh when we look
 

00:08:58.800 --> 00:09:01.350 align:start position:0%
we'll cover in some uh uh when we look
at<00:08:58.880><c> the</c><00:08:59.040><c> internals</c><00:08:59.600><c> why</c><00:08:59.839><c> NPI</c><00:09:00.480><c> decides</c><00:09:00.880><c> not</c><00:09:01.120><c> to</c>

00:09:01.350 --> 00:09:01.360 align:start position:0%
at the internals why NPI decides not to
 

00:09:01.360 --> 00:09:03.509 align:start position:0%
at the internals why NPI decides not to
define<00:09:01.680><c> if</c><00:09:02.160><c> NPI</c><00:09:02.640><c> send</c><00:09:02.800><c> is</c><00:09:02.959><c> synchronous</c><00:09:03.279><c> or</c>

00:09:03.509 --> 00:09:03.519 align:start position:0%
define if NPI send is synchronous or
 

00:09:03.519 --> 00:09:06.070 align:start position:0%
define if NPI send is synchronous or
asynchronous

00:09:06.070 --> 00:09:06.080 align:start position:0%
asynchronous
 

00:09:06.080 --> 00:09:08.949 align:start position:0%
asynchronous
data<00:09:06.399><c> sizes.</c><00:09:07.120><c> Um</c>

00:09:08.949 --> 00:09:08.959 align:start position:0%
data sizes. Um
 

00:09:08.959 --> 00:09:11.590 align:start position:0%
data sizes. Um
it's<00:09:09.200><c> not</c><00:09:09.360><c> such</c><00:09:09.600><c> a</c><00:09:09.760><c> big</c><00:09:10.000><c> deal</c><00:09:10.240><c> now</c><00:09:10.560><c> when</c><00:09:11.360><c> there</c>

00:09:11.590 --> 00:09:11.600 align:start position:0%
it's not such a big deal now when there
 

00:09:11.600 --> 00:09:14.150 align:start position:0%
it's not such a big deal now when there
are<00:09:11.760><c> so</c><00:09:12.000><c> few</c><00:09:12.240><c> compilers</c><00:09:12.800><c> and</c><00:09:13.040><c> hardware</c><00:09:13.920><c> and</c>

00:09:14.150 --> 00:09:14.160 align:start position:0%
are so few compilers and hardware and
 

00:09:14.160 --> 00:09:16.230 align:start position:0%
are so few compilers and hardware and
operating<00:09:14.640><c> systems.</c><00:09:15.040><c> you</c><00:09:15.279><c> know,</c><00:09:15.600><c> 15</c><00:09:15.920><c> years,</c>

00:09:16.230 --> 00:09:16.240 align:start position:0%
operating systems. you know, 15 years,
 

00:09:16.240 --> 00:09:17.509 align:start position:0%
operating systems. you know, 15 years,
20<00:09:16.399><c> years</c><00:09:16.560><c> ago</c><00:09:16.720><c> with</c><00:09:16.959><c> the</c><00:09:17.120><c> lots</c><00:09:17.279><c> of</c><00:09:17.360><c> different</c>

00:09:17.509 --> 00:09:17.519 align:start position:0%
20 years ago with the lots of different
 

00:09:17.519 --> 00:09:20.870 align:start position:0%
20 years ago with the lots of different
compilers,<00:09:18.720><c> um</c><00:09:19.440><c> you</c><00:09:20.080><c> there</c><00:09:20.320><c> were</c><00:09:20.560><c> so</c><00:09:20.800><c> for</c>

00:09:20.870 --> 00:09:20.880 align:start position:0%
compilers, um you there were so for
 

00:09:20.880 --> 00:09:23.509 align:start position:0%
compilers, um you there were so for
example,<00:09:21.760><c> it</c><00:09:21.920><c> used</c><00:09:22.080><c> to</c><00:09:22.160><c> be</c><00:09:22.320><c> on</c><00:09:22.560><c> Cray</c><00:09:22.880><c> systems</c><00:09:23.279><c> a</c>

00:09:23.509 --> 00:09:23.519 align:start position:0%
example, it used to be on Cray systems a
 

00:09:23.519 --> 00:09:26.710 align:start position:0%
example, it used to be on Cray systems a
real<00:09:24.000><c> was</c><00:09:24.240><c> eight</c><00:09:24.480><c> bytes.</c><00:09:25.279><c> Uh</c><00:09:25.600><c> was</c><00:09:25.839><c> like</c><00:09:26.240><c> a</c><00:09:26.399><c> real</c>

00:09:26.710 --> 00:09:26.720 align:start position:0%
real was eight bytes. Uh was like a real
 

00:09:26.720 --> 00:09:29.190 align:start position:0%
real was eight bytes. Uh was like a real
was<00:09:27.120><c> on</c><00:09:27.279><c> a</c><00:09:27.440><c> Cray</c><00:09:27.760><c> system</c><00:09:28.240><c> or</c><00:09:28.480><c> a</c><00:09:28.640><c> float</c><00:09:28.880><c> on</c><00:09:29.040><c> a</c>

00:09:29.190 --> 00:09:29.200 align:start position:0%
was on a Cray system or a float on a
 

00:09:29.200 --> 00:09:30.550 align:start position:0%
was on a Cray system or a float on a
Cray<00:09:29.440><c> system</c><00:09:29.680><c> was</c><00:09:29.839><c> what</c><00:09:30.000><c> everyone</c><00:09:30.240><c> else</c><00:09:30.399><c> would</c>

00:09:30.550 --> 00:09:30.560 align:start position:0%
Cray system was what everyone else would
 

00:09:30.560 --> 00:09:33.350 align:start position:0%
Cray system was what everyone else would
call<00:09:30.720><c> a</c><00:09:30.880><c> double.</c><00:09:31.680><c> Um</c><00:09:32.160><c> but</c><00:09:32.480><c> be</c><00:09:32.640><c> careful</c><00:09:32.880><c> of</c><00:09:33.040><c> data</c>

00:09:33.350 --> 00:09:33.360 align:start position:0%
call a double. Um but be careful of data
 

00:09:33.360 --> 00:09:36.949 align:start position:0%
call a double. Um but be careful of data
size<00:09:33.760><c> or</c><00:09:34.080><c> layout.</c><00:09:35.120><c> Um</c><00:09:35.680><c> be</c><00:09:35.920><c> careful</c><00:09:36.080><c> of</c><00:09:36.320><c> compile</c>

00:09:36.949 --> 00:09:36.959 align:start position:0%
size or layout. Um be careful of compile
 

00:09:36.959 --> 00:09:39.269 align:start position:0%
size or layout. Um be careful of compile
pad<00:09:37.200><c> infrastructures.</c><00:09:38.160><c> So</c><00:09:38.640><c> it's</c><00:09:38.880><c> just</c><00:09:39.040><c> a</c>

00:09:39.269 --> 00:09:39.279 align:start position:0%
pad infrastructures. So it's just a
 

00:09:39.279 --> 00:09:43.590 align:start position:0%
pad infrastructures. So it's just a
general<00:09:39.839><c> it's</c><00:09:40.080><c> just</c><00:09:40.240><c> a</c><00:09:40.480><c> general</c><00:09:41.200><c> um</c><00:09:42.240><c> um</c>

00:09:43.590 --> 00:09:43.600 align:start position:0%
general it's just a general um um
 

00:09:43.600 --> 00:09:45.670 align:start position:0%
general it's just a general um um
comment.<00:09:44.240><c> Try</c><00:09:44.480><c> not</c><00:09:44.720><c> to</c><00:09:44.880><c> assume</c><00:09:45.120><c> that</c><00:09:45.279><c> integers</c>

00:09:45.670 --> 00:09:45.680 align:start position:0%
comment. Try not to assume that integers
 

00:09:45.680 --> 00:09:47.990 align:start position:0%
comment. Try not to assume that integers
are<00:09:45.839><c> four</c><00:09:46.000><c> bytes</c><00:09:46.800><c> or</c><00:09:47.040><c> that</c><00:09:47.200><c> that</c><00:09:47.519><c> reals</c><00:09:47.920><c> are</c>

00:09:47.990 --> 00:09:48.000 align:start position:0%
are four bytes or that that reals are
 

00:09:48.000 --> 00:09:50.949 align:start position:0%
are four bytes or that that reals are
four<00:09:48.240><c> bytes</c><00:09:48.560><c> or</c><00:09:48.720><c> doubles.</c><00:09:49.279><c> Well,</c><00:09:50.399><c> use</c><00:09:50.800><c> there</c>

00:09:50.949 --> 00:09:50.959 align:start position:0%
four bytes or doubles. Well, use there
 

00:09:50.959 --> 00:09:53.430 align:start position:0%
four bytes or doubles. Well, use there
are<00:09:51.120><c> various</c><00:09:51.360><c> runtime</c><00:09:51.760><c> inquiries.</c><00:09:52.720><c> The</c><00:09:53.279><c> thing</c>

00:09:53.430 --> 00:09:53.440 align:start position:0%
are various runtime inquiries. The thing
 

00:09:53.440 --> 00:09:56.310 align:start position:0%
are various runtime inquiries. The thing
which<00:09:53.600><c> which</c><00:09:53.839><c> I</c><00:09:54.080><c> do</c><00:09:54.240><c> see</c><00:09:54.399><c> that</c><00:09:54.640><c> people</c><00:09:55.440><c> do</c><00:09:55.839><c> do</c>

00:09:56.310 --> 00:09:56.320 align:start position:0%
which which I do see that people do do
 

00:09:56.320 --> 00:09:58.070 align:start position:0%
which which I do see that people do do
fairly<00:09:56.720><c> badly</c><00:09:57.040><c> is</c><00:09:57.279><c> they</c><00:09:57.360><c> they</c><00:09:57.680><c> write</c><00:09:57.839><c> a</c>

00:09:58.070 --> 00:09:58.080 align:start position:0%
fairly badly is they they write a
 

00:09:58.080 --> 00:10:01.110 align:start position:0%
fairly badly is they they write a
program<00:09:58.399><c> which</c><00:09:58.720><c> uses</c><00:09:59.279><c> floats</c><00:09:59.839><c> or</c><00:10:00.000><c> or</c><00:10:00.080><c> or</c><00:10:00.560><c> or</c>

00:10:01.110 --> 00:10:01.120 align:start position:0%
program which uses floats or or or or
 

00:10:01.120 --> 00:10:03.269 align:start position:0%
program which uses floats or or or or
reals<00:10:02.080><c> which</c><00:10:02.320><c> are</c><00:10:02.480><c> single</c><00:10:02.720><c> precision</c><00:10:03.120><c> then</c>

00:10:03.269 --> 00:10:03.279 align:start position:0%
reals which are single precision then
 

00:10:03.279 --> 00:10:05.190 align:start position:0%
reals which are single precision then
they<00:10:03.519><c> want</c><00:10:03.760><c> to</c><00:10:04.399><c> convert</c><00:10:04.720><c> to</c><00:10:04.880><c> double</c>

00:10:05.190 --> 00:10:05.200 align:start position:0%
they want to convert to double
 

00:10:05.200 --> 00:10:07.509 align:start position:0%
they want to convert to double
precision.<00:10:06.080><c> Uh</c><00:10:06.399><c> so</c><00:10:06.560><c> they</c><00:10:06.800><c> do</c><00:10:06.959><c> they</c><00:10:07.200><c> have</c><00:10:07.279><c> some</c>

00:10:07.509 --> 00:10:07.519 align:start position:0%
precision. Uh so they do they have some
 

00:10:07.519 --> 00:10:09.750 align:start position:0%
precision. Uh so they do they have some
magic<00:10:07.839><c> flag</c><00:10:08.240><c> minus</c><00:10:08.640><c> minus</c><00:10:08.959><c> convert</c><00:10:09.279><c> floats</c><00:10:09.600><c> to</c>

00:10:09.750 --> 00:10:09.760 align:start position:0%
magic flag minus minus convert floats to
 

00:10:09.760 --> 00:10:13.190 align:start position:0%
magic flag minus minus convert floats to
doubles<00:10:10.880><c> um</c><00:10:11.200><c> or</c><00:10:11.519><c> they</c><00:10:11.760><c> put</c><00:10:12.000><c> it</c><00:10:12.080><c> in</c><00:10:12.240><c> forrand</c>

00:10:13.190 --> 00:10:13.200 align:start position:0%
doubles um or they put it in forrand
 

00:10:13.200 --> 00:10:15.269 align:start position:0%
doubles um or they put it in forrand
that's<00:10:13.519><c> not</c><00:10:13.760><c> a</c><00:10:14.000><c> good</c><00:10:14.160><c> thing</c><00:10:14.320><c> to</c><00:10:14.560><c> do</c><00:10:14.800><c> because</c><00:10:15.120><c> of</c>

00:10:15.269 --> 00:10:15.279 align:start position:0%
that's not a good thing to do because of
 

00:10:15.279 --> 00:10:17.910 align:start position:0%
that's not a good thing to do because of
course<00:10:15.440><c> in</c><00:10:15.680><c> an</c><00:10:15.839><c> MPI</c><00:10:16.399><c> code</c><00:10:17.120><c> not</c><00:10:17.360><c> only</c><00:10:17.600><c> do</c><00:10:17.760><c> you</c>

00:10:17.910 --> 00:10:17.920 align:start position:0%
course in an MPI code not only do you
 

00:10:17.920 --> 00:10:20.470 align:start position:0%
course in an MPI code not only do you
have<00:10:18.480><c> um</c><00:10:18.720><c> floats</c><00:10:19.120><c> and</c><00:10:19.279><c> doubles</c><00:10:19.680><c> or</c><00:10:19.920><c> reals</c><00:10:20.320><c> and</c>

00:10:20.470 --> 00:10:20.480 align:start position:0%
have um floats and doubles or reals and
 

00:10:20.480 --> 00:10:23.190 align:start position:0%
have um floats and doubles or reals and
double<00:10:20.720><c> positions</c><00:10:21.200><c> in</c><00:10:21.440><c> your</c><00:10:22.640><c> as</c><00:10:22.880><c> as</c>

00:10:23.190 --> 00:10:23.200 align:start position:0%
double positions in your as as
 

00:10:23.200 --> 00:10:25.110 align:start position:0%
double positions in your as as
declaration<00:10:23.680><c> to</c><00:10:23.839><c> your</c><00:10:24.079><c> language.</c><00:10:24.720><c> You</c><00:10:24.880><c> also</c>

00:10:25.110 --> 00:10:25.120 align:start position:0%
declaration to your language. You also
 

00:10:25.120 --> 00:10:27.350 align:start position:0%
declaration to your language. You also
pass<00:10:25.360><c> them</c><00:10:25.519><c> to</c><00:10:25.600><c> to</c><00:10:25.839><c> NPI</c><00:10:26.399><c> calls</c><00:10:26.800><c> and</c><00:10:27.040><c> you</c><00:10:27.200><c> have</c>

00:10:27.350 --> 00:10:27.360 align:start position:0%
pass them to to NPI calls and you have
 

00:10:27.360 --> 00:10:29.990 align:start position:0%
pass them to to NPI calls and you have
to<00:10:27.440><c> then</c><00:10:27.680><c> pass</c><00:10:28.000><c> NPI</c><00:10:28.480><c> float</c><00:10:28.800><c> or</c><00:10:28.959><c> NPI</c><00:10:29.440><c> double</c><00:10:29.760><c> or</c>

00:10:29.990 --> 00:10:30.000 align:start position:0%
to then pass NPI float or NPI double or
 

00:10:30.000 --> 00:10:33.030 align:start position:0%
to then pass NPI float or NPI double or
NPI<00:10:30.399><c> double</c><00:10:30.640><c> precision</c><00:10:30.959><c> or</c><00:10:31.120><c> NPI</c><00:10:31.839><c> NPI</c><00:10:32.399><c> real.</c>

00:10:33.030 --> 00:10:33.040 align:start position:0%
NPI double precision or NPI NPI real.
 

00:10:33.040 --> 00:10:36.230 align:start position:0%
NPI double precision or NPI NPI real.
And<00:10:33.279><c> so</c><00:10:33.600><c> you</c><00:10:33.760><c> know</c><00:10:34.560><c> if</c><00:10:34.800><c> you</c><00:10:34.959><c> want</c><00:10:35.200><c> to</c><00:10:35.440><c> code</c>

00:10:36.230 --> 00:10:36.240 align:start position:0%
And so you know if you want to code
 

00:10:36.240 --> 00:10:38.630 align:start position:0%
And so you know if you want to code
which<00:10:36.560><c> runs</c><00:10:36.959><c> in</c><00:10:37.600><c> both</c><00:10:37.920><c> single</c><00:10:38.160><c> and</c><00:10:38.399><c> double</c>

00:10:38.630 --> 00:10:38.640 align:start position:0%
which runs in both single and double
 

00:10:38.640 --> 00:10:41.430 align:start position:0%
which runs in both single and double
precision<00:10:39.200><c> for</c><00:10:39.360><c> example</c><00:10:40.399><c> you</c><00:10:40.720><c> can't</c><00:10:41.040><c> use</c>

00:10:41.430 --> 00:10:41.440 align:start position:0%
precision for example you can't use
 

00:10:41.440 --> 00:10:44.069 align:start position:0%
precision for example you can't use
magic<00:10:41.920><c> compiler</c><00:10:42.399><c> flags</c><00:10:42.959><c> because</c><00:10:43.600><c> you</c><00:10:43.839><c> also</c>

00:10:44.069 --> 00:10:44.079 align:start position:0%
magic compiler flags because you also
 

00:10:44.079 --> 00:10:46.069 align:start position:0%
magic compiler flags because you also
need<00:10:44.160><c> to</c><00:10:44.320><c> change</c><00:10:44.480><c> the</c><00:10:44.720><c> NPI</c><00:10:45.279><c> definitions</c><00:10:45.839><c> as</c>

00:10:46.069 --> 00:10:46.079 align:start position:0%
need to change the NPI definitions as
 

00:10:46.079 --> 00:10:48.550 align:start position:0%
need to change the NPI definitions as
well<00:10:46.880><c> and</c><00:10:47.120><c> I</c><00:10:47.360><c> you</c><00:10:47.519><c> know</c><00:10:47.600><c> I</c><00:10:47.839><c> would</c><00:10:48.000><c> say</c><00:10:48.240><c> the</c>

00:10:48.550 --> 00:10:48.560 align:start position:0%
well and I you know I would say the
 

00:10:48.560 --> 00:10:50.710 align:start position:0%
well and I you know I would say the
right<00:10:48.720><c> way</c><00:10:48.880><c> to</c><00:10:49.120><c> do</c><00:10:49.200><c> this</c><00:10:49.760><c> if</c><00:10:50.000><c> from</c><00:10:50.320><c> the</c><00:10:50.480><c> start</c>

00:10:50.710 --> 00:10:50.720 align:start position:0%
right way to do this if from the start
 

00:10:50.720 --> 00:10:52.389 align:start position:0%
right way to do this if from the start
you<00:10:50.959><c> want</c><00:10:51.120><c> to</c><00:10:51.200><c> write</c><00:10:51.360><c> a</c><00:10:51.600><c> code</c><00:10:51.760><c> which</c><00:10:52.000><c> can</c><00:10:52.160><c> be</c><00:10:52.240><c> in</c>

00:10:52.389 --> 00:10:52.399 align:start position:0%
you want to write a code which can be in
 

00:10:52.399 --> 00:10:55.110 align:start position:0%
you want to write a code which can be in
single<00:10:52.720><c> double</c><00:10:53.040><c> precision</c><00:10:54.160><c> or</c><00:10:54.399><c> heaven</c><00:10:54.720><c> forbid</c>

00:10:55.110 --> 00:10:55.120 align:start position:0%
single double precision or heaven forbid
 

00:10:55.120 --> 00:10:57.910 align:start position:0%
single double precision or heaven forbid
half<00:10:55.360><c> precision</c>

00:10:57.910 --> 00:10:57.920 align:start position:0%
half precision
 

00:10:57.920 --> 00:11:00.470 align:start position:0%
half precision
you're<00:10:58.160><c> doing</c><00:10:58.399><c> machine</c><00:10:58.640><c> learning</c><00:10:59.680><c> um</c><00:11:00.079><c> it's</c>

00:11:00.470 --> 00:11:00.480 align:start position:0%
you're doing machine learning um it's
 

00:11:00.480 --> 00:11:01.910 align:start position:0%
you're doing machine learning um it's
easiest<00:11:00.720><c> thing</c><00:11:00.800><c> to</c><00:11:00.959><c> do</c><00:11:01.040><c> is</c><00:11:01.200><c> to</c><00:11:01.279><c> use</c><00:11:01.360><c> an</c><00:11:01.519><c> include</c>

00:11:01.910 --> 00:11:01.920 align:start position:0%
easiest thing to do is to use an include
 

00:11:01.920 --> 00:11:05.750 align:start position:0%
easiest thing to do is to use an include
file.<00:11:02.399><c> So,</c><00:11:02.640><c> what</c><00:11:02.880><c> you</c><00:11:03.040><c> do</c><00:11:03.519><c> is</c><00:11:03.760><c> you</c><00:11:03.920><c> have</c><00:11:04.079><c> a</c><00:11:04.959><c> an</c><00:11:05.440><c> a</c>

00:11:05.750 --> 00:11:05.760 align:start position:0%
file. So, what you do is you have a an a
 

00:11:05.760 --> 00:11:08.310 align:start position:0%
file. So, what you do is you have a an a
header<00:11:06.160><c> file,</c><00:11:06.560><c> an</c><00:11:06.800><c> include</c><00:11:07.200><c> file.</c><00:11:07.920><c> I</c><00:11:08.079><c> can</c><00:11:08.160><c> see</c>

00:11:08.310 --> 00:11:08.320 align:start position:0%
header file, an include file. I can see
 

00:11:08.320 --> 00:11:11.430 align:start position:0%
header file, an include file. I can see
there's<00:11:08.480><c> a</c><00:11:08.640><c> question</c><00:11:08.880><c> here.</c><00:11:09.120><c> Sorry.</c>

00:11:11.430 --> 00:11:11.440 align:start position:0%
there's a question here. Sorry.
 

00:11:11.440 --> 00:11:12.790 align:start position:0%
there's a question here. Sorry.
I'm<00:11:11.760><c> slightly</c><00:11:12.160><c> struggling</c><00:11:12.399><c> for</c><00:11:12.560><c> screen</c>

00:11:12.790 --> 00:11:12.800 align:start position:0%
I'm slightly struggling for screen
 

00:11:12.800 --> 00:11:15.910 align:start position:0%
I'm slightly struggling for screen
facing<00:11:13.279><c> on</c><00:11:13.440><c> my</c><00:11:13.600><c> laptop,</c><00:11:13.920><c> so</c><00:11:14.160><c> apologies.</c>

00:11:15.910 --> 00:11:15.920 align:start position:0%
facing on my laptop, so apologies.
 

00:11:15.920 --> 00:11:19.190 align:start position:0%
facing on my laptop, so apologies.
Uh,<00:11:17.040><c> okay.</c><00:11:17.360><c> So,</c><00:11:17.760><c> no,</c><00:11:18.000><c> no.</c><00:11:18.320><c> So,</c><00:11:18.480><c> so,</c><00:11:18.720><c> so,</c><00:11:18.959><c> so</c>

00:11:19.190 --> 00:11:19.200 align:start position:0%
Uh, okay. So, no, no. So, so, so, so
 

00:11:19.200 --> 00:11:22.389 align:start position:0%
Uh, okay. So, no, no. So, so, so, so
Mark<00:11:19.360><c> has</c><00:11:19.600><c> asked</c><00:11:19.760><c> about</c><00:11:20.000><c> NPI</c><00:11:20.640><c> MPI.</c><00:11:21.600><c> No.</c><00:11:22.160><c> So,</c>

00:11:22.389 --> 00:11:22.399 align:start position:0%
Mark has asked about NPI MPI. No. So,
 

00:11:22.399 --> 00:11:25.190 align:start position:0%
Mark has asked about NPI MPI. No. So,
the<00:11:22.640><c> correct</c><00:11:23.120><c> way</c><00:11:23.839><c> to</c><00:11:24.079><c> avoid</c><00:11:24.480><c> deadlock</c><00:11:24.959><c> is</c><00:11:25.120><c> to</c>

00:11:25.190 --> 00:11:25.200 align:start position:0%
the correct way to avoid deadlock is to
 

00:11:25.200 --> 00:11:28.470 align:start position:0%
the correct way to avoid deadlock is to
use<00:11:25.360><c> NPIcent.</c><00:11:26.640><c> Okay.</c><00:11:27.360><c> That's</c><00:11:27.680><c> that</c><00:11:28.160><c> that</c><00:11:28.399><c> is</c>

00:11:28.470 --> 00:11:28.480 align:start position:0%
use NPIcent. Okay. That's that that is
 

00:11:28.480 --> 00:11:30.069 align:start position:0%
use NPIcent. Okay. That's that that is
the<00:11:28.720><c> right</c><00:11:28.880><c> thing</c><00:11:28.959><c> to</c><00:11:29.200><c> do.</c><00:11:29.360><c> Okay.</c><00:11:29.680><c> So</c><00:11:29.839><c> we'll</c>

00:11:30.069 --> 00:11:30.079 align:start position:0%
the right thing to do. Okay. So we'll
 

00:11:30.079 --> 00:11:31.509 align:start position:0%
the right thing to do. Okay. So we'll
cover<00:11:30.320><c> that</c><00:11:30.480><c> a</c><00:11:30.640><c> bit</c><00:11:30.800><c> when</c><00:11:30.959><c> we</c><00:11:31.120><c> look</c><00:11:31.279><c> at</c>

00:11:31.509 --> 00:11:31.519 align:start position:0%
cover that a bit when we look at
 

00:11:31.519 --> 00:11:33.990 align:start position:0%
cover that a bit when we look at
performance<00:11:31.920><c> and</c><00:11:32.160><c> such</c><00:11:32.480><c> like</c><00:11:32.880><c> but</c><00:11:33.120><c> NPI</c><00:11:33.839><c> said</c>

00:11:33.990 --> 00:11:34.000 align:start position:0%
performance and such like but NPI said
 

00:11:34.000 --> 00:11:36.389 align:start position:0%
performance and such like but NPI said
it's<00:11:34.160><c> the</c><00:11:34.320><c> right</c><00:11:34.560><c> thing</c><00:11:34.640><c> to</c><00:11:34.880><c> do.</c><00:11:35.279><c> Okay,</c>

00:11:36.389 --> 00:11:36.399 align:start position:0%
it's the right thing to do. Okay,
 

00:11:36.399 --> 00:11:39.590 align:start position:0%
it's the right thing to do. Okay,
because<00:11:36.880><c> NPI</c><00:11:37.440><c> is</c><00:11:37.600><c> said</c><00:11:37.760><c> will</c><00:11:37.920><c> avoid</c><00:11:38.240><c> deadlock</c>

00:11:39.590 --> 00:11:39.600 align:start position:0%
because NPI is said will avoid deadlock
 

00:11:39.600 --> 00:11:43.110 align:start position:0%
because NPI is said will avoid deadlock
um<00:11:40.000><c> by</c><00:11:40.320><c> being</c><00:11:40.720><c> by</c><00:11:41.040><c> by</c><00:11:41.279><c> by</c><00:11:41.600><c> being</c><00:11:42.160><c> um</c><00:11:42.320><c> ace</c><00:11:42.640><c> well</c>

00:11:43.110 --> 00:11:43.120 align:start position:0%
um by being by by by being um ace well
 

00:11:43.120 --> 00:11:45.990 align:start position:0%
um by being by by by being um ace well
in<00:11:43.440><c> NPI</c><00:11:44.000><c> terms</c><00:11:44.320><c> non-blocking.</c>

00:11:45.990 --> 00:11:46.000 align:start position:0%
in NPI terms non-blocking.
 

00:11:46.000 --> 00:11:49.269 align:start position:0%
in NPI terms non-blocking.
So<00:11:46.560><c> however</c><00:11:47.680><c> you</c><00:11:47.920><c> can</c><00:11:48.160><c> you</c><00:11:48.480><c> will</c><00:11:48.640><c> probably</c><00:11:49.040><c> get</c>

00:11:49.269 --> 00:11:49.279 align:start position:0%
So however you can you will probably get
 

00:11:49.279 --> 00:11:51.350 align:start position:0%
So however you can you will probably get
if<00:11:49.519><c> you</c><00:11:49.680><c> don't</c><00:11:49.839><c> use</c><00:11:50.000><c> if</c><00:11:50.240><c> you</c><00:11:50.320><c> just</c><00:11:50.480><c> use</c><00:11:50.720><c> NPI</c>

00:11:51.350 --> 00:11:51.360 align:start position:0%
if you don't use if you just use NPI
 

00:11:51.360 --> 00:11:54.069 align:start position:0%
if you don't use if you just use NPI
send<00:11:51.760><c> you</c><00:11:51.920><c> will</c><00:11:52.079><c> probably</c><00:11:52.399><c> get</c><00:11:52.640><c> away</c><00:11:52.880><c> with</c><00:11:53.120><c> it</c>

00:11:54.069 --> 00:11:54.079 align:start position:0%
send you will probably get away with it
 

00:11:54.079 --> 00:11:55.990 align:start position:0%
send you will probably get away with it
for<00:11:54.320><c> small</c><00:11:54.640><c> messages</c><00:11:55.120><c> because</c><00:11:55.360><c> they</c><00:11:55.600><c> will</c><00:11:55.760><c> not</c>

00:11:55.990 --> 00:11:56.000 align:start position:0%
for small messages because they will not
 

00:11:56.000 --> 00:11:58.310 align:start position:0%
for small messages because they will not
you<00:11:56.240><c> will</c><00:11:56.480><c> not</c><00:11:56.640><c> get</c><00:11:56.880><c> deadlock.</c><00:11:57.519><c> Okay.</c>

00:11:58.310 --> 00:11:58.320 align:start position:0%
you will not get deadlock. Okay.
 

00:11:58.320 --> 00:12:01.750 align:start position:0%
you will not get deadlock. Okay.
However,<00:11:59.120><c> to</c><00:11:59.360><c> safely</c><00:11:59.839><c> program</c><00:12:00.160><c> with</c><00:12:00.399><c> NPI</c><00:12:00.959><c> send</c>

00:12:01.750 --> 00:12:01.760 align:start position:0%
However, to safely program with NPI send
 

00:12:01.760 --> 00:12:03.829 align:start position:0%
However, to safely program with NPI send
and<00:12:02.160><c> guarantee</c><00:12:02.640><c> your</c><00:12:02.880><c> code</c><00:12:03.040><c> is</c><00:12:03.279><c> deadlock</c>

00:12:03.829 --> 00:12:03.839 align:start position:0%
and guarantee your code is deadlock
 

00:12:03.839 --> 00:12:06.069 align:start position:0%
and guarantee your code is deadlock
free,<00:12:04.560><c> then</c><00:12:04.880><c> in</c><00:12:05.120><c> practice,</c><00:12:05.519><c> you</c><00:12:05.760><c> will</c><00:12:05.839><c> have</c><00:12:06.000><c> to</c>

00:12:06.069 --> 00:12:06.079 align:start position:0%
free, then in practice, you will have to
 

00:12:06.079 --> 00:12:08.389 align:start position:0%
free, then in practice, you will have to
use<00:12:06.240><c> NPI</c><00:12:07.040><c> send.</c><00:12:07.440><c> There</c><00:12:07.839><c> it's</c><00:12:08.000><c> a</c><00:12:08.160><c> slightly</c>

00:12:08.389 --> 00:12:08.399 align:start position:0%
use NPI send. There it's a slightly
 

00:12:08.399 --> 00:12:09.509 align:start position:0%
use NPI send. There it's a slightly
subtle<00:12:08.720><c> thing.</c><00:12:08.800><c> It's</c><00:12:08.959><c> one</c><00:12:09.120><c> of</c><00:12:09.120><c> the</c><00:12:09.200><c> annoying</c>

00:12:09.509 --> 00:12:09.519 align:start position:0%
subtle thing. It's one of the annoying
 

00:12:09.519 --> 00:12:11.590 align:start position:0%
subtle thing. It's one of the annoying
things<00:12:09.680><c> about</c><00:12:09.920><c> NPI</c><00:12:10.800><c> that</c><00:12:11.120><c> one</c><00:12:11.279><c> of</c><00:12:11.279><c> the</c><00:12:11.440><c> most</c>

00:12:11.590 --> 00:12:11.600 align:start position:0%
things about NPI that one of the most
 

00:12:11.600 --> 00:12:13.910 align:start position:0%
things about NPI that one of the most
basic<00:12:12.000><c> questions</c><00:12:12.240><c> you</c><00:12:12.480><c> ask</c><00:12:12.720><c> is,</c><00:12:13.279><c> is</c><00:12:13.440><c> the</c><00:12:13.680><c> send</c>

00:12:13.910 --> 00:12:13.920 align:start position:0%
basic questions you ask is, is the send
 

00:12:13.920 --> 00:12:15.829 align:start position:0%
basic questions you ask is, is the send
routine<00:12:14.240><c> synchronous</c><00:12:14.639><c> or</c><00:12:14.800><c> asynchronous?</c>

00:12:15.829 --> 00:12:15.839 align:start position:0%
routine synchronous or asynchronous?
 

00:12:15.839 --> 00:12:17.750 align:start position:0%
routine synchronous or asynchronous?
Does<00:12:16.000><c> it</c><00:12:16.160><c> wait</c><00:12:16.399><c> or</c><00:12:16.639><c> does</c><00:12:16.720><c> it</c><00:12:16.880><c> not</c><00:12:17.120><c> wait?</c><00:12:17.360><c> Is</c><00:12:17.600><c> is</c>

00:12:17.750 --> 00:12:17.760 align:start position:0%
Does it wait or does it not wait? Is is
 

00:12:17.760 --> 00:12:20.310 align:start position:0%
Does it wait or does it not wait? Is is
is<00:12:18.079><c> under.</c><00:12:18.720><c> But</c><00:12:18.880><c> yes,</c><00:12:19.040><c> MPN</c><00:12:19.839><c> is</c><00:12:20.000><c> the</c><00:12:20.079><c> right</c><00:12:20.240><c> way</c>

00:12:20.310 --> 00:12:20.320 align:start position:0%
is under. But yes, MPN is the right way
 

00:12:20.320 --> 00:12:30.470 align:start position:0%
is under. But yes, MPN is the right way
to<00:12:20.480><c> program.</c><00:12:20.880><c> Does</c><00:12:21.040><c> that</c><00:12:21.200><c> make</c><00:12:21.440><c> sense,</c><00:12:21.760><c> Mark?</c>

00:12:30.470 --> 00:12:30.480 align:start position:0%
 
 

00:12:30.480 --> 00:12:32.629 align:start position:0%
 
Yeah,

00:12:32.629 --> 00:12:32.639 align:start position:0%
Yeah,
 

00:12:32.639 --> 00:12:34.710 align:start position:0%
Yeah,
&gt;&gt; but<00:12:32.959><c> but</c><00:12:33.040><c> but</c><00:12:33.680><c> what</c><00:12:33.920><c> what</c><00:12:34.160><c> a</c><00:12:34.240><c> lot</c><00:12:34.320><c> of</c><00:12:34.399><c> people</c><00:12:34.560><c> do</c>

00:12:34.710 --> 00:12:34.720 align:start position:0%
&gt;&gt; but but but what what a lot of people do
 

00:12:34.720 --> 00:12:36.550 align:start position:0%
&gt;&gt; but but but what what a lot of people do
is<00:12:34.880><c> they</c><00:12:35.040><c> don't</c><00:12:35.200><c> use,</c><00:12:35.839><c> they</c><00:12:36.000><c> use</c><00:12:36.160><c> send</c><00:12:36.399><c> and</c>

00:12:36.550 --> 00:12:36.560 align:start position:0%
is they don't use, they use send and
 

00:12:36.560 --> 00:12:37.590 align:start position:0%
is they don't use, they use send and
they<00:12:36.720><c> get</c><00:12:36.800><c> away</c><00:12:37.040><c> with</c><00:12:37.120><c> it</c><00:12:37.279><c> because</c><00:12:37.360><c> they've</c>

00:12:37.590 --> 00:12:37.600 align:start position:0%
they get away with it because they've
 

00:12:37.600 --> 00:12:39.590 align:start position:0%
they get away with it because they've
got<00:12:37.760><c> small</c><00:12:38.000><c> messages</c><00:12:38.560><c> and</c><00:12:38.880><c> then</c><00:12:39.040><c> they</c><00:12:39.279><c> run</c><00:12:39.440><c> a</c>

00:12:39.590 --> 00:12:39.600 align:start position:0%
got small messages and then they run a
 

00:12:39.600 --> 00:12:41.110 align:start position:0%
got small messages and then they run a
big<00:12:39.839><c> problem</c><00:12:40.160><c> or</c><00:12:40.240><c> they</c><00:12:40.399><c> run</c><00:12:40.560><c> on</c><00:12:40.720><c> a</c><00:12:40.880><c> different</c>

00:12:41.110 --> 00:12:41.120 align:start position:0%
big problem or they run on a different
 

00:12:41.120 --> 00:12:42.710 align:start position:0%
big problem or they run on a different
machine<00:12:41.360><c> and</c><00:12:41.519><c> the</c><00:12:41.680><c> code</c><00:12:41.920><c> suddenly</c><00:12:42.240><c> deadlocks</c>

00:12:42.710 --> 00:12:42.720 align:start position:0%
machine and the code suddenly deadlocks
 

00:12:42.720 --> 00:12:44.310 align:start position:0%
machine and the code suddenly deadlocks
because<00:12:42.959><c> they</c><00:12:43.120><c> have</c><00:12:43.360><c> incorrectly</c><00:12:44.000><c> assumed</c>

00:12:44.310 --> 00:12:44.320 align:start position:0%
because they have incorrectly assumed
 

00:12:44.320 --> 00:12:47.590 align:start position:0%
because they have incorrectly assumed
the<00:12:44.560><c> NPI</c><00:12:45.040><c> send</c><00:12:45.760><c> the</c><00:12:46.000><c> NPI</c><00:12:46.720><c> send</c><00:12:47.120><c> so</c><00:12:47.200><c> I</c><00:12:47.360><c> have</c><00:12:47.440><c> to</c>

00:12:47.590 --> 00:12:47.600 align:start position:0%
the NPI send the NPI send so I have to
 

00:12:47.600 --> 00:12:49.910 align:start position:0%
the NPI send the NPI send so I have to
be<00:12:47.760><c> careful</c><00:12:48.399><c> that</c><00:12:48.560><c> the</c><00:12:48.800><c> blocking</c><00:12:49.200><c> form</c><00:12:49.519><c> NPI</c>

00:12:49.910 --> 00:12:49.920 align:start position:0%
be careful that the blocking form NPI
 

00:12:49.920 --> 00:12:53.590 align:start position:0%
be careful that the blocking form NPI
send<00:12:50.079><c> is</c><00:12:50.320><c> asynchronous.</c><00:12:51.680><c> Um</c><00:12:52.959><c> so</c><00:12:53.200><c> if</c><00:12:53.440><c> you</c><00:12:53.519><c> want</c>

00:12:53.590 --> 00:12:53.600 align:start position:0%
send is asynchronous. Um so if you want
 

00:12:53.600 --> 00:12:54.870 align:start position:0%
send is asynchronous. Um so if you want
to<00:12:53.760><c> do</c><00:12:53.920><c> what</c><00:12:54.079><c> you</c><00:12:54.240><c> should</c><00:12:54.320><c> do</c><00:12:54.399><c> is</c><00:12:54.560><c> you</c><00:12:54.720><c> should</c>

00:12:54.870 --> 00:12:54.880 align:start position:0%
to do what you should do is you should
 

00:12:54.880 --> 00:12:56.949 align:start position:0%
to do what you should do is you should
have<00:12:54.959><c> a</c><00:12:55.040><c> header</c><00:12:55.360><c> file</c><00:12:55.600><c> or</c><00:12:55.839><c> equivalent</c><00:12:56.160><c> in</c><00:12:56.320><c> C++</c>

00:12:56.949 --> 00:12:56.959 align:start position:0%
have a header file or equivalent in C++
 

00:12:56.959 --> 00:12:59.030 align:start position:0%
have a header file or equivalent in C++
I<00:12:57.200><c> guess</c><00:12:57.440><c> but</c><00:12:57.680><c> in</c><00:12:57.920><c> C</c><00:12:58.079><c> you</c><00:12:58.240><c> would</c><00:12:58.399><c> do</c><00:12:58.480><c> typeless</c>

00:12:59.030 --> 00:12:59.040 align:start position:0%
I guess but in C you would do typeless
 

00:12:59.040 --> 00:13:01.110 align:start position:0%
I guess but in C you would do typeless
float<00:12:59.360><c> real</c><00:12:59.680><c> number</c><00:13:00.079><c> and</c><00:13:00.320><c> nowhere</c><00:13:00.639><c> in</c><00:13:00.880><c> your</c>

00:13:01.110 --> 00:13:01.120 align:start position:0%
float real number and nowhere in your
 

00:13:01.120 --> 00:13:05.750 align:start position:0%
float real number and nowhere in your
code<00:13:01.839><c> do</c><00:13:02.079><c> you</c><00:13:02.240><c> say</c><00:13:02.880><c> um</c><00:13:04.240><c> do</c><00:13:04.480><c> you</c><00:13:04.639><c> say</c><00:13:05.200><c> um</c><00:13:05.440><c> you</c><00:13:05.600><c> do</c>

00:13:05.750 --> 00:13:05.760 align:start position:0%
code do you say um do you say um you do
 

00:13:05.760 --> 00:13:09.670 align:start position:0%
code do you say um do you say um you do
you<00:13:05.920><c> say</c><00:13:06.160><c> float</c><00:13:06.880><c> or</c><00:13:07.279><c> npi</c><00:13:08.079><c> or</c><00:13:08.399><c> npi</c><00:13:08.880><c> float?</c><00:13:09.440><c> You</c>

00:13:09.670 --> 00:13:09.680 align:start position:0%
you say float or npi or npi float? You
 

00:13:09.680 --> 00:13:12.230 align:start position:0%
you say float or npi or npi float? You
say<00:13:09.839><c> say</c><00:13:10.079><c> hash</c><00:13:10.399><c> define</c><00:13:10.720><c> npi</c><00:13:11.200><c> real</c><00:13:11.440><c> number</c><00:13:11.760><c> npi</c>

00:13:12.230 --> 00:13:12.240 align:start position:0%
say say hash define npi real number npi
 

00:13:12.240 --> 00:13:15.509 align:start position:0%
say say hash define npi real number npi
float<00:13:13.360><c> and</c><00:13:13.600><c> then</c><00:13:13.760><c> you</c><00:13:14.079><c> say</c><00:13:14.480><c> uh</c><00:13:14.720><c> type</c><00:13:15.120><c> type</c>

00:13:15.509 --> 00:13:15.519 align:start position:0%
float and then you say uh type type
 

00:13:15.519 --> 00:13:17.670 align:start position:0%
float and then you say uh type type
their<00:13:15.680><c> float</c><00:13:16.079><c> real</c><00:13:16.320><c> number</c><00:13:16.880><c> and</c><00:13:17.040><c> so</c><00:13:17.200><c> when</c><00:13:17.519><c> in</c>

00:13:17.670 --> 00:13:17.680 align:start position:0%
their float real number and so when in
 

00:13:17.680 --> 00:13:19.829 align:start position:0%
their float real number and so when in
your<00:13:17.839><c> in</c><00:13:18.079><c> your</c><00:13:18.320><c> code</c><00:13:18.560><c> you</c><00:13:18.720><c> do</c><00:13:18.959><c> real</c><00:13:19.200><c> number</c><00:13:19.519><c> x</c>

00:13:19.829 --> 00:13:19.839 align:start position:0%
your in your code you do real number x
 

00:13:19.839 --> 00:13:23.670 align:start position:0%
your in your code you do real number x
which<00:13:20.160><c> here</c><00:13:20.560><c> is</c><00:13:20.880><c> a</c><00:13:21.680><c> uh</c><00:13:22.160><c> float</c><00:13:22.800><c> and</c><00:13:23.040><c> you</c><00:13:23.200><c> npi</c>

00:13:23.670 --> 00:13:23.680 align:start position:0%
which here is a uh float and you npi
 

00:13:23.680 --> 00:13:25.430 align:start position:0%
which here is a uh float and you npi
routine<00:13:24.000><c> and</c><00:13:24.160><c> you</c><00:13:24.320><c> pass</c><00:13:24.560><c> npi</c><00:13:24.959><c> real</c><00:13:25.200><c> number</c>

00:13:25.430 --> 00:13:25.440 align:start position:0%
routine and you pass npi real number
 

00:13:25.440 --> 00:13:27.430 align:start position:0%
routine and you pass npi real number
which<00:13:25.600><c> is</c><00:13:25.680><c> also</c><00:13:25.920><c> an</c><00:13:26.000><c> npi</c><00:13:26.480><c> float</c><00:13:26.959><c> but</c><00:13:27.200><c> if</c><00:13:27.360><c> you</c>

00:13:27.430 --> 00:13:27.440 align:start position:0%
which is also an npi float but if you
 

00:13:27.440 --> 00:13:29.030 align:start position:0%
which is also an npi float but if you
want<00:13:27.519><c> to</c><00:13:27.680><c> change</c><00:13:28.000><c> double</c><00:13:28.320><c> precision</c><00:13:28.720><c> you</c><00:13:28.880><c> just</c>

00:13:29.030 --> 00:13:29.040 align:start position:0%
want to change double precision you just
 

00:13:29.040 --> 00:13:31.110 align:start position:0%
want to change double precision you just
change<00:13:29.200><c> these</c><00:13:29.519><c> two</c><00:13:29.760><c> numbers</c><00:13:30.160><c> these</c><00:13:30.480><c> two</c><00:13:30.880><c> the</c>

00:13:31.110 --> 00:13:31.120 align:start position:0%
change these two numbers these two the
 

00:13:31.120 --> 00:13:32.629 align:start position:0%
change these two numbers these two the
two<00:13:31.279><c> these</c><00:13:31.519><c> two</c><00:13:31.680><c> definitions</c><00:13:32.079><c> in</c><00:13:32.240><c> the</c><00:13:32.320><c> header</c>

00:13:32.629 --> 00:13:32.639 align:start position:0%
two these two definitions in the header
 

00:13:32.639 --> 00:13:34.870 align:start position:0%
two these two definitions in the header
file<00:13:33.120><c> recompile</c><00:13:33.920><c> and</c><00:13:34.079><c> the</c><00:13:34.320><c> whole</c><00:13:34.399><c> thing</c><00:13:34.639><c> works</c>

00:13:34.870 --> 00:13:34.880 align:start position:0%
file recompile and the whole thing works
 

00:13:34.880 --> 00:13:37.590 align:start position:0%
file recompile and the whole thing works
for<00:13:35.120><c> you.</c><00:13:35.920><c> So</c><00:13:36.320><c> um</c><00:13:36.480><c> you</c><00:13:36.639><c> know</c><00:13:36.720><c> I'm</c><00:13:36.959><c> not</c><00:13:37.040><c> a</c><00:13:37.279><c> fan</c><00:13:37.440><c> of</c>

00:13:37.590 --> 00:13:37.600 align:start position:0%
for you. So um you know I'm not a fan of
 

00:13:37.600 --> 00:13:39.350 align:start position:0%
for you. So um you know I'm not a fan of
using<00:13:37.920><c> magic</c><00:13:38.320><c> compiler</c><00:13:38.720><c> flag</c><00:13:39.040><c> because</c><00:13:39.279><c> of</c>

00:13:39.350 --> 00:13:39.360 align:start position:0%
using magic compiler flag because of
 

00:13:39.360 --> 00:13:41.190 align:start position:0%
using magic compiler flag because of
course<00:13:39.519><c> again</c><00:13:39.760><c> the</c><00:13:40.000><c> compiler</c><00:13:40.480><c> flags</c><00:13:40.800><c> are</c><00:13:41.040><c> by</c>

00:13:41.190 --> 00:13:41.200 align:start position:0%
course again the compiler flags are by
 

00:13:41.200 --> 00:13:43.590 align:start position:0%
course again the compiler flags are by
definition<00:13:41.920><c> compiler</c><00:13:42.480><c> specific</c><00:13:42.880><c> and</c><00:13:43.360><c> those</c>

00:13:43.590 --> 00:13:43.600 align:start position:0%
definition compiler specific and those
 

00:13:43.600 --> 00:13:45.030 align:start position:0%
definition compiler specific and those
flags<00:13:43.920><c> may</c><00:13:44.160><c> not</c><00:13:44.320><c> exist</c><00:13:44.480><c> on</c><00:13:44.639><c> a</c><00:13:44.880><c> different</c>

00:13:45.030 --> 00:13:45.040 align:start position:0%
flags may not exist on a different
 

00:13:45.040 --> 00:13:48.069 align:start position:0%
flags may not exist on a different
compiler

00:13:48.069 --> 00:13:48.079 align:start position:0%
 
 

00:13:48.079 --> 00:13:50.790 align:start position:0%
 
in<00:13:48.399><c> forran</c><00:13:49.120><c> forran</c><00:13:49.519><c> is</c><00:13:49.600><c> a</c><00:13:49.760><c> very</c><00:13:50.000><c> sophisticated</c>

00:13:50.790 --> 00:13:50.800 align:start position:0%
in forran forran is a very sophisticated
 

00:13:50.800 --> 00:13:53.590 align:start position:0%
in forran forran is a very sophisticated
type<00:13:51.200><c> system</c><00:13:52.240><c> uh</c><00:13:52.399><c> and</c><00:13:52.800><c> you</c><00:13:52.959><c> could</c><00:13:53.120><c> you</c><00:13:53.279><c> do</c><00:13:53.440><c> the</c>

00:13:53.590 --> 00:13:53.600 align:start position:0%
type system uh and you could you do the
 

00:13:53.600 --> 00:13:56.150 align:start position:0%
type system uh and you could you do the
same<00:13:53.760><c> thing</c><00:13:54.079><c> in</c><00:13:54.160><c> in</c><00:13:54.399><c> forran</c><00:13:55.519><c> uh</c><00:13:55.680><c> you</c><00:13:55.920><c> would</c>

00:13:56.150 --> 00:13:56.160 align:start position:0%
same thing in in forran uh you would
 

00:13:56.160 --> 00:13:58.230 align:start position:0%
same thing in in forran uh you would
have<00:13:56.320><c> a</c><00:13:56.480><c> module</c><00:13:56.880><c> which</c><00:13:57.040><c> define</c><00:13:57.360><c> the</c><00:13:57.600><c> precision</c>

00:13:58.230 --> 00:13:58.240 align:start position:0%
have a module which define the precision
 

00:13:58.240 --> 00:13:59.990 align:start position:0%
have a module which define the precision
you'd<00:13:58.480><c> have</c><00:13:58.560><c> a</c><00:13:58.720><c> real</c><00:13:58.959><c> number</c><00:13:59.199><c> and</c><00:13:59.360><c> npi</c><00:13:59.760><c> real</c>

00:13:59.990 --> 00:14:00.000 align:start position:0%
you'd have a real number and npi real
 

00:14:00.000 --> 00:14:02.310 align:start position:0%
you'd have a real number and npi real
number<00:14:00.480><c> and</c><00:14:00.720><c> you</c><00:14:00.959><c> do</c><00:14:01.440><c> um</c><00:14:01.920><c> you</c><00:14:02.160><c> would</c><00:14:02.240><c> do</c>

00:14:02.310 --> 00:14:02.320 align:start position:0%
number and you do um you would do
 

00:14:02.320 --> 00:14:03.829 align:start position:0%
number and you do um you would do
something<00:14:02.480><c> like</c><00:14:02.639><c> this</c><00:14:02.800><c> use</c><00:14:03.120><c> precision</c><00:14:03.519><c> real</c>

00:14:03.829 --> 00:14:03.839 align:start position:0%
something like this use precision real
 

00:14:03.839 --> 00:14:06.629 align:start position:0%
something like this use precision real
kind<00:14:04.160><c> of</c><00:14:04.320><c> real</c><00:14:04.560><c> number</c><00:14:04.880><c> x</c><00:14:05.360><c> np</c><00:14:05.680><c> I</c><00:14:05.760><c> reg</c><00:14:06.079><c> X</c><00:14:06.320><c> NPI</c>

00:14:06.629 --> 00:14:06.639 align:start position:0%
kind of real number x np I reg X NPI
 

00:14:06.639 --> 00:14:08.310 align:start position:0%
kind of real number x np I reg X NPI
real<00:14:06.959><c> number</c><00:14:07.199><c> and</c><00:14:07.360><c> these</c><00:14:07.600><c> are</c><00:14:07.760><c> then</c><00:14:08.000><c> defined</c>

00:14:08.310 --> 00:14:08.320 align:start position:0%
real number and these are then defined
 

00:14:08.320 --> 00:14:10.230 align:start position:0%
real number and these are then defined
as<00:14:08.639><c> here</c><00:14:08.959><c> single</c><00:14:09.279><c> precision</c><00:14:09.680><c> but</c><00:14:09.839><c> it'</c><00:14:10.000><c> be</c><00:14:10.079><c> a</c>

00:14:10.230 --> 00:14:10.240 align:start position:0%
as here single precision but it' be a
 

00:14:10.240 --> 00:14:12.870 align:start position:0%
as here single precision but it' be a
trivial<00:14:10.560><c> change</c><00:14:10.800><c> to</c><00:14:11.120><c> change</c><00:14:11.360><c> that</c><00:14:11.680><c> to</c><00:14:12.399><c> that</c><00:14:12.639><c> to</c>

00:14:12.870 --> 00:14:12.880 align:start position:0%
trivial change to change that to that to
 

00:14:12.880 --> 00:14:15.430 align:start position:0%
trivial change to change that to that to
1.0<00:14:13.360><c> or</c><00:14:13.519><c> dn</c><00:14:13.920><c> that's</c><00:14:14.160><c> npi</c><00:14:14.639><c> double</c><00:14:14.880><c> precision</c>

00:14:15.430 --> 00:14:15.440 align:start position:0%
1.0 or dn that's npi double precision
 

00:14:15.440 --> 00:14:17.829 align:start position:0%
1.0 or dn that's npi double precision
and<00:14:15.680><c> your</c><00:14:15.839><c> code</c><00:14:16.079><c> then</c><00:14:16.320><c> compiles</c><00:14:16.720><c> and</c><00:14:16.959><c> runs</c><00:14:17.519><c> in</c>

00:14:17.829 --> 00:14:17.839 align:start position:0%
and your code then compiles and runs in
 

00:14:17.839 --> 00:14:19.670 align:start position:0%
and your code then compiles and runs in
both<00:14:18.079><c> precisions</c>

00:14:19.670 --> 00:14:19.680 align:start position:0%
both precisions
 

00:14:19.680 --> 00:14:22.949 align:start position:0%
both precisions
and<00:14:20.000><c> I</c><00:14:20.639><c> well</c><00:14:21.839><c> there's</c><00:14:22.079><c> a</c><00:14:22.240><c> lot</c><00:14:22.399><c> of</c><00:14:22.480><c> reasons</c><00:14:22.720><c> why</c>

00:14:22.949 --> 00:14:22.959 align:start position:0%
and I well there's a lot of reasons why
 

00:14:22.959 --> 00:14:26.069 align:start position:0%
and I well there's a lot of reasons why
I<00:14:23.199><c> think</c><00:14:23.279><c> this</c><00:14:23.440><c> is</c><00:14:23.680><c> good</c><00:14:24.399><c> um</c><00:14:25.360><c> you</c><00:14:25.600><c> may</c><00:14:25.760><c> say</c><00:14:25.920><c> I</c>

00:14:26.069 --> 00:14:26.079 align:start position:0%
I think this is good um you may say I
 

00:14:26.079 --> 00:14:27.350 align:start position:0%
I think this is good um you may say I
only<00:14:26.240><c> ever</c><00:14:26.480><c> want</c><00:14:26.639><c> to</c><00:14:26.720><c> run</c><00:14:26.880><c> in</c><00:14:27.120><c> double</c>

00:14:27.350 --> 00:14:27.360 align:start position:0%
only ever want to run in double
 

00:14:27.360 --> 00:14:29.910 align:start position:0%
only ever want to run in double
precision<00:14:27.839><c> but</c><00:14:28.160><c> actually</c>

00:14:29.910 --> 00:14:29.920 align:start position:0%
precision but actually
 

00:14:29.920 --> 00:14:31.430 align:start position:0%
precision but actually
um

00:14:31.430 --> 00:14:31.440 align:start position:0%
um
 

00:14:31.440 --> 00:14:35.030 align:start position:0%
um
reproducibility<00:14:32.320><c> is</c><00:14:32.560><c> a</c><00:14:33.360><c> well</c><00:14:33.680><c> reproducibly</c>

00:14:35.030 --> 00:14:35.040 align:start position:0%
reproducibility is a well reproducibly
 

00:14:35.040 --> 00:14:37.269 align:start position:0%
reproducibility is a well reproducibly
reproducibility<00:14:36.000><c> stroke</c><00:14:36.320><c> verification</c><00:14:36.880><c> is</c><00:14:37.120><c> a</c>

00:14:37.269 --> 00:14:37.279 align:start position:0%
reproducibility stroke verification is a
 

00:14:37.279 --> 00:14:39.110 align:start position:0%
reproducibility stroke verification is a
real<00:14:37.440><c> problem</c><00:14:37.920><c> in</c><00:14:38.240><c> scientific</c><00:14:38.639><c> and</c><00:14:38.800><c> technical</c>

00:14:39.110 --> 00:14:39.120 align:start position:0%
real problem in scientific and technical
 

00:14:39.120 --> 00:14:40.949 align:start position:0%
real problem in scientific and technical
programming<00:14:39.600><c> because</c><00:14:39.760><c> you're</c><00:14:40.000><c> using</c><00:14:40.399><c> 13point</c>

00:14:40.949 --> 00:14:40.959 align:start position:0%
programming because you're using 13point
 

00:14:40.959 --> 00:14:43.110 align:start position:0%
programming because you're using 13point
numbers<00:14:41.279><c> which</c><00:14:41.519><c> aren't</c><00:14:41.760><c> guaranted</c><00:14:42.880><c> And</c>

00:14:43.110 --> 00:14:43.120 align:start position:0%
numbers which aren't guaranted And
 

00:14:43.120 --> 00:14:44.389 align:start position:0%
numbers which aren't guaranted And
you'll<00:14:43.279><c> get</c><00:14:43.440><c> typically</c><00:14:43.920><c> get</c><00:14:44.079><c> different</c>

00:14:44.389 --> 00:14:44.399 align:start position:0%
you'll get typically get different
 

00:14:44.399 --> 00:14:45.590 align:start position:0%
you'll get typically get different
numbers<00:14:44.720><c> on</c><00:14:44.959><c> different</c><00:14:45.199><c> numbers</c><00:14:45.440><c> of</c>

00:14:45.590 --> 00:14:45.600 align:start position:0%
numbers on different numbers of
 

00:14:45.600 --> 00:14:48.550 align:start position:0%
numbers on different numbers of
processes,<00:14:46.560><c> different</c><00:14:46.800><c> numbers</c><00:14:47.120><c> on</c><00:14:48.160><c> um</c>

00:14:48.550 --> 00:14:48.560 align:start position:0%
processes, different numbers on um
 

00:14:48.560 --> 00:14:49.829 align:start position:0%
processes, different numbers on um
certainly<00:14:48.959><c> different</c><00:14:49.120><c> compilers</c><00:14:49.600><c> which</c>

00:14:49.829 --> 00:14:49.839 align:start position:0%
certainly different compilers which
 

00:14:49.839 --> 00:14:51.829 align:start position:0%
certainly different compilers which
rearrange<00:14:50.399><c> things.</c><00:14:50.959><c> So</c><00:14:51.120><c> the</c><00:14:51.279><c> question</c><00:14:51.600><c> with</c>

00:14:51.829 --> 00:14:51.839 align:start position:0%
rearrange things. So the question with
 

00:14:51.839 --> 00:14:55.910 align:start position:0%
rearrange things. So the question with
my<00:14:52.079><c> code</c><00:14:52.399><c> correct</c><00:14:53.440><c> is</c><00:14:54.160><c> a</c><00:14:54.399><c> subtle</c><00:14:54.800><c> one.</c><00:14:55.680><c> And</c>

00:14:55.910 --> 00:14:55.920 align:start position:0%
my code correct is a subtle one. And
 

00:14:55.920 --> 00:14:57.509 align:start position:0%
my code correct is a subtle one. And
when<00:14:56.160><c> people</c><00:14:56.399><c> get</c><00:14:56.639><c> small</c><00:14:56.880><c> differences,</c><00:14:57.360><c> they</c>

00:14:57.509 --> 00:14:57.519 align:start position:0%
when people get small differences, they
 

00:14:57.519 --> 00:15:00.310 align:start position:0%
when people get small differences, they
often<00:14:57.760><c> say</c><00:14:57.920><c> that's</c><00:14:58.079><c> rounding</c><00:14:58.639><c> error.</c><00:14:59.279><c> Well,</c>

00:15:00.310 --> 00:15:00.320 align:start position:0%
often say that's rounding error. Well,
 

00:15:00.320 --> 00:15:03.350 align:start position:0%
often say that's rounding error. Well,
how<00:15:00.480><c> do</c><00:15:00.639><c> you</c><00:15:00.800><c> know?</c><00:15:01.120><c> Okay,</c><00:15:01.519><c> so</c><00:15:02.320><c> if</c><00:15:02.560><c> you</c><00:15:02.800><c> can</c>

00:15:03.350 --> 00:15:03.360 align:start position:0%
how do you know? Okay, so if you can
 

00:15:03.360 --> 00:15:04.870 align:start position:0%
how do you know? Okay, so if you can
change<00:15:03.600><c> the</c><00:15:03.839><c> precision,</c><00:15:04.240><c> so</c><00:15:04.399><c> if</c><00:15:04.560><c> you</c><00:15:04.639><c> normally</c>

00:15:04.870 --> 00:15:04.880 align:start position:0%
change the precision, so if you normally
 

00:15:04.880 --> 00:15:06.790 align:start position:0%
change the precision, so if you normally
run<00:15:05.040><c> in</c><00:15:05.199><c> double</c><00:15:05.440><c> precision</c><00:15:05.839><c> and</c><00:15:06.000><c> and</c><00:15:06.079><c> and</c><00:15:06.560><c> your</c>

00:15:06.790 --> 00:15:06.800 align:start position:0%
run in double precision and and and your
 

00:15:06.800 --> 00:15:08.470 align:start position:0%
run in double precision and and and your
results<00:15:07.120><c> differ</c><00:15:07.360><c> by</c><00:15:07.519><c> one</c><00:15:07.760><c> part</c><00:15:07.920><c> in</c><00:15:08.079><c> 10</c><00:15:08.320><c> to</c><00:15:08.399><c> the</c>

00:15:08.470 --> 00:15:08.480 align:start position:0%
results differ by one part in 10 to the
 

00:15:08.480 --> 00:15:09.670 align:start position:0%
results differ by one part in 10 to the
five<00:15:08.639><c> or</c><00:15:08.800><c> 10</c><00:15:08.959><c> to</c><00:15:09.040><c> the</c><00:15:09.120><c> six,</c><00:15:09.279><c> you</c><00:15:09.440><c> might</c><00:15:09.519><c> say</c>

00:15:09.670 --> 00:15:09.680 align:start position:0%
five or 10 to the six, you might say
 

00:15:09.680 --> 00:15:11.509 align:start position:0%
five or 10 to the six, you might say
that<00:15:09.839><c> looks</c><00:15:10.000><c> like</c><00:15:10.160><c> rounding</c><00:15:10.639><c> error.</c><00:15:11.199><c> But</c><00:15:11.360><c> it</c>

00:15:11.509 --> 00:15:11.519 align:start position:0%
that looks like rounding error. But it
 

00:15:11.519 --> 00:15:13.670 align:start position:0%
that looks like rounding error. But it
could<00:15:11.680><c> just</c><00:15:11.839><c> be</c><00:15:11.920><c> a</c><00:15:12.079><c> bug.</c><00:15:12.880><c> If</c><00:15:13.040><c> you</c><00:15:13.199><c> can</c><00:15:13.360><c> then</c><00:15:13.519><c> run</c>

00:15:13.670 --> 00:15:13.680 align:start position:0%
could just be a bug. If you can then run
 

00:15:13.680 --> 00:15:15.750 align:start position:0%
could just be a bug. If you can then run
the<00:15:13.839><c> code</c><00:15:14.000><c> in</c><00:15:14.240><c> single</c><00:15:14.480><c> precision</c><00:15:15.120><c> and</c><00:15:15.360><c> that</c>

00:15:15.750 --> 00:15:15.760 align:start position:0%
the code in single precision and that
 

00:15:15.760 --> 00:15:17.350 align:start position:0%
the code in single precision and that
error<00:15:15.920><c> gets</c><00:15:16.240><c> larger,</c><00:15:16.880><c> that</c><00:15:17.040><c> gives</c><00:15:17.199><c> you</c>

00:15:17.350 --> 00:15:17.360 align:start position:0%
error gets larger, that gives you
 

00:15:17.360 --> 00:15:19.030 align:start position:0%
error gets larger, that gives you
evidence<00:15:17.600><c> that</c><00:15:17.760><c> it</c><00:15:18.000><c> is</c><00:15:18.079><c> a</c><00:15:18.240><c> rounding</c><00:15:18.639><c> error.</c><00:15:18.880><c> If</c>

00:15:19.030 --> 00:15:19.040 align:start position:0%
evidence that it is a rounding error. If
 

00:15:19.040 --> 00:15:20.470 align:start position:0%
evidence that it is a rounding error. If
the<00:15:19.279><c> error</c><00:15:19.440><c> stays</c><00:15:19.760><c> the</c><00:15:19.920><c> same,</c><00:15:20.079><c> you've</c><00:15:20.320><c> just</c>

00:15:20.470 --> 00:15:20.480 align:start position:0%
the error stays the same, you've just
 

00:15:20.480 --> 00:15:23.430 align:start position:0%
the error stays the same, you've just
got<00:15:20.560><c> a</c><00:15:20.720><c> bug.</c><00:15:21.600><c> Okay?</c><00:15:22.320><c> And</c><00:15:22.560><c> I</c><00:15:22.720><c> always</c><00:15:22.959><c> say</c><00:15:23.199><c> people</c>

00:15:23.430 --> 00:15:23.440 align:start position:0%
got a bug. Okay? And I always say people
 

00:15:23.440 --> 00:15:25.350 align:start position:0%
got a bug. Okay? And I always say people
think<00:15:23.680><c> that</c><00:15:23.839><c> one</c><00:15:24.079><c> part</c><00:15:24.240><c> and</c><00:15:24.399><c> 10^</c><00:15:24.639><c> the</c><00:15:24.800><c> six</c><00:15:25.040><c> is</c><00:15:25.199><c> a</c>

00:15:25.350 --> 00:15:25.360 align:start position:0%
think that one part and 10^ the six is a
 

00:15:25.360 --> 00:15:27.910 align:start position:0%
think that one part and 10^ the six is a
small<00:15:25.760><c> error.</c><00:15:26.160><c> Okay?</c><00:15:26.480><c> But</c><00:15:26.560><c> it's</c><00:15:26.800><c> not.</c><00:15:27.519><c> If</c><00:15:27.760><c> you</c>

00:15:27.910 --> 00:15:27.920 align:start position:0%
small error. Okay? But it's not. If you
 

00:15:27.920 --> 00:15:30.710 align:start position:0%
small error. Okay? But it's not. If you
have<00:15:28.320><c> arrays</c><00:15:28.720><c> which</c><00:15:28.880><c> are</c><00:15:29.040><c> 100</c><00:15:29.360><c> by</c><00:15:29.600><c> 100</c><00:15:29.839><c> by</c><00:15:30.079><c> 100</c>

00:15:30.710 --> 00:15:30.720 align:start position:0%
have arrays which are 100 by 100 by 100
 

00:15:30.720 --> 00:15:33.350 align:start position:0%
have arrays which are 100 by 100 by 100
and<00:15:30.959><c> you</c><00:15:31.120><c> get</c><00:15:31.440><c> one</c><00:15:32.399><c> you</c><00:15:32.560><c> have</c><00:15:32.639><c> a</c><00:15:32.800><c> 3D</c><00:15:33.120><c> problem</c>

00:15:33.350 --> 00:15:33.360 align:start position:0%
and you get one you have a 3D problem
 

00:15:33.360 --> 00:15:35.030 align:start position:0%
and you get one you have a 3D problem
with<00:15:33.519><c> arrays</c><00:15:33.760><c> that</c><00:15:33.839><c> are</c><00:15:34.000><c> 100</c><00:15:34.240><c> by</c><00:15:34.399><c> 100</c><00:15:34.560><c> by</c><00:15:34.720><c> 100</c>

00:15:35.030 --> 00:15:35.040 align:start position:0%
with arrays that are 100 by 100 by 100
 

00:15:35.040 --> 00:15:36.389 align:start position:0%
with arrays that are 100 by 100 by 100
that<00:15:35.199><c> means</c><00:15:35.360><c> there's</c><00:15:35.519><c> a</c><00:15:35.680><c> million</c><00:15:35.920><c> elements</c><00:15:36.160><c> in</c>

00:15:36.389 --> 00:15:36.399 align:start position:0%
that means there's a million elements in
 

00:15:36.399 --> 00:15:38.790 align:start position:0%
that means there's a million elements in
each<00:15:36.560><c> in</c><00:15:36.720><c> each</c><00:15:36.959><c> array.</c><00:15:37.680><c> If</c><00:15:37.839><c> you</c><00:15:38.079><c> get</c><00:15:38.399><c> one</c><00:15:38.639><c> of</c>

00:15:38.790 --> 00:15:38.800 align:start position:0%
each in each array. If you get one of
 

00:15:38.800 --> 00:15:40.310 align:start position:0%
each in each array. If you get one of
those<00:15:39.040><c> wrong</c><00:15:39.360><c> which</c><00:15:39.600><c> for</c><00:15:39.680><c> example</c><00:15:39.920><c> you</c><00:15:40.079><c> do</c><00:15:40.160><c> a</c>

00:15:40.310 --> 00:15:40.320 align:start position:0%
those wrong which for example you do a
 

00:15:40.320 --> 00:15:42.710 align:start position:0%
those wrong which for example you do a
halo<00:15:40.639><c> swap</c><00:15:41.040><c> and</c><00:15:41.279><c> you</c><00:15:41.519><c> miss</c><00:15:41.920><c> one</c><00:15:42.160><c> of</c><00:15:42.240><c> the</c><00:15:42.399><c> halo</c>

00:15:42.710 --> 00:15:42.720 align:start position:0%
halo swap and you miss one of the halo
 

00:15:42.720 --> 00:15:45.189 align:start position:0%
halo swap and you miss one of the halo
entries.<00:15:43.440><c> Okay,</c><00:15:44.160><c> that</c><00:15:44.399><c> is</c><00:15:44.560><c> a</c><00:15:44.800><c> difference</c><00:15:45.040><c> of</c>

00:15:45.189 --> 00:15:45.199 align:start position:0%
entries. Okay, that is a difference of
 

00:15:45.199 --> 00:15:46.949 align:start position:0%
entries. Okay, that is a difference of
one<00:15:45.440><c> part</c><00:15:45.680><c> and</c><00:15:45.760><c> a</c><00:15:45.839><c> million</c><00:15:46.160><c> one</c><00:15:46.320><c> part</c><00:15:46.480><c> and</c><00:15:46.639><c> 10</c>

00:15:46.949 --> 00:15:46.959 align:start position:0%
one part and a million one part and 10
 

00:15:46.959 --> 00:15:49.749 align:start position:0%
one part and a million one part and 10
the<00:15:47.120><c> six.</c><00:15:47.839><c> So</c><00:15:48.320><c> people</c><00:15:48.560><c> are</c><00:15:48.800><c> much</c><00:15:49.040><c> too</c><00:15:49.360><c> quick</c><00:15:49.600><c> to</c>

00:15:49.749 --> 00:15:49.759 align:start position:0%
the six. So people are much too quick to
 

00:15:49.759 --> 00:15:51.189 align:start position:0%
the six. So people are much too quick to
say,<00:15:50.000><c> "Oh,</c><00:15:50.320><c> that's</c><00:15:50.560><c> okay.</c><00:15:50.880><c> It's</c><00:15:51.040><c> just</c>

00:15:51.189 --> 00:15:51.199 align:start position:0%
say, "Oh, that's okay. It's just
 

00:15:51.199 --> 00:15:52.629 align:start position:0%
say, "Oh, that's okay. It's just
rounding<00:15:51.600><c> out</c><00:15:51.759><c> without</c><00:15:51.920><c> any</c><00:15:52.079><c> evidence."</c><00:15:52.480><c> But</c>

00:15:52.629 --> 00:15:52.639 align:start position:0%
rounding out without any evidence." But
 

00:15:52.639 --> 00:15:56.230 align:start position:0%
rounding out without any evidence." But
that's<00:15:52.800><c> a</c><00:15:52.959><c> slide</c><00:15:53.519><c> on</c><00:15:53.680><c> the</c><00:15:53.839><c> side.</c>

00:15:56.230 --> 00:15:56.240 align:start position:0%
that's a slide on the side.
 

00:15:56.240 --> 00:15:59.269 align:start position:0%
that's a slide on the side.
Non-portability<00:15:57.680><c> um</c><00:15:58.000><c> correct</c><00:15:58.320><c> C</c><00:15:58.560><c> code,</c><00:15:59.040><c> a</c>

00:15:59.269 --> 00:15:59.279 align:start position:0%
Non-portability um correct C code, a
 

00:15:59.279 --> 00:16:01.350 align:start position:0%
Non-portability um correct C code, a
correct<00:15:59.519><c> C</c><00:15:59.759><c> code</c><00:15:59.920><c> or</c><00:16:00.079><c> forran</c><00:16:00.639><c> code</c><00:16:01.120><c> should</c>

00:16:01.350 --> 00:16:01.360 align:start position:0%
correct C code or forran code should
 

00:16:01.360 --> 00:16:03.189 align:start position:0%
correct C code or forran code should
compile<00:16:01.680><c> with</c><00:16:01.839><c> any</c><00:16:02.079><c> C</c><00:16:02.240><c> compiler</c><00:16:02.560><c> or</c><00:16:02.720><c> forran</c>

00:16:03.189 --> 00:16:03.199 align:start position:0%
compile with any C compiler or forran
 

00:16:03.199 --> 00:16:05.189 align:start position:0%
compile with any C compiler or forran
compiler<00:16:04.079><c> and</c><00:16:04.240><c> also</c><00:16:04.560><c> therefore</c><00:16:04.800><c> a</c><00:16:04.959><c> correct</c>

00:16:05.189 --> 00:16:05.199 align:start position:0%
compiler and also therefore a correct
 

00:16:05.199 --> 00:16:06.870 align:start position:0%
compiler and also therefore a correct
NPI<00:16:05.759><c> code</c><00:16:05.920><c> should</c><00:16:06.079><c> also</c><00:16:06.320><c> run</c><00:16:06.480><c> correctly</c><00:16:06.720><c> with</c>

00:16:06.870 --> 00:16:06.880 align:start position:0%
NPI code should also run correctly with
 

00:16:06.880 --> 00:16:09.269 align:start position:0%
NPI code should also run correctly with
any<00:16:07.040><c> NPI</c><00:16:07.600><c> library.</c><00:16:08.240><c> And</c><00:16:08.399><c> the</c><00:16:08.639><c> problem</c><00:16:08.880><c> is</c><00:16:09.040><c> that</c>

00:16:09.269 --> 00:16:09.279 align:start position:0%
any NPI library. And the problem is that
 

00:16:09.279 --> 00:16:11.350 align:start position:0%
any NPI library. And the problem is that
people<00:16:09.440><c> often</c><00:16:09.839><c> well</c><00:16:10.320><c> I</c><00:16:10.560><c> do</c><00:16:10.720><c> as</c><00:16:10.880><c> well</c><00:16:11.199><c> people</c>

00:16:11.350 --> 00:16:11.360 align:start position:0%
people often well I do as well people
 

00:16:11.360 --> 00:16:16.150 align:start position:0%
people often well I do as well people
often<00:16:11.759><c> develop</c><00:16:12.160><c> and</c><00:16:12.320><c> and</c><00:16:12.639><c> debug</c><00:16:13.839><c> and</c><00:16:14.480><c> um</c><00:16:15.040><c> and</c>

00:16:16.150 --> 00:16:16.160 align:start position:0%
often develop and and debug and um and
 

00:16:16.160 --> 00:16:18.629 align:start position:0%
often develop and and debug and um and
and and<00:16:16.959><c> verify</c><00:16:17.440><c> their</c><00:16:17.759><c> programs</c><00:16:18.160><c> on</c><00:16:18.399><c> their</c>

00:16:18.629 --> 00:16:18.639 align:start position:0%
and and verify their programs on their
 

00:16:18.639 --> 00:16:20.710 align:start position:0%
and and verify their programs on their
laptop<00:16:19.040><c> but</c><00:16:19.199><c> they</c><00:16:19.360><c> might</c><00:16:19.519><c> be</c><00:16:19.600><c> using</c><00:16:19.839><c> open</c><00:16:20.160><c> NPI</c>

00:16:20.710 --> 00:16:20.720 align:start position:0%
laptop but they might be using open NPI
 

00:16:20.720 --> 00:16:23.350 align:start position:0%
laptop but they might be using open NPI
for<00:16:20.880><c> example</c><00:16:21.839><c> but</c><00:16:22.000><c> then</c><00:16:22.240><c> you</c><00:16:22.399><c> go</c><00:16:22.480><c> to</c><00:16:22.639><c> a</c><00:16:22.880><c> you</c><00:16:23.040><c> you</c>

00:16:23.350 --> 00:16:23.360 align:start position:0%
for example but then you go to a you you
 

00:16:23.360 --> 00:16:25.269 align:start position:0%
for example but then you go to a you you
port<00:16:23.680><c> to</c><00:16:23.839><c> another</c><00:16:24.160><c> system</c><00:16:24.399><c> like</c><00:16:24.639><c> Archer</c><00:16:24.959><c> 2</c><00:16:25.120><c> and</c>

00:16:25.269 --> 00:16:25.279 align:start position:0%
port to another system like Archer 2 and
 

00:16:25.279 --> 00:16:27.749 align:start position:0%
port to another system like Archer 2 and
it's<00:16:25.440><c> not</c><00:16:25.519><c> using</c><00:16:25.759><c> open</c><00:16:26.079><c> NPI</c><00:16:26.480><c> it's</c><00:16:26.720><c> using</c><00:16:27.279><c> Cray</c>

00:16:27.749 --> 00:16:27.759 align:start position:0%
it's not using open NPI it's using Cray
 

00:16:27.759 --> 00:16:30.710 align:start position:0%
it's not using open NPI it's using Cray
MPI<00:16:28.160><c> which</c><00:16:28.320><c> is</c><00:16:28.399><c> based</c><00:16:28.560><c> on</c><00:16:28.720><c> NPIC2.</c>

00:16:30.710 --> 00:16:30.720 align:start position:0%
MPI which is based on NPIC2.
 

00:16:30.720 --> 00:16:32.710 align:start position:0%
MPI which is based on NPIC2.
So<00:16:31.360><c> um</c><00:16:31.519><c> you</c><00:16:31.759><c> might</c><00:16:31.920><c> think</c><00:16:32.160><c> that</c><00:16:32.320><c> running</c><00:16:32.560><c> so</c>

00:16:32.710 --> 00:16:32.720 align:start position:0%
So um you might think that running so
 

00:16:32.720 --> 00:16:34.389 align:start position:0%
So um you might think that running so
that<00:16:32.880><c> running</c><00:16:33.120><c> on</c><00:16:33.279><c> more</c><00:16:33.440><c> than</c><00:16:33.680><c> one</c><00:16:33.920><c> machine</c><00:16:34.160><c> is</c>

00:16:34.389 --> 00:16:34.399 align:start position:0%
that running on more than one machine is
 

00:16:34.399 --> 00:16:36.710 align:start position:0%
that running on more than one machine is
a<00:16:34.560><c> good</c><00:16:34.720><c> test.</c><00:16:35.120><c> I've</c><00:16:35.360><c> run</c><00:16:35.519><c> this</c><00:16:35.680><c> code</c><00:16:35.920><c> on</c><00:16:36.079><c> on</c><00:16:36.160><c> on</c>

00:16:36.710 --> 00:16:36.720 align:start position:0%
a good test. I've run this code on on on
 

00:16:36.720 --> 00:16:39.509 align:start position:0%
a good test. I've run this code on on on
my<00:16:36.880><c> laptop</c><00:16:37.199><c> and</c><00:16:37.360><c> I've</c><00:16:37.519><c> run</c><00:16:37.680><c> it</c><00:16:37.839><c> on</c><00:16:37.920><c> a</c><00:16:38.639><c> an</c><00:16:38.880><c> HPC</c>

00:16:39.509 --> 00:16:39.519 align:start position:0%
my laptop and I've run it on a an HPC
 

00:16:39.519 --> 00:16:42.790 align:start position:0%
my laptop and I've run it on a an HPC
cluster,<00:16:40.480><c> but</c><00:16:40.800><c> actually</c><00:16:41.920><c> uh</c><00:16:42.079><c> many</c><00:16:42.320><c> parallel</c>

00:16:42.790 --> 00:16:42.800 align:start position:0%
cluster, but actually uh many parallel
 

00:16:42.800 --> 00:16:44.470 align:start position:0%
cluster, but actually uh many parallel
clusters<00:16:43.120><c> will</c><00:16:43.360><c> use</c><00:16:43.519><c> the</c><00:16:43.680><c> same</c><00:16:43.839><c> open</c><00:16:44.160><c> source</c>

00:16:44.470 --> 00:16:44.480 align:start position:0%
clusters will use the same open source
 

00:16:44.480 --> 00:16:46.389 align:start position:0%
clusters will use the same open source
MPI.<00:16:45.199><c> Here</c><00:16:45.440><c> you're</c><00:16:45.600><c> not</c><00:16:45.759><c> really</c><00:16:45.920><c> testing</c><00:16:46.240><c> is</c>

00:16:46.389 --> 00:16:46.399 align:start position:0%
MPI. Here you're not really testing is
 

00:16:46.399 --> 00:16:48.230 align:start position:0%
MPI. Here you're not really testing is
the<00:16:46.560><c> hardware</c><00:16:46.959><c> different.</c><00:16:47.600><c> You're</c><00:16:47.839><c> testing</c>

00:16:48.230 --> 00:16:48.240 align:start position:0%
the hardware different. You're testing
 

00:16:48.240 --> 00:16:49.749 align:start position:0%
the hardware different. You're testing
is<00:16:48.399><c> the</c><00:16:48.639><c> library</c><00:16:48.959><c> different.</c><00:16:49.199><c> Running</c><00:16:49.440><c> on</c><00:16:49.600><c> two</c>

00:16:49.749 --> 00:16:49.759 align:start position:0%
is the library different. Running on two
 

00:16:49.759 --> 00:16:51.430 align:start position:0%
is the library different. Running on two
different<00:16:49.920><c> HP</c><00:16:50.320><c> systems</c><00:16:50.639><c> may</c><00:16:50.880><c> not</c><00:16:51.040><c> be</c><00:16:51.120><c> a</c><00:16:51.279><c> good</c>

00:16:51.430 --> 00:16:51.440 align:start position:0%
different HP systems may not be a good
 

00:16:51.440 --> 00:16:54.069 align:start position:0%
different HP systems may not be a good
test.<00:16:51.920><c> Okay.</c><00:16:52.880><c> So</c><00:16:53.040><c> you</c><00:16:53.279><c> may</c><00:16:53.360><c> have</c><00:16:53.519><c> assumed</c>

00:16:54.069 --> 00:16:54.079 align:start position:0%
test. Okay. So you may have assumed
 

00:16:54.079 --> 00:16:55.430 align:start position:0%
test. Okay. So you may have assumed
things<00:16:54.240><c> in</c><00:16:54.480><c> your</c><00:16:54.720><c> code.</c><00:16:55.040><c> You</c><00:16:55.199><c> may</c><00:16:55.279><c> have</c>

00:16:55.430 --> 00:16:55.440 align:start position:0%
things in your code. You may have
 

00:16:55.440 --> 00:16:57.990 align:start position:0%
things in your code. You may have
assumed<00:16:55.759><c> a</c><00:16:55.920><c> certain</c><00:16:56.160><c> behavior</c><00:16:56.560><c> of</c><00:16:56.800><c> NPI</c><00:16:57.600><c> which</c>

00:16:57.990 --> 00:16:58.000 align:start position:0%
assumed a certain behavior of NPI which
 

00:16:58.000 --> 00:16:59.990 align:start position:0%
assumed a certain behavior of NPI which
might<00:16:58.240><c> be</c><00:16:58.399><c> true</c><00:16:58.639><c> in</c><00:16:58.880><c> one</c><00:16:59.360><c> library</c><00:16:59.680><c> but</c><00:16:59.839><c> not</c>

00:16:59.990 --> 00:17:00.000 align:start position:0%
might be true in one library but not
 

00:17:00.000 --> 00:17:02.310 align:start position:0%
might be true in one library but not
another.<00:17:00.399><c> It's</c><00:17:00.639><c> just</c><00:17:00.880><c> like</c><00:17:01.120><c> saying</c><00:17:01.759><c> in</c><00:17:01.920><c> in</c><00:17:02.160><c> a</c>

00:17:02.310 --> 00:17:02.320 align:start position:0%
another. It's just like saying in in a
 

00:17:02.320 --> 00:17:05.189 align:start position:0%
another. It's just like saying in in a
for<00:17:02.880><c> a</c><00:17:03.040><c> C</c><00:17:03.279><c> code</c><00:17:03.600><c> integer</c><00:17:04.000><c> I</c><00:17:04.240><c> or</c><00:17:04.400><c> int</c><00:17:04.720><c> I</c><00:17:04.959><c> and</c>

00:17:05.189 --> 00:17:05.199 align:start position:0%
for a C code integer I or int I and
 

00:17:05.199 --> 00:17:08.069 align:start position:0%
for a C code integer I or int I and
assuming<00:17:05.520><c> that</c><00:17:05.760><c> I</c><00:17:06.000><c> is</c><00:17:06.160><c> set</c><00:17:06.319><c> to</c><00:17:06.480><c> zero.</c><00:17:07.120><c> It's</c><00:17:07.439><c> not</c>

00:17:08.069 --> 00:17:08.079 align:start position:0%
assuming that I is set to zero. It's not
 

00:17:08.079 --> 00:17:09.669 align:start position:0%
assuming that I is set to zero. It's not
guaranteed.<00:17:08.559><c> It</c><00:17:08.799><c> you</c><00:17:08.959><c> might</c><00:17:09.120><c> be</c><00:17:09.199><c> lucky.</c><00:17:09.520><c> It</c>

00:17:09.669 --> 00:17:09.679 align:start position:0%
guaranteed. It you might be lucky. It
 

00:17:09.679 --> 00:17:11.829 align:start position:0%
guaranteed. It you might be lucky. It
might<00:17:09.839><c> be</c><00:17:10.000><c> set</c><00:17:10.319><c> a</c><00:17:10.799><c> particular</c><00:17:11.199><c> compiler</c><00:17:11.679><c> might</c>

00:17:11.829 --> 00:17:11.839 align:start position:0%
might be set a particular compiler might
 

00:17:11.839 --> 00:17:13.750 align:start position:0%
might be set a particular compiler might
be<00:17:12.000><c> kind</c><00:17:12.240><c> to</c><00:17:12.319><c> you</c><00:17:12.480><c> and</c><00:17:12.799><c> and</c><00:17:13.039><c> set</c><00:17:13.360><c> default</c>

00:17:13.750 --> 00:17:13.760 align:start position:0%
be kind to you and and set default
 

00:17:13.760 --> 00:17:15.350 align:start position:0%
be kind to you and and set default
integers<00:17:14.160><c> to</c><00:17:14.240><c> be</c><00:17:14.400><c> zero</c><00:17:14.559><c> but</c><00:17:14.720><c> then</c><00:17:14.959><c> it's</c><00:17:15.120><c> not</c>

00:17:15.350 --> 00:17:15.360 align:start position:0%
integers to be zero but then it's not
 

00:17:15.360 --> 00:17:19.750 align:start position:0%
integers to be zero but then it's not
it's<00:17:15.600><c> not</c><00:17:16.079><c> um</c><00:17:17.199><c> it's</c><00:17:17.520><c> not</c><00:17:18.400><c> um</c><00:17:18.799><c> um</c><00:17:19.039><c> guaranteed.</c>

00:17:19.750 --> 00:17:19.760 align:start position:0%
it's not um it's not um um guaranteed.
 

00:17:19.760 --> 00:17:21.270 align:start position:0%
it's not um it's not um um guaranteed.
And<00:17:19.919><c> so</c><00:17:20.079><c> just</c><00:17:20.319><c> like</c><00:17:20.480><c> you</c><00:17:20.720><c> should</c><00:17:20.799><c> always</c><00:17:21.039><c> check</c>

00:17:21.270 --> 00:17:21.280 align:start position:0%
And so just like you should always check
 

00:17:21.280 --> 00:17:22.870 align:start position:0%
And so just like you should always check
the<00:17:21.520><c> portability</c><00:17:22.000><c> of</c><00:17:22.079><c> your</c><00:17:22.319><c> program</c><00:17:22.640><c> by</c>

00:17:22.870 --> 00:17:22.880 align:start position:0%
the portability of your program by
 

00:17:22.880 --> 00:17:25.270 align:start position:0%
the portability of your program by
compiling<00:17:23.280><c> on</c><00:17:23.520><c> different</c><00:17:23.760><c> compilers,</c><00:17:25.039><c> you</c>

00:17:25.270 --> 00:17:25.280 align:start position:0%
compiling on different compilers, you
 

00:17:25.280 --> 00:17:27.829 align:start position:0%
compiling on different compilers, you
should<00:17:25.439><c> check</c><00:17:25.600><c> the</c><00:17:25.839><c> portability</c><00:17:26.319><c> of</c><00:17:26.480><c> your</c><00:17:27.360><c> NPI</c>

00:17:27.829 --> 00:17:27.839 align:start position:0%
should check the portability of your NPI
 

00:17:27.839 --> 00:17:29.350 align:start position:0%
should check the portability of your NPI
program<00:17:28.079><c> by</c><00:17:28.319><c> running</c><00:17:28.480><c> on</c><00:17:28.640><c> different</c><00:17:28.880><c> NPI</c>

00:17:29.350 --> 00:17:29.360 align:start position:0%
program by running on different NPI
 

00:17:29.360 --> 00:17:31.110 align:start position:0%
program by running on different NPI
libraries.<00:17:29.760><c> And</c><00:17:30.000><c> to</c><00:17:30.160><c> be</c><00:17:30.240><c> honest,</c><00:17:30.720><c> one</c><00:17:30.960><c> of</c><00:17:30.960><c> the</c>

00:17:31.110 --> 00:17:31.120 align:start position:0%
libraries. And to be honest, one of the
 

00:17:31.120 --> 00:17:32.630 align:start position:0%
libraries. And to be honest, one of the
nicest<00:17:31.440><c> things</c><00:17:31.679><c> is</c><00:17:31.840><c> you</c><00:17:32.000><c> have</c><00:17:32.160><c> more</c><00:17:32.320><c> than</c><00:17:32.400><c> one</c>

00:17:32.630 --> 00:17:32.640 align:start position:0%
nicest things is you have more than one
 

00:17:32.640 --> 00:17:34.390 align:start position:0%
nicest things is you have more than one
implementation<00:17:33.120><c> of</c><00:17:33.280><c> the</c><00:17:33.440><c> same</c><00:17:33.679><c> machine.</c><00:17:34.160><c> Now,</c>

00:17:34.390 --> 00:17:34.400 align:start position:0%
implementation of the same machine. Now,
 

00:17:34.400 --> 00:17:37.110 align:start position:0%
implementation of the same machine. Now,
unfortunately<00:17:34.799><c> on</c><00:17:34.960><c> AR</c><00:17:35.440><c> 2,</c><00:17:35.679><c> we're</c><00:17:35.919><c> it's</c><00:17:36.559><c> it</c>

00:17:37.110 --> 00:17:37.120 align:start position:0%
unfortunately on AR 2, we're it's it
 

00:17:37.120 --> 00:17:39.830 align:start position:0%
unfortunately on AR 2, we're it's it
we're<00:17:37.440><c> locked</c><00:17:38.400><c> to</c><00:17:38.640><c> a</c><00:17:38.799><c> large</c><00:17:38.960><c> extent</c><00:17:39.360><c> to</c><00:17:39.520><c> Cray</c>

00:17:39.830 --> 00:17:39.840 align:start position:0%
we're locked to a large extent to Cray
 

00:17:39.840 --> 00:17:41.909 align:start position:0%
we're locked to a large extent to Cray
MPI,<00:17:40.480><c> but</c><00:17:40.799><c> you</c><00:17:40.960><c> know,</c><00:17:41.200><c> if</c><00:17:41.440><c> you</c><00:17:41.600><c> have</c><00:17:41.760><c> your</c>

00:17:41.909 --> 00:17:41.919 align:start position:0%
MPI, but you know, if you have your
 

00:17:41.919 --> 00:17:45.029 align:start position:0%
MPI, but you know, if you have your
laptop,<00:17:42.400><c> install</c><00:17:42.799><c> NPI,</c><00:17:43.280><c> CH2</c><00:17:43.679><c> and</c><00:17:43.840><c> open</c><00:17:44.160><c> MPI</c>

00:17:45.029 --> 00:17:45.039 align:start position:0%
laptop, install NPI, CH2 and open MPI
 

00:17:45.039 --> 00:17:47.750 align:start position:0%
laptop, install NPI, CH2 and open MPI
and<00:17:45.200><c> then,</c><00:17:45.520><c> you</c><00:17:45.679><c> know,</c><00:17:46.559><c> it's</c><00:17:46.880><c> or</c><00:17:47.120><c> use</c><00:17:47.360><c> Intel</c>

00:17:47.750 --> 00:17:47.760 align:start position:0%
and then, you know, it's or use Intel
 

00:17:47.760 --> 00:17:49.669 align:start position:0%
and then, you know, it's or use Intel
NPI.<00:17:48.320><c> It's</c><00:17:48.559><c> a</c><00:17:48.720><c> really</c><00:17:48.960><c> really</c><00:17:49.280><c> good</c>

00:17:49.669 --> 00:17:49.679 align:start position:0%
NPI. It's a really really good
 

00:17:49.679 --> 00:17:53.510 align:start position:0%
NPI. It's a really really good
development<00:17:50.640><c> uh</c><00:17:51.039><c> trick</c><00:17:51.600><c> or</c><00:17:52.240><c> um</c><00:17:52.559><c> methodology</c>

00:17:53.510 --> 00:17:53.520 align:start position:0%
development uh trick or um methodology
 

00:17:53.520 --> 00:17:55.909 align:start position:0%
development uh trick or um methodology
to<00:17:53.840><c> regularly</c><00:17:54.400><c> check</c><00:17:54.640><c> your</c><00:17:54.960><c> program</c><00:17:55.600><c> is</c>

00:17:55.909 --> 00:17:55.919 align:start position:0%
to regularly check your program is
 

00:17:55.919 --> 00:17:57.750 align:start position:0%
to regularly check your program is
correct<00:17:56.240><c> when</c><00:17:56.559><c> running</c><00:17:56.799><c> on</c><00:17:57.039><c> different</c><00:17:57.200><c> NPI</c>

00:17:57.750 --> 00:17:57.760 align:start position:0%
correct when running on different NPI
 

00:17:57.760 --> 00:18:02.310 align:start position:0%
correct when running on different NPI
libraries.

00:18:02.310 --> 00:18:02.320 align:start position:0%
 
 

00:18:02.320 --> 00:18:04.549 align:start position:0%
 
code<00:18:02.640><c> readability.</c><00:18:03.280><c> This</c><00:18:03.440><c> is</c><00:18:03.520><c> a</c><00:18:03.760><c> big</c><00:18:03.919><c> one.</c><00:18:04.240><c> Uh</c>

00:18:04.549 --> 00:18:04.559 align:start position:0%
code readability. This is a big one. Uh
 

00:18:04.559 --> 00:18:08.230 align:start position:0%
code readability. This is a big one. Uh
adding<00:18:04.880><c> MPI</c><00:18:05.440><c> and</c><00:18:05.520><c> destroy</c><00:18:05.840><c> a</c><00:18:06.080><c> code.</c><00:18:07.039><c> Um</c><00:18:08.000><c> we</c>

00:18:08.230 --> 00:18:08.240 align:start position:0%
adding MPI and destroy a code. Um we
 

00:18:08.240 --> 00:18:09.990 align:start position:0%
adding MPI and destroy a code. Um we
would<00:18:08.400><c> like</c><00:18:08.559><c> to</c><00:18:08.720><c> maintain</c><00:18:09.039><c> a</c><00:18:09.280><c> serial</c><00:18:09.679><c> version</c>

00:18:09.990 --> 00:18:10.000 align:start position:0%
would like to maintain a serial version
 

00:18:10.000 --> 00:18:11.510 align:start position:0%
would like to maintain a serial version
because<00:18:10.240><c> we'd</c><00:18:10.480><c> like</c><00:18:10.640><c> to</c><00:18:10.799><c> say</c><00:18:10.960><c> well</c><00:18:11.120><c> what's</c><00:18:11.360><c> the</c>

00:18:11.510 --> 00:18:11.520 align:start position:0%
because we'd like to say well what's the
 

00:18:11.520 --> 00:18:13.270 align:start position:0%
because we'd like to say well what's the
correct<00:18:11.840><c> ver</c><00:18:12.160><c> what's</c><00:18:12.400><c> what's</c><00:18:12.720><c> my</c><00:18:12.880><c> correct</c>

00:18:13.270 --> 00:18:13.280 align:start position:0%
correct ver what's what's my correct
 

00:18:13.280 --> 00:18:14.950 align:start position:0%
correct ver what's what's my correct
answer?<00:18:13.679><c> My</c><00:18:13.840><c> parallel</c><00:18:14.240><c> program</c><00:18:14.559><c> gives</c><00:18:14.799><c> this</c>

00:18:14.950 --> 00:18:14.960 align:start position:0%
answer? My parallel program gives this
 

00:18:14.960 --> 00:18:16.710 align:start position:0%
answer? My parallel program gives this
answer.<00:18:15.280><c> What's</c><00:18:15.520><c> my</c><00:18:15.679><c> correct</c><00:18:16.000><c> answer?</c><00:18:16.640><c> It</c>

00:18:16.710 --> 00:18:16.720 align:start position:0%
answer. What's my correct answer? It
 

00:18:16.720 --> 00:18:18.070 align:start position:0%
answer. What's my correct answer? It
would<00:18:16.799><c> be</c><00:18:16.960><c> nice</c><00:18:17.039><c> to</c><00:18:17.200><c> say</c><00:18:17.440><c> what</c><00:18:17.600><c> do</c><00:18:17.679><c> I</c><00:18:17.760><c> get</c><00:18:17.840><c> in</c>

00:18:18.070 --> 00:18:18.080 align:start position:0%
would be nice to say what do I get in
 

00:18:18.080 --> 00:18:21.190 align:start position:0%
would be nice to say what do I get in
the<00:18:18.160><c> serial</c><00:18:18.559><c> code.</c><00:18:19.600><c> Um</c><00:18:20.400><c> it</c><00:18:20.559><c> would</c><00:18:20.640><c> be</c><00:18:20.960><c> be</c><00:18:21.120><c> nice</c>

00:18:21.190 --> 00:18:21.200 align:start position:0%
the serial code. Um it would be be nice
 

00:18:21.200 --> 00:18:22.630 align:start position:0%
the serial code. Um it would be be nice
to<00:18:21.360><c> compile</c><00:18:21.679><c> and</c><00:18:21.840><c> run</c><00:18:22.080><c> identical</c><00:18:22.400><c> code</c>

00:18:22.630 --> 00:18:22.640 align:start position:0%
to compile and run identical code
 

00:18:22.640 --> 00:18:24.549 align:start position:0%
to compile and run identical code
without<00:18:22.880><c> an</c><00:18:23.120><c> NPI</c><00:18:23.600><c> library.</c><00:18:24.000><c> Actually</c><00:18:24.240><c> I</c><00:18:24.480><c> don't</c>

00:18:24.549 --> 00:18:24.559 align:start position:0%
without an NPI library. Actually I don't
 

00:18:24.559 --> 00:18:27.430 align:start position:0%
without an NPI library. Actually I don't
mean<00:18:24.720><c> running</c><00:18:25.039><c> with</c><00:18:25.440><c> an</c><00:18:25.679><c> NPI</c><00:18:26.160><c> code</c><00:18:26.320><c> with</c><00:18:26.480><c> one</c><00:18:26.960><c> P</c>

00:18:27.430 --> 00:18:27.440 align:start position:0%
mean running with an NPI code with one P
 

00:18:27.440 --> 00:18:28.630 align:start position:0%
mean running with an NPI code with one P
is<00:18:27.600><c> the</c><00:18:27.679><c> number</c><00:18:27.840><c> of</c><00:18:27.919><c> processors.</c><00:18:28.400><c> I</c><00:18:28.559><c> don't</c>

00:18:28.630 --> 00:18:28.640 align:start position:0%
is the number of processors. I don't
 

00:18:28.640 --> 00:18:30.870 align:start position:0%
is the number of processors. I don't
mean<00:18:28.799><c> running</c><00:18:28.960><c> with</c><00:18:29.120><c> NPI</c><00:18:29.520><c> to</c><00:18:29.760><c> one</c><00:18:30.000><c> processor.</c>

00:18:30.870 --> 00:18:30.880 align:start position:0%
mean running with NPI to one processor.
 

00:18:30.880 --> 00:18:32.870 align:start position:0%
mean running with NPI to one processor.
I<00:18:31.120><c> run</c><00:18:31.360><c> I</c><00:18:31.600><c> mean</c><00:18:31.760><c> running</c><00:18:32.000><c> without</c><00:18:32.240><c> the</c><00:18:32.400><c> NPI</c>

00:18:32.870 --> 00:18:32.880 align:start position:0%
I run I mean running without the NPI
 

00:18:32.880 --> 00:18:35.590 align:start position:0%
I run I mean running without the NPI
library.<00:18:33.520><c> So</c><00:18:33.679><c> for</c><00:18:33.840><c> a</c><00:18:34.000><c> whole</c><00:18:34.160><c> bunch</c><00:18:34.400><c> of</c><00:18:34.640><c> reasons</c>

00:18:35.590 --> 00:18:35.600 align:start position:0%
library. So for a whole bunch of reasons
 

00:18:35.600 --> 00:18:37.750 align:start position:0%
library. So for a whole bunch of reasons
um<00:18:36.080><c> what</c><00:18:36.320><c> you</c><00:18:36.559><c> should</c><00:18:36.720><c> do</c><00:18:37.039><c> and</c><00:18:37.200><c> this</c><00:18:37.360><c> is</c><00:18:37.520><c> a</c>

00:18:37.750 --> 00:18:37.760 align:start position:0%
um what you should do and this is a
 

00:18:37.760 --> 00:18:39.750 align:start position:0%
um what you should do and this is a
really<00:18:38.160><c> important</c>

00:18:39.750 --> 00:18:39.760 align:start position:0%
really important
 

00:18:39.760 --> 00:18:43.909 align:start position:0%
really important
um<00:18:41.039><c> software</c><00:18:41.440><c> development</c><00:18:42.480><c> approach</c><00:18:43.440><c> is</c><00:18:43.760><c> you</c>

00:18:43.909 --> 00:18:43.919 align:start position:0%
um software development approach is you
 

00:18:43.919 --> 00:18:45.830 align:start position:0%
um software development approach is you
should<00:18:44.080><c> separate</c><00:18:44.480><c> your</c><00:18:44.720><c> communications</c><00:18:45.360><c> into</c>

00:18:45.830 --> 00:18:45.840 align:start position:0%
should separate your communications into
 

00:18:45.840 --> 00:18:48.789 align:start position:0%
should separate your communications into
into into<00:18:46.559><c> a</c><00:18:46.720><c> separate</c><00:18:47.039><c> library.</c><00:18:48.160><c> So</c><00:18:48.559><c> what</c>

00:18:48.789 --> 00:18:48.799 align:start position:0%
into into a separate library. So what
 

00:18:48.799 --> 00:18:50.549 align:start position:0%
into into a separate library. So what
I'm<00:18:48.960><c> saying</c><00:18:49.120><c> is</c><00:18:49.360><c> your</c><00:18:49.520><c> your</c><00:18:49.840><c> code</c><00:18:50.160><c> should</c><00:18:50.400><c> not</c>

00:18:50.549 --> 00:18:50.559 align:start position:0%
I'm saying is your your code should not
 

00:18:50.559 --> 00:18:53.190 align:start position:0%
I'm saying is your your code should not
be<00:18:50.720><c> sprinkled</c><00:18:51.120><c> with</c><00:18:51.280><c> hundreds</c><00:18:51.600><c> of</c><00:18:51.760><c> NPI</c><00:18:52.240><c> calls.</c>

00:18:53.190 --> 00:18:53.200 align:start position:0%
be sprinkled with hundreds of NPI calls.
 

00:18:53.200 --> 00:18:55.029 align:start position:0%
be sprinkled with hundreds of NPI calls.
It<00:18:53.440><c> should</c><00:18:53.679><c> have</c><00:18:53.840><c> a</c><00:18:54.160><c> small</c><00:18:54.480><c> number</c><00:18:54.799><c> of</c>

00:18:55.029 --> 00:18:55.039 align:start position:0%
It should have a small number of
 

00:18:55.039 --> 00:18:56.789 align:start position:0%
It should have a small number of
meaningful<00:18:55.600><c> calls.</c><00:18:56.000><c> So</c><00:18:56.160><c> what</c><00:18:56.320><c> you</c><00:18:56.480><c> say</c><00:18:56.559><c> when</c>

00:18:56.789 --> 00:18:56.799 align:start position:0%
meaningful calls. So what you say when
 

00:18:56.799 --> 00:18:58.950 align:start position:0%
meaningful calls. So what you say when
you<00:18:56.880><c> write</c><00:18:57.039><c> your</c><00:18:57.280><c> code</c><00:18:57.440><c> is</c><00:18:57.760><c> okay</c><00:18:58.640><c> what</c>

00:18:58.950 --> 00:18:58.960 align:start position:0%
you write your code is okay what
 

00:18:58.960 --> 00:19:00.710 align:start position:0%
you write your code is okay what
parallel<00:18:59.440><c> operations</c><00:18:59.919><c> do</c><00:19:00.080><c> I</c><00:19:00.240><c> need</c><00:19:00.320><c> to</c><00:19:00.400><c> do</c><00:19:00.559><c> in</c>

00:19:00.710 --> 00:19:00.720 align:start position:0%
parallel operations do I need to do in
 

00:19:00.720 --> 00:19:03.350 align:start position:0%
parallel operations do I need to do in
my<00:19:00.960><c> program</c><00:19:01.679><c> I</c><00:19:01.840><c> need</c><00:19:02.000><c> to</c><00:19:02.080><c> do</c><00:19:02.240><c> global</c><00:19:02.640><c> sums</c><00:19:03.200><c> I</c>

00:19:03.350 --> 00:19:03.360 align:start position:0%
my program I need to do global sums I
 

00:19:03.360 --> 00:19:05.510 align:start position:0%
my program I need to do global sums I
need<00:19:03.440><c> to</c><00:19:03.600><c> do</c><00:19:03.679><c> halo</c><00:19:04.160><c> swaps</c><00:19:04.960><c> I</c><00:19:05.120><c> need</c><00:19:05.280><c> to</c><00:19:05.360><c> do</c>

00:19:05.510 --> 00:19:05.520 align:start position:0%
need to do halo swaps I need to do
 

00:19:05.520 --> 00:19:07.909 align:start position:0%
need to do halo swaps I need to do
gathers<00:19:06.400><c> so</c><00:19:06.640><c> you</c><00:19:06.880><c> write</c><00:19:07.039><c> a</c><00:19:07.280><c> routine</c><00:19:07.679><c> called</c>

00:19:07.909 --> 00:19:07.919 align:start position:0%
gathers so you write a routine called
 

00:19:07.919 --> 00:19:10.470 align:start position:0%
gathers so you write a routine called
global<00:19:08.320><c> sum</c><00:19:08.640><c> halo</c><00:19:08.960><c> swap</c><00:19:09.200><c> and</c><00:19:09.360><c> ga</c><00:19:10.080><c> and</c><00:19:10.240><c> you</c>

00:19:10.470 --> 00:19:10.480 align:start position:0%
global sum halo swap and ga and you
 

00:19:10.480 --> 00:19:12.789 align:start position:0%
global sum halo swap and ga and you
implement<00:19:10.880><c> that</c><00:19:11.120><c> using</c><00:19:11.440><c> NPI</c><00:19:12.240><c> you</c><00:19:12.480><c> don't</c>

00:19:12.789 --> 00:19:12.799 align:start position:0%
implement that using NPI you don't
 

00:19:12.799 --> 00:19:14.710 align:start position:0%
implement that using NPI you don't
scatter<00:19:13.360><c> random</c><00:19:13.760><c> NPI</c><00:19:14.240><c> course</c><00:19:14.480><c> throughout</c>

00:19:14.710 --> 00:19:14.720 align:start position:0%
scatter random NPI course throughout
 

00:19:14.720 --> 00:19:16.870 align:start position:0%
scatter random NPI course throughout
your<00:19:14.960><c> whole</c><00:19:15.120><c> code</c><00:19:15.919><c> and</c><00:19:16.080><c> that</c><00:19:16.320><c> has</c><00:19:16.480><c> a</c><00:19:16.640><c> whole</c>

00:19:16.870 --> 00:19:16.880 align:start position:0%
your whole code and that has a whole
 

00:19:16.880 --> 00:19:21.750 align:start position:0%
your whole code and that has a whole
bunch<00:19:17.120><c> of</c><00:19:17.600><c> um</c><00:19:17.760><c> of</c><00:19:18.000><c> of</c><00:19:18.320><c> of</c><00:19:19.440><c> um</c><00:19:19.840><c> advantages</c><00:19:21.280><c> um</c>

00:19:21.750 --> 00:19:21.760 align:start position:0%
bunch of um of of of um advantages um
 

00:19:21.760 --> 00:19:23.669 align:start position:0%
bunch of um of of of um advantages um
and<00:19:22.080><c> so</c><00:19:22.480><c> uh</c><00:19:22.559><c> there's</c><00:19:22.799><c> no</c><00:19:22.880><c> explicit</c><00:19:23.360><c> reference</c>

00:19:23.669 --> 00:19:23.679 align:start position:0%
and so uh there's no explicit reference
 

00:19:23.679 --> 00:19:25.669 align:start position:0%
and so uh there's no explicit reference
to<00:19:23.760><c> API</c><00:19:24.080><c> in</c><00:19:24.240><c> your</c><00:19:24.400><c> main</c><00:19:24.640><c> code</c><00:19:25.120><c> and</c><00:19:25.440><c> What</c><00:19:25.600><c> it</c>

00:19:25.669 --> 00:19:25.679 align:start position:0%
to API in your main code and What it
 

00:19:25.679 --> 00:19:27.029 align:start position:0%
to API in your main code and What it
allows<00:19:25.919><c> you</c><00:19:26.080><c> to</c><00:19:26.160><c> do</c><00:19:26.320><c> is</c><00:19:26.559><c> actually</c><00:19:26.720><c> provide</c><00:19:26.880><c> a</c>

00:19:27.029 --> 00:19:27.039 align:start position:0%
allows you to do is actually provide a
 

00:19:27.039 --> 00:19:29.029 align:start position:0%
allows you to do is actually provide a
dummy<00:19:27.440><c> library</c><00:19:27.679><c> for</c><00:19:27.840><c> the</c><00:19:27.919><c> serial</c><00:19:28.320><c> code.</c><00:19:28.880><c> If</c>

00:19:29.029 --> 00:19:29.039 align:start position:0%
dummy library for the serial code. If
 

00:19:29.039 --> 00:19:31.350 align:start position:0%
dummy library for the serial code. If
you<00:19:29.200><c> if</c><00:19:29.360><c> you</c><00:19:29.440><c> go</c><00:19:29.679><c> to</c><00:19:29.919><c> the</c><00:19:30.000><c> whole</c><00:19:30.240><c> hog,</c><00:19:30.960><c> you</c><00:19:31.200><c> can</c>

00:19:31.350 --> 00:19:31.360 align:start position:0%
you if you go to the whole hog, you can
 

00:19:31.360 --> 00:19:32.870 align:start position:0%
you if you go to the whole hog, you can
actually<00:19:31.600><c> then</c><00:19:32.000><c> have</c><00:19:32.160><c> a</c><00:19:32.400><c> library</c><00:19:32.640><c> which</c>

00:19:32.870 --> 00:19:32.880 align:start position:0%
actually then have a library which
 

00:19:32.880 --> 00:19:34.230 align:start position:0%
actually then have a library which
allows<00:19:33.120><c> you</c><00:19:33.200><c> to</c><00:19:33.360><c> compile</c><00:19:33.679><c> and</c><00:19:33.840><c> run</c><00:19:34.000><c> your</c>

00:19:34.230 --> 00:19:34.240 align:start position:0%
allows you to compile and run your
 

00:19:34.240 --> 00:19:36.470 align:start position:0%
allows you to compile and run your
program<00:19:34.640><c> in</c><00:19:34.880><c> serial</c>

00:19:36.470 --> 00:19:36.480 align:start position:0%
program in serial
 

00:19:36.480 --> 00:19:38.310 align:start position:0%
program in serial
without<00:19:36.880><c> access</c><00:19:37.120><c> to</c><00:19:37.200><c> an</c><00:19:37.360><c> NPL</c><00:19:37.679><c> library</c><00:19:38.000><c> at</c><00:19:38.160><c> all</c>

00:19:38.310 --> 00:19:38.320 align:start position:0%
without access to an NPL library at all
 

00:19:38.320 --> 00:19:39.990 align:start position:0%
without access to an NPL library at all
which<00:19:38.480><c> is</c><00:19:38.640><c> also</c><00:19:38.799><c> a</c><00:19:38.960><c> nice</c><00:19:39.120><c> thing</c><00:19:39.280><c> to</c><00:19:39.440><c> do.</c><00:19:39.679><c> So</c><00:19:39.840><c> I</c>

00:19:39.990 --> 00:19:40.000 align:start position:0%
which is also a nice thing to do. So I
 

00:19:40.000 --> 00:19:41.350 align:start position:0%
which is also a nice thing to do. So I
have<00:19:40.160><c> an</c><00:19:40.320><c> example</c><00:19:40.559><c> here</c><00:19:40.720><c> which</c><00:19:40.880><c> I</c><00:19:41.039><c> did</c><00:19:41.200><c> with</c>

00:19:41.350 --> 00:19:41.360 align:start position:0%
have an example here which I did with
 

00:19:41.360 --> 00:19:43.430 align:start position:0%
have an example here which I did with
forran<00:19:41.919><c> but</c><00:19:42.080><c> I</c><00:19:42.160><c> do</c><00:19:42.320><c> have</c><00:19:42.400><c> a</c><00:19:42.559><c> C</c><00:19:42.720><c> example</c><00:19:43.120><c> later</c>

00:19:43.430 --> 00:19:43.440 align:start position:0%
forran but I do have a C example later
 

00:19:43.440 --> 00:19:47.430 align:start position:0%
forran but I do have a C example later
on<00:19:43.760><c> you</c><00:19:43.840><c> know.</c><00:19:44.080><c> So</c><00:19:44.320><c> for</c><00:19:44.400><c> example,</c><00:19:45.360><c> okay,</c><00:19:46.559><c> um,</c>

00:19:47.430 --> 00:19:47.440 align:start position:0%
on you know. So for example, okay, um,
 

00:19:47.440 --> 00:19:49.270 align:start position:0%
on you know. So for example, okay, um,
if<00:19:47.679><c> you</c><00:19:47.760><c> want</c><00:19:47.919><c> to</c><00:19:48.000><c> initialize</c><00:19:48.480><c> an</c><00:19:48.640><c> NPI</c>

00:19:49.270 --> 00:19:49.280 align:start position:0%
if you want to initialize an NPI
 

00:19:49.280 --> 00:19:51.430 align:start position:0%
if you want to initialize an NPI
program,

00:19:51.430 --> 00:19:51.440 align:start position:0%
program,
 

00:19:51.440 --> 00:19:53.750 align:start position:0%
program,
uh,<00:19:51.520><c> you</c><00:19:51.760><c> have</c><00:19:51.840><c> to</c><00:19:52.080><c> call</c><00:19:52.240><c> NPI</c><00:19:52.640><c> in</c><00:19:52.799><c> the</c><00:19:52.960><c> I</c><00:19:53.280><c> error.</c>

00:19:53.750 --> 00:19:53.760 align:start position:0%
uh, you have to call NPI in the I error.
 

00:19:53.760 --> 00:19:55.029 align:start position:0%
uh, you have to call NPI in the I error.
You<00:19:53.919><c> have</c><00:19:54.000><c> to</c><00:19:54.080><c> include</c><00:19:54.320><c> a</c><00:19:54.480><c> header</c><00:19:54.720><c> file.</c><00:19:54.960><c> You</c>

00:19:55.029 --> 00:19:55.039 align:start position:0%
You have to include a header file. You
 

00:19:55.039 --> 00:19:57.029 align:start position:0%
You have to include a header file. You
have<00:19:55.120><c> to</c><00:19:55.200><c> do</c><00:19:55.280><c> NPI</c><00:19:55.679><c> COM</c><00:19:56.000><c> size</c><00:19:56.240><c> and</c><00:19:56.400><c> NPI</c><00:19:56.799><c> COM</c>

00:19:57.029 --> 00:19:57.039 align:start position:0%
have to do NPI COM size and NPI COM
 

00:19:57.039 --> 00:19:59.669 align:start position:0%
have to do NPI COM size and NPI COM
right<00:19:57.840><c> all</c><00:19:58.000><c> NPI</c><00:19:58.480><c> programs</c><00:19:58.799><c> start</c><00:19:59.039><c> like</c><00:19:59.280><c> that.</c>

00:19:59.669 --> 00:19:59.679 align:start position:0%
right all NPI programs start like that.
 

00:19:59.679 --> 00:20:02.710 align:start position:0%
right all NPI programs start like that.
Okay.<00:20:00.480><c> Um,</c><00:20:00.960><c> well</c><00:20:01.280><c> that's</c><00:20:01.919><c> really</c><00:20:02.240><c> nasty,</c>

00:20:02.710 --> 00:20:02.720 align:start position:0%
Okay. Um, well that's really nasty,
 

00:20:02.720 --> 00:20:05.029 align:start position:0%
Okay. Um, well that's really nasty,
horrible<00:20:03.120><c> code</c><00:20:03.360><c> to</c><00:20:03.440><c> have</c><00:20:04.480><c> nice</c><00:20:04.720><c> to</c><00:20:04.799><c> have</c><00:20:04.880><c> a</c>

00:20:05.029 --> 00:20:05.039 align:start position:0%
horrible code to have nice to have a
 

00:20:05.039 --> 00:20:06.870 align:start position:0%
horrible code to have nice to have a
routine<00:20:05.360><c> called</c><00:20:05.600><c> power</c><00:20:05.840><c> begin.</c><00:20:06.320><c> Okay.</c><00:20:06.720><c> So</c>

00:20:06.870 --> 00:20:06.880 align:start position:0%
routine called power begin. Okay. So
 

00:20:06.880 --> 00:20:08.789 align:start position:0%
routine called power begin. Okay. So
this<00:20:07.120><c> four-term</c><00:20:07.520><c> routine</c><00:20:08.000><c> for</c><00:20:08.240><c> my</c><00:20:08.400><c> four-term</c>

00:20:08.789 --> 00:20:08.799 align:start position:0%
this four-term routine for my four-term
 

00:20:08.799 --> 00:20:09.990 align:start position:0%
this four-term routine for my four-term
program<00:20:09.039><c> here</c><00:20:09.280><c> this</c><00:20:09.360><c> comes</c><00:20:09.520><c> from</c><00:20:09.679><c> something</c><00:20:09.840><c> I</c>

00:20:09.990 --> 00:20:10.000 align:start position:0%
program here this comes from something I
 

00:20:10.000 --> 00:20:11.750 align:start position:0%
program here this comes from something I
wrote<00:20:10.160><c> a</c><00:20:10.320><c> long</c><00:20:10.480><c> time</c><00:20:10.559><c> ago</c><00:20:11.120><c> had</c><00:20:11.280><c> a</c><00:20:11.440><c> function</c>

00:20:11.750 --> 00:20:11.760 align:start position:0%
wrote a long time ago had a function
 

00:20:11.760 --> 00:20:13.909 align:start position:0%
wrote a long time ago had a function
called<00:20:12.000><c> power</c><00:20:12.320><c> begin</c><00:20:12.960><c> which</c><00:20:13.200><c> which</c><00:20:13.520><c> returned</c>

00:20:13.909 --> 00:20:13.919 align:start position:0%
called power begin which which returned
 

00:20:13.919 --> 00:20:15.830 align:start position:0%
called power begin which which returned
the<00:20:14.160><c> size</c><00:20:14.480><c> i.e</c><00:20:14.799><c> the</c><00:20:14.960><c> number</c><00:20:15.120><c> of</c><00:20:15.280><c> processes</c><00:20:15.679><c> and</c>

00:20:15.830 --> 00:20:15.840 align:start position:0%
the size i.e the number of processes and
 

00:20:15.840 --> 00:20:18.230 align:start position:0%
the size i.e the number of processes and
the<00:20:16.000><c> pro</c><00:20:16.320><c> and</c><00:20:16.400><c> the</c><00:20:16.559><c> proc</c><00:20:16.960><c> ID</c><00:20:17.200><c> the</c><00:20:17.360><c> ID</c><00:20:17.600><c> the</c><00:20:17.840><c> ID</c><00:20:18.080><c> of</c>

00:20:18.230 --> 00:20:18.240 align:start position:0%
the pro and the proc ID the ID the ID of
 

00:20:18.240 --> 00:20:20.710 align:start position:0%
the pro and the proc ID the ID the ID of
the<00:20:18.400><c> process</c><00:20:19.440><c> uh</c><00:20:19.679><c> and</c><00:20:19.840><c> in</c><00:20:20.080><c> fact</c><00:20:20.320><c> in</c><00:20:20.559><c> this</c>

00:20:20.710 --> 00:20:20.720 align:start position:0%
the process uh and in fact in this
 

00:20:20.720 --> 00:20:23.110 align:start position:0%
the process uh and in fact in this
program<00:20:20.960><c> I</c><00:20:21.200><c> got</c><00:20:21.360><c> sick</c><00:20:21.520><c> of</c><00:20:21.679><c> the</c><00:20:21.840><c> fact</c><00:20:21.919><c> that</c><00:20:22.160><c> npi</c>

00:20:23.110 --> 00:20:23.120 align:start position:0%
program I got sick of the fact that npi
 

00:20:23.120 --> 00:20:25.190 align:start position:0%
program I got sick of the fact that npi
refers<00:20:23.520><c> to</c><00:20:23.679><c> processes</c><00:20:24.240><c> starting</c><00:20:24.559><c> from</c><00:20:24.720><c> zero.</c>

00:20:25.190 --> 00:20:25.200 align:start position:0%
refers to processes starting from zero.
 

00:20:25.200 --> 00:20:27.029 align:start position:0%
refers to processes starting from zero.
So<00:20:25.360><c> in</c><00:20:25.600><c> my</c><00:20:25.760><c> main</c><00:20:26.000><c> program</c><00:20:26.320><c> I</c><00:20:26.559><c> referred</c><00:20:26.880><c> them</c>

00:20:27.029 --> 00:20:27.039 align:start position:0%
So in my main program I referred them
 

00:20:27.039 --> 00:20:29.830 align:start position:0%
So in my main program I referred them
from<00:20:27.280><c> one</c><00:20:27.840><c> I</c><00:20:28.240><c> added</c><00:20:28.480><c> once</c><00:20:28.720><c> the</c><00:20:28.880><c> proc</c><00:20:29.200><c> ID</c><00:20:29.600><c> and</c>

00:20:29.830 --> 00:20:29.840 align:start position:0%
from one I added once the proc ID and
 

00:20:29.840 --> 00:20:32.390 align:start position:0%
from one I added once the proc ID and
obviously<00:20:30.159><c> subtracted</c><00:20:30.720><c> off</c><00:20:31.039><c> later</c><00:20:31.360><c> on.</c><00:20:32.240><c> And</c>

00:20:32.390 --> 00:20:32.400 align:start position:0%
obviously subtracted off later on. And
 

00:20:32.400 --> 00:20:35.110 align:start position:0%
obviously subtracted off later on. And
then<00:20:32.640><c> for</c><00:20:32.720><c> example</c><00:20:33.440><c> for</c><00:20:33.760><c> your</c><00:20:33.919><c> serial</c><00:20:34.400><c> machine</c>

00:20:35.110 --> 00:20:35.120 align:start position:0%
then for example for your serial machine
 

00:20:35.120 --> 00:20:36.710 align:start position:0%
then for example for your serial machine
this<00:20:35.280><c> is</c><00:20:35.600><c> this</c><00:20:35.760><c> is</c><00:20:35.840><c> just</c><00:20:36.000><c> a</c><00:20:36.159><c> completely</c><00:20:36.400><c> dummy</c>

00:20:36.710 --> 00:20:36.720 align:start position:0%
this is this is just a completely dummy
 

00:20:36.720 --> 00:20:38.549 align:start position:0%
this is this is just a completely dummy
routine<00:20:37.440><c> but</c><00:20:37.679><c> you</c><00:20:37.840><c> know</c><00:20:37.919><c> you</c><00:20:38.159><c> should</c><00:20:38.320><c> you</c>

00:20:38.549 --> 00:20:38.559 align:start position:0%
routine but you know you should you
 

00:20:38.559 --> 00:20:40.870 align:start position:0%
routine but you know you should you
should<00:20:38.720><c> not</c><00:20:38.960><c> have</c><00:20:39.280><c> random</c><00:20:39.760><c> NPI</c><00:20:40.240><c> calls</c><00:20:40.559><c> in</c><00:20:40.720><c> your</c>

00:20:40.870 --> 00:20:40.880 align:start position:0%
should not have random NPI calls in your
 

00:20:40.880 --> 00:20:43.510 align:start position:0%
should not have random NPI calls in your
main<00:20:41.200><c> code</c><00:20:41.919><c> here</c><00:20:42.159><c> your</c><00:20:42.320><c> main</c><00:20:42.559><c> code</c><00:20:42.720><c> goes</c><00:20:43.039><c> call</c>

00:20:43.510 --> 00:20:43.520 align:start position:0%
main code here your main code goes call
 

00:20:43.520 --> 00:20:45.590 align:start position:0%
main code here your main code goes call
again<00:20:43.840><c> and</c><00:20:44.000><c> that</c><00:20:44.080><c> looks</c><00:20:44.320><c> much</c><00:20:44.559><c> nicer</c><00:20:45.360><c> than</c>

00:20:45.590 --> 00:20:45.600 align:start position:0%
again and that looks much nicer than
 

00:20:45.600 --> 00:20:48.470 align:start position:0%
again and that looks much nicer than
these<00:20:45.840><c> three</c><00:20:46.080><c> rather</c><00:20:47.039><c> um</c><00:20:47.360><c> meaningless</c><00:20:47.919><c> NPI</c>

00:20:48.470 --> 00:20:48.480 align:start position:0%
these three rather um meaningless NPI
 

00:20:48.480 --> 00:20:50.310 align:start position:0%
these three rather um meaningless NPI
calls

00:20:50.310 --> 00:20:50.320 align:start position:0%
calls
 

00:20:50.320 --> 00:20:52.630 align:start position:0%
calls
a<00:20:50.559><c> global</c><00:20:50.960><c> sum.</c><00:20:51.360><c> Okay,</c><00:20:51.760><c> if</c><00:20:52.000><c> I</c><00:20:52.159><c> want</c><00:20:52.240><c> to</c><00:20:52.320><c> do</c><00:20:52.400><c> a</c>

00:20:52.630 --> 00:20:52.640 align:start position:0%
a global sum. Okay, if I want to do a
 

00:20:52.640 --> 00:20:55.190 align:start position:0%
a global sum. Okay, if I want to do a
global<00:20:52.960><c> sum</c><00:20:53.600><c> of</c><00:20:53.919><c> a</c><00:20:54.159><c> single</c><00:20:54.400><c> double</c><00:20:54.799><c> precision</c>

00:20:55.190 --> 00:20:55.200 align:start position:0%
global sum of a single double precision
 

00:20:55.200 --> 00:20:58.390 align:start position:0%
global sum of a single double precision
number,<00:20:55.840><c> I</c><00:20:56.080><c> have</c><00:20:56.240><c> to</c><00:20:56.320><c> do</c><00:20:56.480><c> NPI</c><00:20:57.039><c> or</c><00:20:57.280><c> reduce</c><00:20:58.080><c> of</c>

00:20:58.390 --> 00:20:58.400 align:start position:0%
number, I have to do NPI or reduce of
 

00:20:58.400 --> 00:21:01.510 align:start position:0%
number, I have to do NPI or reduce of
the<00:20:58.640><c> value</c><00:20:59.679><c> into</c><00:21:00.080><c> a</c><00:21:00.240><c> temp</c><00:21:00.640><c> because</c><00:21:00.880><c> by</c><00:21:01.200><c> default</c>

00:21:01.510 --> 00:21:01.520 align:start position:0%
the value into a temp because by default
 

00:21:01.520 --> 00:21:03.270 align:start position:0%
the value into a temp because by default
we<00:21:01.760><c> can't</c><00:21:01.919><c> use</c><00:21:02.080><c> the</c><00:21:02.240><c> same</c><00:21:02.400><c> one.</c><00:21:02.559><c> It's</c><00:21:02.720><c> one</c><00:21:02.880><c> NPI</c>

00:21:03.270 --> 00:21:03.280 align:start position:0%
we can't use the same one. It's one NPI
 

00:21:03.280 --> 00:21:06.070 align:start position:0%
we can't use the same one. It's one NPI
double<00:21:03.520><c> precision</c><00:21:04.000><c> NPI</c><00:21:04.400><c> sum</c><00:21:04.799><c> com</c><00:21:05.600><c> was</c><00:21:05.840><c> defined</c>

00:21:06.070 --> 00:21:06.080 align:start position:0%
double precision NPI sum com was defined
 

00:21:06.080 --> 00:21:09.430 align:start position:0%
double precision NPI sum com was defined
elsewhere<00:21:06.559><c> as</c><00:21:06.720><c> com.</c><00:21:06.960><c> Well,</c><00:21:07.200><c> I</c><00:21:07.919><c> this</c><00:21:08.159><c> is</c><00:21:08.400><c> really</c>

00:21:09.430 --> 00:21:09.440 align:start position:0%
elsewhere as com. Well, I this is really
 

00:21:09.440 --> 00:21:11.830 align:start position:0%
elsewhere as com. Well, I this is really
vastly<00:21:10.080><c> over</c><00:21:10.400><c> complicated</c><00:21:11.039><c> syntax.</c><00:21:11.520><c> What</c><00:21:11.679><c> I</c>

00:21:11.830 --> 00:21:11.840 align:start position:0%
vastly over complicated syntax. What I
 

00:21:11.840 --> 00:21:13.909 align:start position:0%
vastly over complicated syntax. What I
really<00:21:12.000><c> want</c><00:21:12.080><c> to</c><00:21:12.159><c> do</c><00:21:12.240><c> is</c><00:21:12.400><c> have</c><00:21:12.480><c> a</c><00:21:12.640><c> function</c><00:21:13.120><c> sub</c>

00:21:13.909 --> 00:21:13.919 align:start position:0%
really want to do is have a function sub
 

00:21:13.919 --> 00:21:16.710 align:start position:0%
really want to do is have a function sub
call<00:21:14.080><c> it</c><00:21:14.320><c> par</c><00:21:14.799><c> sum.</c><00:21:15.360><c> a</c><00:21:15.600><c> function</c><00:21:16.000><c> which</c><00:21:16.159><c> does</c><00:21:16.480><c> a</c>

00:21:16.710 --> 00:21:16.720 align:start position:0%
call it par sum. a function which does a
 

00:21:16.720 --> 00:21:19.029 align:start position:0%
call it par sum. a function which does a
parallel<00:21:17.360><c> double</c><00:21:17.679><c> precision</c><00:21:18.080><c> month</c><00:21:18.400><c> number</c>

00:21:19.029 --> 00:21:19.039 align:start position:0%
parallel double precision month number
 

00:21:19.039 --> 00:21:21.029 align:start position:0%
parallel double precision month number
double<00:21:19.440><c> precision</c><00:21:19.840><c> sorry</c><00:21:20.080><c> a</c><00:21:20.320><c> parallel</c><00:21:20.640><c> sum</c><00:21:20.880><c> of</c>

00:21:21.029 --> 00:21:21.039 align:start position:0%
double precision sorry a parallel sum of
 

00:21:21.039 --> 00:21:23.190 align:start position:0%
double precision sorry a parallel sum of
double<00:21:21.280><c> precision</c><00:21:21.679><c> number</c><00:21:22.480><c> and</c><00:21:22.640><c> if</c><00:21:22.880><c> I</c><00:21:23.039><c> know</c>

00:21:23.190 --> 00:21:23.200 align:start position:0%
double precision number and if I know
 

00:21:23.200 --> 00:21:24.789 align:start position:0%
double precision number and if I know
I'm<00:21:23.360><c> always</c><00:21:23.600><c> using</c><00:21:23.840><c> com</c><00:21:24.159><c> world</c><00:21:24.400><c> but</c><00:21:24.559><c> I</c><00:21:24.640><c> know</c>

00:21:24.789 --> 00:21:24.799 align:start position:0%
I'm always using com world but I know
 

00:21:24.799 --> 00:21:27.669 align:start position:0%
I'm always using com world but I know
I'm<00:21:24.960><c> always</c><00:21:25.120><c> using</c><00:21:25.440><c> doubles</c><00:21:26.400><c> um</c><00:21:26.640><c> and</c><00:21:27.280><c> I</c><00:21:27.520><c> only</c>

00:21:27.669 --> 00:21:27.679 align:start position:0%
I'm always using doubles um and I only
 

00:21:27.679 --> 00:21:29.430 align:start position:0%
I'm always using doubles um and I only
want<00:21:27.840><c> a</c><00:21:28.000><c> single</c><00:21:28.240><c> scaler</c><00:21:28.640><c> here</c><00:21:28.799><c> I</c><00:21:28.960><c> can</c><00:21:29.120><c> make</c><00:21:29.200><c> the</c>

00:21:29.430 --> 00:21:29.440 align:start position:0%
want a single scaler here I can make the
 

00:21:29.440 --> 00:21:31.750 align:start position:0%
want a single scaler here I can make the
the<00:21:29.760><c> the</c><00:21:30.080><c> call</c><00:21:30.320><c> in</c><00:21:30.559><c> the</c><00:21:30.720><c> in</c><00:21:30.880><c> the</c><00:21:31.039><c> main</c><00:21:31.280><c> program</c>

00:21:31.750 --> 00:21:31.760 align:start position:0%
the the call in the in the main program
 

00:21:31.760 --> 00:21:36.789 align:start position:0%
the the call in the in the main program
much<00:21:32.240><c> more</c><00:21:33.360><c> um</c><00:21:34.320><c> readable</c><00:21:35.440><c> okay</c><00:21:36.320><c> and</c><00:21:36.480><c> then</c><00:21:36.640><c> for</c>

00:21:36.789 --> 00:21:36.799 align:start position:0%
much more um readable okay and then for
 

00:21:36.799 --> 00:21:39.029 align:start position:0%
much more um readable okay and then for
the<00:21:36.960><c> serial</c><00:21:37.280><c> machine</c><00:21:37.679><c> of</c><00:21:37.840><c> course</c><00:21:38.320><c> I</c><00:21:38.559><c> have</c><00:21:38.799><c> I</c>

00:21:39.029 --> 00:21:39.039 align:start position:0%
the serial machine of course I have I
 

00:21:39.039 --> 00:21:40.870 align:start position:0%
the serial machine of course I have I
return<00:21:39.360><c> nothing</c><00:21:39.840><c> it</c><00:21:40.080><c> I</c><00:21:40.320><c> don't</c><00:21:40.480><c> need</c><00:21:40.559><c> to</c><00:21:40.720><c> do</c>

00:21:40.870 --> 00:21:40.880 align:start position:0%
return nothing it I don't need to do
 

00:21:40.880 --> 00:21:42.870 align:start position:0%
return nothing it I don't need to do
anything<00:21:41.120><c> here</c><00:21:41.520><c> so</c><00:21:41.840><c> my</c><00:21:42.080><c> main</c><00:21:42.320><c> code</c><00:21:42.559><c> when</c><00:21:42.720><c> I</c>

00:21:42.870 --> 00:21:42.880 align:start position:0%
anything here so my main code when I
 

00:21:42.880 --> 00:21:44.070 align:start position:0%
anything here so my main code when I
want<00:21:42.960><c> to</c><00:21:43.039><c> do</c><00:21:43.120><c> a</c><00:21:43.200><c> parallel</c><00:21:43.520><c> double</c><00:21:43.760><c> precision</c>

00:21:44.070 --> 00:21:44.080 align:start position:0%
want to do a parallel double precision
 

00:21:44.080 --> 00:21:47.510 align:start position:0%
want to do a parallel double precision
sum<00:21:44.400><c> is</c><00:21:44.880><c> in</c><00:21:45.039><c> for</c><00:21:45.679><c> call</c><00:21:46.000><c> bumpar</c><00:21:46.559><c> d</c><00:21:46.720><c> sum</c><00:21:46.960><c> of</c><00:21:47.120><c> x</c>

00:21:47.510 --> 00:21:47.520 align:start position:0%
sum is in for call bumpar d sum of x
 

00:21:47.520 --> 00:21:50.230 align:start position:0%
sum is in for call bumpar d sum of x
which<00:21:47.760><c> is</c><00:21:47.919><c> much</c><00:21:48.080><c> nicer</c><00:21:48.240><c> than</c><00:21:48.480><c> npi</c><00:21:48.799><c> will</c><00:21:49.039><c> reduce</c>

00:21:50.230 --> 00:21:50.240 align:start position:0%
which is much nicer than npi will reduce
 

00:21:50.240 --> 00:21:55.270 align:start position:0%
which is much nicer than npi will reduce
x<00:21:51.039><c> x</c><00:21:51.360><c> 10</c><00:21:51.679><c> 1</c><00:21:51.919><c> mpi</c><00:21:52.559><c> position</c><00:21:52.880><c> npi</c><00:21:53.440><c> 7</c><00:21:53.760><c> mpi</c><00:21:54.799><c> a</c><00:21:55.039><c> com</c>

00:21:55.270 --> 00:21:55.280 align:start position:0%
x x 10 1 mpi position npi 7 mpi a com
 

00:21:55.280 --> 00:21:57.270 align:start position:0%
x x 10 1 mpi position npi 7 mpi a com
world<00:21:55.600><c> I</c><00:21:55.840><c> error</c><00:21:56.080><c> okay</c><00:21:56.320><c> so</c><00:21:56.480><c> that</c><00:21:56.640><c> that's</c><00:21:57.039><c> much</c>

00:21:57.270 --> 00:21:57.280 align:start position:0%
world I error okay so that that's much
 

00:21:57.280 --> 00:21:59.750 align:start position:0%
world I error okay so that that's much
nicer

00:21:59.750 --> 00:21:59.760 align:start position:0%
nicer
 

00:21:59.760 --> 00:22:01.909 align:start position:0%
nicer
and<00:22:00.000><c> then</c><00:22:00.159><c> in</c><00:22:00.320><c> your</c><00:22:00.480><c> make</c><00:22:00.880><c> file</c><00:22:01.200><c> if</c><00:22:01.360><c> you</c><00:22:01.520><c> if</c><00:22:01.679><c> you</c>

00:22:01.909 --> 00:22:01.919 align:start position:0%
and then in your make file if you if you
 

00:22:01.919 --> 00:22:04.149 align:start position:0%
and then in your make file if you if you
or<00:22:02.159><c> if</c><00:22:02.320><c> you're</c><00:22:02.400><c> a</c><00:22:02.559><c> cmake</c><00:22:03.039><c> person</c><00:22:03.360><c> be</c><00:22:03.520><c> more</c>

00:22:04.149 --> 00:22:04.159 align:start position:0%
or if you're a cmake person be more
 

00:22:04.159 --> 00:22:06.710 align:start position:0%
or if you're a cmake person be more
sophisticated<00:22:04.720><c> than</c><00:22:04.960><c> this</c><00:22:05.440><c> I</c><00:22:05.679><c> basically</c><00:22:06.480><c> I</c>

00:22:06.710 --> 00:22:06.720 align:start position:0%
sophisticated than this I basically I
 

00:22:06.720 --> 00:22:09.350 align:start position:0%
sophisticated than this I basically I
have<00:22:06.880><c> my</c><00:22:07.760><c> for</c><00:22:07.840><c> for</c><00:22:08.080><c> reasons</c><00:22:08.559><c> unknown</c><00:22:08.960><c> only</c><00:22:09.200><c> to</c>

00:22:09.350 --> 00:22:09.360 align:start position:0%
have my for for reasons unknown only to
 

00:22:09.360 --> 00:22:12.230 align:start position:0%
have my for for reasons unknown only to
myself<00:22:09.679><c> I</c><00:22:09.919><c> actually</c><00:22:10.080><c> had</c><00:22:10.559><c> two</c><00:22:11.679><c> uh</c><00:22:11.840><c> I</c><00:22:12.000><c> I</c>

00:22:12.230 --> 00:22:12.240 align:start position:0%
myself I actually had two uh I I
 

00:22:12.240 --> 00:22:15.510 align:start position:0%
myself I actually had two uh I I
scrolled<00:22:12.559><c> away</c><00:22:12.720><c> my</c><00:22:12.880><c> mpf</c><00:22:13.360><c> functions</c><00:22:13.679><c> in</c><00:22:14.000><c> two</c><00:22:15.039><c> um</c>

00:22:15.510 --> 00:22:15.520 align:start position:0%
scrolled away my mpf functions in two um
 

00:22:15.520 --> 00:22:17.750 align:start position:0%
scrolled away my mpf functions in two um
routines<00:22:16.000><c> dem</c><00:22:16.240><c> parallel</c><00:22:16.559><c> and</c><00:22:16.720><c> dems.</c><00:22:17.520><c> But</c>

00:22:17.750 --> 00:22:17.760 align:start position:0%
routines dem parallel and dems. But
 

00:22:17.760 --> 00:22:20.070 align:start position:0%
routines dem parallel and dems. But
basically<00:22:18.159><c> my</c><00:22:18.320><c> my</c><00:22:18.559><c> sequential</c><00:22:18.960><c> source</c><00:22:19.840><c> this</c>

00:22:20.070 --> 00:22:20.080 align:start position:0%
basically my my sequential source this
 

00:22:20.080 --> 00:22:23.029 align:start position:0%
basically my my sequential source this
code<00:22:20.320><c> here</c><00:22:21.039><c> had</c><00:22:21.360><c> no</c><00:22:21.679><c> explicit</c><00:22:22.080><c> call</c><00:22:22.320><c> to</c><00:22:22.480><c> NPI.</c><00:22:22.960><c> I</c>

00:22:23.029 --> 00:22:23.039 align:start position:0%
code here had no explicit call to NPI. I
 

00:22:23.039 --> 00:22:25.430 align:start position:0%
code here had no explicit call to NPI. I
have<00:22:23.200><c> routines</c><00:22:23.679><c> called</c><00:22:23.919><c> the</c><00:22:24.080><c> halo</c><00:22:24.480><c> swapping</c>

00:22:25.430 --> 00:22:25.440 align:start position:0%
have routines called the halo swapping
 

00:22:25.440 --> 00:22:28.149 align:start position:0%
have routines called the halo swapping
power<00:22:25.679><c> in</c><00:22:25.840><c> it</c><00:22:26.159><c> par</c><00:22:26.480><c> dum.</c><00:22:27.280><c> These</c><00:22:27.600><c> routines</c><00:22:27.919><c> were</c>

00:22:28.149 --> 00:22:28.159 align:start position:0%
power in it par dum. These routines were
 

00:22:28.159 --> 00:22:30.149 align:start position:0%
power in it par dum. These routines were
defined<00:22:28.400><c> in</c><00:22:28.640><c> NPI</c><00:22:29.120><c> source.</c><00:22:29.360><c> I</c><00:22:29.440><c> also</c><00:22:29.679><c> had</c><00:22:29.760><c> a</c><00:22:29.919><c> fake</c>

00:22:30.149 --> 00:22:30.159 align:start position:0%
defined in NPI source. I also had a fake
 

00:22:30.159 --> 00:22:31.750 align:start position:0%
defined in NPI source. I also had a fake
source<00:22:30.559><c> and</c><00:22:30.720><c> I</c><00:22:30.880><c> had</c><00:22:31.039><c> to</c><00:22:31.280><c> have</c><00:22:31.360><c> parallel</c>

00:22:31.750 --> 00:22:31.760 align:start position:0%
source and I had to have parallel
 

00:22:31.760 --> 00:22:33.669 align:start position:0%
source and I had to have parallel
sources<00:22:32.159><c> fake</c><00:22:32.320><c> source</c><00:22:32.559><c> for</c><00:22:32.720><c> NPI</c><00:22:33.200><c> source.</c><00:22:33.440><c> I</c>

00:22:33.669 --> 00:22:33.679 align:start position:0%
sources fake source for NPI source. I
 

00:22:33.679 --> 00:22:35.750 align:start position:0%
sources fake source for NPI source. I
could<00:22:33.840><c> compile</c><00:22:34.240><c> up</c><00:22:34.480><c> a</c><00:22:34.799><c> serial</c><00:22:35.120><c> or</c><00:22:35.360><c> parallel</c>

00:22:35.750 --> 00:22:35.760 align:start position:0%
could compile up a serial or parallel
 

00:22:35.760 --> 00:22:38.630 align:start position:0%
could compile up a serial or parallel
program<00:22:36.320><c> from</c><00:22:36.640><c> the</c><00:22:36.880><c> same</c><00:22:37.120><c> source</c><00:22:37.919><c> with</c><00:22:38.159><c> a</c><00:22:38.400><c> very</c>

00:22:38.630 --> 00:22:38.640 align:start position:0%
program from the same source with a very
 

00:22:38.640 --> 00:22:40.310 align:start position:0%
program from the same source with a very
small<00:22:38.880><c> chain.</c><00:22:39.200><c> Now</c><00:22:39.360><c> this</c><00:22:39.520><c> is</c><00:22:39.600><c> something</c><00:22:40.000><c> it's</c>

00:22:40.310 --> 00:22:40.320 align:start position:0%
small chain. Now this is something it's
 

00:22:40.320 --> 00:22:42.870 align:start position:0%
small chain. Now this is something it's
almost<00:22:40.559><c> impossible</c><00:22:40.960><c> to</c><00:22:41.120><c> retrofit</c><00:22:42.240><c> but</c><00:22:42.480><c> it's</c><00:22:42.640><c> a</c>

00:22:42.870 --> 00:22:42.880 align:start position:0%
almost impossible to retrofit but it's a
 

00:22:42.880 --> 00:22:44.470 align:start position:0%
almost impossible to retrofit but it's a
very<00:22:43.039><c> good</c><00:22:43.200><c> design</c><00:22:43.600><c> decision</c><00:22:43.919><c> to</c><00:22:44.080><c> take</c><00:22:44.240><c> right</c>

00:22:44.470 --> 00:22:44.480 align:start position:0%
very good design decision to take right
 

00:22:44.480 --> 00:22:47.669 align:start position:0%
very good design decision to take right
from<00:22:44.720><c> the</c><00:22:44.880><c> start.</c>

00:22:47.669 --> 00:22:47.679 align:start position:0%
from the start.
 

00:22:47.679 --> 00:22:52.230 align:start position:0%
from the start.
So<00:22:48.400><c> um</c><00:22:48.559><c> and</c><00:22:49.360><c> and</c><00:22:49.600><c> in</c><00:22:49.840><c> C</c><00:22:50.640><c> uh</c><00:22:50.880><c> you</c><00:22:51.039><c> know</c><00:22:51.280><c> ugly</c><00:22:51.600><c> code</c>

00:22:52.230 --> 00:22:52.240 align:start position:0%
So um and and in C uh you know ugly code
 

00:22:52.240 --> 00:22:53.909 align:start position:0%
So um and and in C uh you know ugly code
NPI<00:22:52.960><c> null</c><00:22:53.200><c> null</c><00:22:53.440><c> this</c><00:22:53.600><c> is</c><00:22:53.679><c> particularly</c>

00:22:53.909 --> 00:22:53.919 align:start position:0%
NPI null null this is particularly
 

00:22:53.919 --> 00:22:57.590 align:start position:0%
NPI null null this is particularly
horrible<00:22:54.320><c> in</c><00:22:54.480><c> C</c><00:22:54.720><c> npit</c><00:22:55.600><c> a</c><00:22:55.760><c> nice</c><00:22:56.240><c> you</c><00:22:56.400><c> do</c><00:22:56.640><c> power</c>

00:22:57.590 --> 00:22:57.600 align:start position:0%
horrible in C npit a nice you do power
 

00:22:57.600 --> 00:23:00.630 align:start position:0%
horrible in C npit a nice you do power
again<00:22:57.919><c> size</c><00:22:58.240><c> rank</c><00:22:59.280><c> okay</c><00:22:59.600><c> this</c><00:22:59.840><c> is</c><00:23:00.000><c> much</c><00:23:00.320><c> nicer</c>

00:23:00.630 --> 00:23:00.640 align:start position:0%
again size rank okay this is much nicer
 

00:23:00.640 --> 00:23:02.630 align:start position:0%
again size rank okay this is much nicer
to<00:23:00.880><c> do</c><00:23:01.120><c> okay</c><00:23:01.760><c> and</c><00:23:01.919><c> then</c><00:23:02.080><c> you</c><00:23:02.240><c> basically</c>

00:23:02.630 --> 00:23:02.640 align:start position:0%
to do okay and then you basically
 

00:23:02.640 --> 00:23:04.870 align:start position:0%
to do okay and then you basically
implement<00:23:03.039><c> that</c><00:23:03.280><c> with</c><00:23:03.440><c> these</c><00:23:04.000><c> um</c><00:23:04.159><c> in</c><00:23:04.400><c> this</c><00:23:04.640><c> so</c>

00:23:04.870 --> 00:23:04.880 align:start position:0%
implement that with these um in this so
 

00:23:04.880 --> 00:23:07.590 align:start position:0%
implement that with these um in this so
so<00:23:05.200><c> your</c><00:23:05.440><c> main</c><00:23:05.760><c> code</c><00:23:06.480><c> just</c><00:23:06.720><c> has</c><00:23:06.960><c> power</c><00:23:07.280><c> again</c>

00:23:07.590 --> 00:23:07.600 align:start position:0%
so your main code just has power again
 

00:23:07.600 --> 00:23:09.830 align:start position:0%
so your main code just has power again
size<00:23:08.000><c> rank</c><00:23:08.400><c> and</c><00:23:08.559><c> it's</c><00:23:08.799><c> implemented</c><00:23:09.200><c> in</c><00:23:09.360><c> npi</c>

00:23:09.830 --> 00:23:09.840 align:start position:0%
size rank and it's implemented in npi
 

00:23:09.840 --> 00:23:11.110 align:start position:0%
size rank and it's implemented in npi
and<00:23:10.000><c> of</c><00:23:10.080><c> course</c><00:23:10.240><c> this</c><00:23:10.320><c> is</c><00:23:10.480><c> a</c><00:23:10.559><c> bit</c><00:23:10.640><c> of</c><00:23:10.720><c> a</c><00:23:10.799><c> trivia</c>

00:23:11.110 --> 00:23:11.120 align:start position:0%
and of course this is a bit of a trivia
 

00:23:11.120 --> 00:23:13.830 align:start position:0%
and of course this is a bit of a trivia
example<00:23:11.360><c> but</c><00:23:11.600><c> it</c><00:23:11.760><c> becomes</c><00:23:12.080><c> much</c><00:23:12.320><c> more</c>

00:23:13.830 --> 00:23:13.840 align:start position:0%
example but it becomes much more
 

00:23:13.840 --> 00:23:15.430 align:start position:0%
example but it becomes much more
useful<00:23:14.159><c> when</c><00:23:14.400><c> these</c><00:23:14.640><c> are</c><00:23:14.799><c> more</c><00:23:15.120><c> these</c><00:23:15.360><c> are</c>

00:23:15.430 --> 00:23:15.440 align:start position:0%
useful when these are more these are
 

00:23:15.440 --> 00:23:17.909 align:start position:0%
useful when these are more these are
message<00:23:15.679><c> passing</c><00:23:16.080><c> operations</c><00:23:16.480><c> like</c><00:23:17.440><c> um</c><00:23:17.600><c> well</c>

00:23:17.909 --> 00:23:17.919 align:start position:0%
message passing operations like um well
 

00:23:17.919 --> 00:23:20.230 align:start position:0%
message passing operations like um well
like<00:23:18.400><c> like</c><00:23:18.640><c> summation</c><00:23:19.200><c> but</c><00:23:19.440><c> also</c><00:23:19.840><c> halo</c>

00:23:20.230 --> 00:23:20.240 align:start position:0%
like like summation but also halo
 

00:23:20.240 --> 00:23:23.270 align:start position:0%
like like summation but also halo
swapping<00:23:20.640><c> and</c><00:23:20.799><c> such.</c>

00:23:23.270 --> 00:23:23.280 align:start position:0%
swapping and such.
 

00:23:23.280 --> 00:23:27.029 align:start position:0%
swapping and such.
Uh<00:23:23.520><c> so</c><00:23:23.840><c> again</c><00:23:24.240><c> yeah</c><00:23:25.200><c> you</c><00:23:25.360><c> know</c><00:23:25.840><c> um</c><00:23:26.240><c> rainfall</c><00:23:26.799><c> is</c>

00:23:27.029 --> 00:23:27.039 align:start position:0%
Uh so again yeah you know um rainfall is
 

00:23:27.039 --> 00:23:29.669 align:start position:0%
Uh so again yeah you know um rainfall is
par<00:23:27.280><c> d</c><00:23:27.520><c> sum</c><00:23:27.760><c> of</c><00:23:27.919><c> rainfall</c><00:23:28.799><c> uh</c><00:23:28.960><c> is</c><00:23:29.200><c> much</c><00:23:29.440><c> in</c>

00:23:29.669 --> 00:23:29.679 align:start position:0%
par d sum of rainfall uh is much in
 

00:23:29.679 --> 00:23:33.430 align:start position:0%
par d sum of rainfall uh is much in
forran<00:23:30.480><c> is</c><00:23:30.799><c> much</c><00:23:31.039><c> more</c><00:23:31.679><c> um</c><00:23:32.400><c> um</c><00:23:32.640><c> is</c><00:23:32.880><c> is</c><00:23:33.200><c> much</c>

00:23:33.430 --> 00:23:33.440 align:start position:0%
forran is much more um um is is much
 

00:23:33.440 --> 00:23:36.390 align:start position:0%
forran is much more um um is is much
more<00:23:34.080><c> um</c><00:23:34.480><c> sorry</c><00:23:34.720><c> in</c><00:23:34.880><c> c</c><00:23:35.679><c> example</c><00:23:35.919><c> rainfall</c><00:23:36.320><c> is</c>

00:23:36.390 --> 00:23:36.400 align:start position:0%
more um sorry in c example rainfall is
 

00:23:36.400 --> 00:23:38.950 align:start position:0%
more um sorry in c example rainfall is
par<00:23:36.559><c> d</c><00:23:36.720><c> sum</c><00:23:36.880><c> of</c><00:23:37.039><c> rainfall</c><00:23:37.760><c> is</c><00:23:38.000><c> much</c><00:23:38.240><c> more</c><00:23:38.480><c> in</c><00:23:38.640><c> a</c>

00:23:38.950 --> 00:23:38.960 align:start position:0%
par d sum of rainfall is much more in a
 

00:23:38.960 --> 00:23:40.870 align:start position:0%
par d sum of rainfall is much more in a
say<00:23:39.120><c> I've</c><00:23:39.280><c> got</c><00:23:39.360><c> a</c><00:23:39.520><c> climate</c><00:23:39.760><c> modeling</c><00:23:40.159><c> code</c><00:23:40.640><c> is</c>

00:23:40.870 --> 00:23:40.880 align:start position:0%
say I've got a climate modeling code is
 

00:23:40.880 --> 00:23:44.470 align:start position:0%
say I've got a climate modeling code is
much<00:23:41.200><c> more</c><00:23:41.840><c> um</c><00:23:42.240><c> um</c><00:23:42.960><c> readable</c><00:23:43.679><c> and</c><00:23:43.919><c> useful</c><00:23:44.320><c> than</c>

00:23:44.470 --> 00:23:44.480 align:start position:0%
much more um um readable and useful than
 

00:23:44.480 --> 00:23:46.870 align:start position:0%
much more um um readable and useful than
than<00:23:44.799><c> this</c><00:23:44.960><c> kind</c><00:23:45.120><c> of</c><00:23:45.280><c> stuff</c><00:23:45.520><c> here.</c><00:23:45.919><c> Okay.</c><00:23:46.640><c> And</c>

00:23:46.870 --> 00:23:46.880 align:start position:0%
than this kind of stuff here. Okay. And
 

00:23:46.880 --> 00:23:48.549 align:start position:0%
than this kind of stuff here. Okay. And
so<00:23:47.200><c> you</c><00:23:47.360><c> know</c><00:23:47.679><c> if</c><00:23:47.919><c> you</c><00:23:48.000><c> have</c><00:23:48.080><c> a</c><00:23:48.240><c> comment</c>

00:23:48.549 --> 00:23:48.559 align:start position:0%
so you know if you have a comment
 

00:23:48.559 --> 00:23:50.070 align:start position:0%
so you know if you have a comment
globally<00:23:48.880><c> sum</c><00:23:49.120><c> the</c><00:23:49.280><c> par</c><00:23:49.440><c> double</c><00:23:49.760><c> preision</c>

00:23:50.070 --> 00:23:50.080 align:start position:0%
globally sum the par double preision
 

00:23:50.080 --> 00:23:52.230 align:start position:0%
globally sum the par double preision
rainfall<00:23:50.480><c> value</c><00:23:50.880><c> rainfall</c><00:23:51.280><c> is</c><00:23:51.440><c> part</c><00:23:51.840><c> sum</c><00:23:52.080><c> of</c>

00:23:52.230 --> 00:23:52.240 align:start position:0%
rainfall value rainfall is part sum of
 

00:23:52.240 --> 00:23:54.070 align:start position:0%
rainfall value rainfall is part sum of
rainfall<00:23:52.880><c> that</c><00:23:53.200><c> makes</c><00:23:53.360><c> sense</c><00:23:53.679><c> even</c><00:23:53.919><c> somebody</c>

00:23:54.070 --> 00:23:54.080 align:start position:0%
rainfall that makes sense even somebody
 

00:23:54.080 --> 00:23:55.669 align:start position:0%
rainfall that makes sense even somebody
who's<00:23:54.240><c> not</c><00:23:54.320><c> a</c><00:23:54.480><c> parallel</c><00:23:54.880><c> programmer</c><00:23:55.360><c> whereas</c>

00:23:55.669 --> 00:23:55.679 align:start position:0%
who's not a parallel programmer whereas
 

00:23:55.679 --> 00:23:57.190 align:start position:0%
who's not a parallel programmer whereas
this

00:23:57.190 --> 00:23:57.200 align:start position:0%
this
 

00:23:57.200 --> 00:24:00.789 align:start position:0%
this
whoops<00:23:57.919><c> sorry</c><00:23:59.200><c> this</c><00:23:59.520><c> is</c><00:23:59.760><c> just</c><00:24:00.080><c> gibberish.</c>

00:24:00.789 --> 00:24:00.799 align:start position:0%
whoops sorry this is just gibberish.
 

00:24:00.799 --> 00:24:03.190 align:start position:0%
whoops sorry this is just gibberish.
Okay<00:24:01.919><c> so</c><00:24:02.080><c> again</c><00:24:02.320><c> it</c><00:24:02.480><c> makes</c><00:24:02.559><c> your</c><00:24:02.720><c> code</c><00:24:02.960><c> much</c>

00:24:03.190 --> 00:24:03.200 align:start position:0%
Okay so again it makes your code much
 

00:24:03.200 --> 00:24:07.190 align:start position:0%
Okay so again it makes your code much
more<00:24:03.360><c> readable</c><00:24:04.080><c> to</c><00:24:04.240><c> to</c><00:24:04.640><c> all</c><00:24:04.880><c> and</c><00:24:05.039><c> sanding.</c>

00:24:07.190 --> 00:24:07.200 align:start position:0%
more readable to to all and sanding.
 

00:24:07.200 --> 00:24:11.269 align:start position:0%
more readable to to all and sanding.
Again<00:24:07.600><c> this</c><00:24:07.760><c> is</c><00:24:07.840><c> just</c><00:24:08.080><c> a</c><00:24:09.200><c> make</c><00:24:09.440><c> file.</c><00:24:10.559><c> So</c><00:24:11.120><c> you</c>

00:24:11.269 --> 00:24:11.279 align:start position:0%
Again this is just a make file. So you
 

00:24:11.279 --> 00:24:13.510 align:start position:0%
Again this is just a make file. So you
know<00:24:11.440><c> why</c><00:24:11.600><c> is</c><00:24:11.760><c> putting</c><00:24:12.080><c> your</c><00:24:12.720><c> all</c><00:24:12.960><c> your</c><00:24:13.120><c> API</c>

00:24:13.510 --> 00:24:13.520 align:start position:0%
know why is putting your all your API
 

00:24:13.520 --> 00:24:15.990 align:start position:0%
know why is putting your all your API
calls<00:24:13.760><c> in</c><00:24:13.919><c> the</c><00:24:14.080><c> library</c><00:24:14.400><c> worthwhile?</c><00:24:15.440><c> Well,</c>

00:24:15.990 --> 00:24:16.000 align:start position:0%
calls in the library worthwhile? Well,
 

00:24:16.000 --> 00:24:18.950 align:start position:0%
calls in the library worthwhile? Well,
if<00:24:16.159><c> you</c><00:24:16.480><c> if</c><00:24:16.720><c> you</c><00:24:17.039><c> really</c><00:24:18.080><c> gun</c><00:24:18.400><c> for</c><00:24:18.559><c> it,</c><00:24:18.720><c> you</c><00:24:18.880><c> can</c>

00:24:18.950 --> 00:24:18.960 align:start position:0%
if you if you really gun for it, you can
 

00:24:18.960 --> 00:24:20.470 align:start position:0%
if you if you really gun for it, you can
compile<00:24:19.200><c> a</c><00:24:19.360><c> serial</c><00:24:19.760><c> program</c><00:24:20.000><c> from</c><00:24:20.159><c> the</c><00:24:20.320><c> same</c>

00:24:20.470 --> 00:24:20.480 align:start position:0%
compile a serial program from the same
 

00:24:20.480 --> 00:24:22.310 align:start position:0%
compile a serial program from the same
source.<00:24:20.880><c> It</c><00:24:21.120><c> makes</c><00:24:21.279><c> the</c><00:24:21.520><c> parallel</c><00:24:21.919><c> code</c><00:24:22.159><c> much</c>

00:24:22.310 --> 00:24:22.320 align:start position:0%
source. It makes the parallel code much
 

00:24:22.320 --> 00:24:25.750 align:start position:0%
source. It makes the parallel code much
more<00:24:22.559><c> readable.</c><00:24:23.760><c> And</c><00:24:24.080><c> for</c><00:24:24.240><c> example,</c><00:24:25.200><c> um</c><00:24:25.600><c> you</c>

00:24:25.750 --> 00:24:25.760 align:start position:0%
more readable. And for example, um you
 

00:24:25.760 --> 00:24:27.350 align:start position:0%
more readable. And for example, um you
know,<00:24:25.840><c> if</c><00:24:26.080><c> you</c><00:24:26.320><c> if</c><00:24:26.559><c> you're</c><00:24:26.799><c> concerned</c><00:24:27.120><c> that</c>

00:24:27.350 --> 00:24:27.360 align:start position:0%
know, if you if you're concerned that
 

00:24:27.360 --> 00:24:29.590 align:start position:0%
know, if you if you're concerned that
some<00:24:27.520><c> of</c><00:24:27.600><c> your</c><00:24:27.760><c> double</c><00:24:28.080><c> imagine</c>

00:24:29.590 --> 00:24:29.600 align:start position:0%
some of your double imagine
 

00:24:29.600 --> 00:24:31.350 align:start position:0%
some of your double imagine
you<00:24:29.840><c> think</c><00:24:30.240><c> I</c><00:24:30.480><c> think</c><00:24:30.559><c> that</c><00:24:30.799><c> somewhere</c><00:24:31.120><c> along</c>

00:24:31.350 --> 00:24:31.360 align:start position:0%
you think I think that somewhere along
 

00:24:31.360 --> 00:24:34.390 align:start position:0%
you think I think that somewhere along
the<00:24:31.600><c> way</c><00:24:32.240><c> my</c><00:24:32.559><c> double</c><00:24:32.880><c> precision</c><00:24:33.600><c> accum</c><00:24:34.159><c> my</c><00:24:34.320><c> my</c>

00:24:34.390 --> 00:24:34.400 align:start position:0%
the way my double precision accum my my
 

00:24:34.400 --> 00:24:36.630 align:start position:0%
the way my double precision accum my my
my<00:24:34.720><c> my</c><00:24:35.279><c> reductions</c><00:24:35.760><c> of</c><00:24:35.919><c> my</c><00:24:36.000><c> double</c><00:24:36.240><c> precision</c>

00:24:36.630 --> 00:24:36.640 align:start position:0%
my my reductions of my double precision
 

00:24:36.640 --> 00:24:40.070 align:start position:0%
my my reductions of my double precision
variables<00:24:37.360><c> are</c><00:24:37.600><c> getting</c><00:24:37.919><c> funny</c><00:24:38.240><c> results.</c><00:24:39.600><c> If</c>

00:24:40.070 --> 00:24:40.080 align:start position:0%
variables are getting funny results. If
 

00:24:40.080 --> 00:24:42.230 align:start position:0%
variables are getting funny results. If
uh<00:24:40.240><c> if</c><00:24:40.480><c> you</c><00:24:40.640><c> have</c><00:24:40.720><c> a</c><00:24:40.880><c> 100</c><00:24:41.200><c> calls</c><00:24:41.440><c> to</c><00:24:41.600><c> NPI</c><00:24:42.080><c> or</c>

00:24:42.230 --> 00:24:42.240 align:start position:0%
uh if you have a 100 calls to NPI or
 

00:24:42.240 --> 00:24:43.750 align:start position:0%
uh if you have a 100 calls to NPI or
reduce<00:24:42.559><c> in</c><00:24:42.720><c> your</c><00:24:42.880><c> code,</c><00:24:43.200><c> you</c><00:24:43.360><c> then</c><00:24:43.520><c> have</c><00:24:43.600><c> to</c>

00:24:43.750 --> 00:24:43.760 align:start position:0%
reduce in your code, you then have to
 

00:24:43.760 --> 00:24:45.750 align:start position:0%
reduce in your code, you then have to
put<00:24:43.919><c> debug</c><00:24:44.320><c> statements</c><00:24:44.720><c> into</c><00:24:44.960><c> a</c><00:24:45.039><c> 100</c><00:24:45.279><c> lines.</c>

00:24:45.750 --> 00:24:45.760 align:start position:0%
put debug statements into a 100 lines.
 

00:24:45.760 --> 00:24:47.909 align:start position:0%
put debug statements into a 100 lines.
If<00:24:45.919><c> you</c><00:24:46.080><c> funnel</c><00:24:46.480><c> all</c><00:24:46.720><c> your</c><00:24:46.880><c> NPI</c><00:24:47.360><c> or</c><00:24:47.520><c> reduces</c>

00:24:47.909 --> 00:24:47.919 align:start position:0%
If you funnel all your NPI or reduces
 

00:24:47.919 --> 00:24:50.149 align:start position:0%
If you funnel all your NPI or reduces
through<00:24:48.159><c> one</c><00:24:48.320><c> of</c><00:24:48.400><c> your</c><00:24:48.640><c> own</c><00:24:48.880><c> functions,</c><00:24:49.919><c> you</c>

00:24:50.149 --> 00:24:50.159 align:start position:0%
through one of your own functions, you
 

00:24:50.159 --> 00:24:51.990 align:start position:0%
through one of your own functions, you
can<00:24:50.320><c> just</c><00:24:50.480><c> add</c><00:24:50.720><c> debugging</c><00:24:51.279><c> to</c><00:24:51.440><c> that</c><00:24:51.679><c> function</c>

00:24:51.990 --> 00:24:52.000 align:start position:0%
can just add debugging to that function
 

00:24:52.000 --> 00:24:54.870 align:start position:0%
can just add debugging to that function
on<00:24:52.240><c> entry.</c><00:24:52.720><c> Say,</c><00:24:53.200><c> you</c><00:24:53.360><c> know,</c><00:24:53.919><c> uh</c><00:24:54.320><c> the</c><00:24:54.559><c> input</c>

00:24:54.870 --> 00:24:54.880 align:start position:0%
on entry. Say, you know, uh the input
 

00:24:54.880 --> 00:24:56.789 align:start position:0%
on entry. Say, you know, uh the input
value<00:24:55.120><c> on</c><00:24:55.360><c> rank</c><00:24:55.600><c> this</c><00:24:55.840><c> is</c><00:24:56.000><c> bus</c><00:24:56.240><c> and</c><00:24:56.400><c> the</c><00:24:56.559><c> output</c>

00:24:56.789 --> 00:24:56.799 align:start position:0%
value on rank this is bus and the output
 

00:24:56.799 --> 00:24:58.390 align:start position:0%
value on rank this is bus and the output
value<00:24:57.039><c> is</c><00:24:57.200><c> this.</c><00:24:57.440><c> So</c><00:24:57.520><c> it</c><00:24:57.679><c> makes</c><00:24:57.840><c> debugging</c>

00:24:58.390 --> 00:24:58.400 align:start position:0%
value is this. So it makes debugging
 

00:24:58.400 --> 00:25:01.110 align:start position:0%
value is this. So it makes debugging
much<00:24:58.640><c> better.</c><00:24:59.760><c> This</c><00:25:00.000><c> is</c><00:25:00.159><c> not</c><00:25:00.320><c> such</c><00:25:00.559><c> a</c><00:25:00.720><c> big</c><00:25:00.960><c> deal</c>

00:25:01.110 --> 00:25:01.120 align:start position:0%
much better. This is not such a big deal
 

00:25:01.120 --> 00:25:02.710 align:start position:0%
much better. This is not such a big deal
now,<00:25:01.360><c> but</c><00:25:01.600><c> definitely</c><00:25:01.919><c> in</c><00:25:02.080><c> the</c><00:25:02.159><c> old</c><00:25:02.320><c> days</c><00:25:02.480><c> when</c>

00:25:02.710 --> 00:25:02.720 align:start position:0%
now, but definitely in the old days when
 

00:25:02.720 --> 00:25:05.110 align:start position:0%
now, but definitely in the old days when
NPI<00:25:03.279><c> wasn't</c><00:25:03.600><c> necessarily</c><00:25:04.480><c> completely</c>

00:25:05.110 --> 00:25:05.120 align:start position:0%
NPI wasn't necessarily completely
 

00:25:05.120 --> 00:25:07.190 align:start position:0%
NPI wasn't necessarily completely
optimized<00:25:05.840><c> everywhere,</c><00:25:06.480><c> it</c><00:25:06.640><c> enables</c><00:25:07.039><c> the</c>

00:25:07.190 --> 00:25:07.200 align:start position:0%
optimized everywhere, it enables the
 

00:25:07.200 --> 00:25:08.630 align:start position:0%
optimized everywhere, it enables the
code<00:25:07.279><c> to</c><00:25:07.440><c> be</c><00:25:07.520><c> ported</c><00:25:07.760><c> to</c><00:25:07.919><c> other</c><00:25:08.159><c> libraries.</c>

00:25:08.630 --> 00:25:08.640 align:start position:0%
code to be ported to other libraries.
 

00:25:08.640 --> 00:25:11.510 align:start position:0%
code to be ported to other libraries.
Imagine<00:25:09.279><c> someone</c><00:25:09.600><c> said</c><00:25:09.840><c> on</c><00:25:10.080><c> the</c><00:25:10.240><c> cray</c><00:25:11.200><c> there's</c>

00:25:11.510 --> 00:25:11.520 align:start position:0%
Imagine someone said on the cray there's
 

00:25:11.520 --> 00:25:14.070 align:start position:0%
Imagine someone said on the cray there's
this<00:25:11.760><c> really</c><00:25:12.000><c> really</c><00:25:12.320><c> fast</c><00:25:12.880><c> handcoded</c><00:25:13.679><c> super</c>

00:25:14.070 --> 00:25:14.080 align:start position:0%
this really really fast handcoded super
 

00:25:14.080 --> 00:25:15.909 align:start position:0%
this really really fast handcoded super
fast<00:25:14.640><c> um</c><00:25:14.880><c> routine</c><00:25:15.200><c> for</c><00:25:15.440><c> doing</c><00:25:15.600><c> double</c>

00:25:15.909 --> 00:25:15.919 align:start position:0%
fast um routine for doing double
 

00:25:15.919 --> 00:25:18.470 align:start position:0%
fast um routine for doing double
precision<00:25:16.640><c> global</c><00:25:17.039><c> sums.</c><00:25:17.840><c> You</c><00:25:18.080><c> don't</c><00:25:18.159><c> want</c><00:25:18.320><c> to</c>

00:25:18.470 --> 00:25:18.480 align:start position:0%
precision global sums. You don't want to
 

00:25:18.480 --> 00:25:20.470 align:start position:0%
precision global sums. You don't want to
replace<00:25:18.799><c> a</c><00:25:18.880><c> thousand</c><00:25:19.279><c> calls</c><00:25:19.520><c> to</c><00:25:19.679><c> MPI</c><00:25:20.159><c> reduce</c>

00:25:20.470 --> 00:25:20.480 align:start position:0%
replace a thousand calls to MPI reduce
 

00:25:20.480 --> 00:25:22.630 align:start position:0%
replace a thousand calls to MPI reduce
with<00:25:20.640><c> this</c><00:25:20.799><c> magic</c><00:25:21.120><c> cray</c><00:25:21.440><c> routine.</c><00:25:22.240><c> But</c><00:25:22.320><c> if</c><00:25:22.559><c> you</c>

00:25:22.630 --> 00:25:22.640 align:start position:0%
with this magic cray routine. But if you
 

00:25:22.640 --> 00:25:24.390 align:start position:0%
with this magic cray routine. But if you
have<00:25:22.880><c> if</c><00:25:23.039><c> you</c><00:25:23.200><c> again</c><00:25:23.440><c> if</c><00:25:23.600><c> you</c><00:25:23.760><c> funneled</c><00:25:24.240><c> all</c>

00:25:24.390 --> 00:25:24.400 align:start position:0%
have if you again if you funneled all
 

00:25:24.400 --> 00:25:26.390 align:start position:0%
have if you again if you funneled all
your<00:25:24.640><c> MPI</c>

00:25:26.390 --> 00:25:26.400 align:start position:0%
your MPI
 

00:25:26.400 --> 00:25:28.710 align:start position:0%
your MPI
um<00:25:27.120><c> or</c><00:25:27.279><c> reduces</c><00:25:27.919><c> all</c><00:25:28.080><c> your</c><00:25:28.240><c> reductions</c>

00:25:28.710 --> 00:25:28.720 align:start position:0%
um or reduces all your reductions
 

00:25:28.720 --> 00:25:30.470 align:start position:0%
um or reduces all your reductions
through<00:25:29.039><c> your</c><00:25:29.200><c> own</c><00:25:29.440><c> routine</c><00:25:29.840><c> you</c><00:25:30.080><c> can</c><00:25:30.159><c> just</c>

00:25:30.470 --> 00:25:30.480 align:start position:0%
through your own routine you can just
 

00:25:30.480 --> 00:25:33.110 align:start position:0%
through your own routine you can just
change<00:25:30.799><c> that.</c><00:25:31.200><c> Okay.</c><00:25:32.320><c> And</c><00:25:32.480><c> again</c><00:25:32.799><c> we'll</c><00:25:33.039><c> see</c>

00:25:33.110 --> 00:25:33.120 align:start position:0%
change that. Okay. And again we'll see
 

00:25:33.120 --> 00:25:35.350 align:start position:0%
change that. Okay. And again we'll see
this<00:25:33.360><c> later</c><00:25:33.520><c> on.</c><00:25:33.760><c> we</c><00:25:33.840><c> do</c><00:25:34.000><c> halo</c><00:25:34.320><c> swapping</c><00:25:35.200><c> you</c>

00:25:35.350 --> 00:25:35.360 align:start position:0%
this later on. we do halo swapping you
 

00:25:35.360 --> 00:25:37.110 align:start position:0%
this later on. we do halo swapping you
know<00:25:35.679><c> if</c><00:25:35.840><c> I</c><00:25:36.000><c> want</c><00:25:36.080><c> to</c><00:25:36.240><c> swap</c><00:25:36.400><c> halos</c><00:25:36.799><c> should</c><00:25:36.960><c> I</c>

00:25:37.110 --> 00:25:37.120 align:start position:0%
know if I want to swap halos should I
 

00:25:37.120 --> 00:25:39.750 align:start position:0%
know if I want to swap halos should I
use<00:25:37.279><c> send</c><00:25:37.679><c> b</c><00:25:37.919><c> send</c><00:25:38.159><c> I</c><00:25:38.400><c> send</c><00:25:38.799><c> is</c><00:25:39.120><c> send</c><00:25:39.440><c> desk</c><00:25:39.440><c> s</c>

00:25:39.750 --> 00:25:39.760 align:start position:0%
use send b send I send is send desk s
 

00:25:39.760 --> 00:25:41.269 align:start position:0%
use send b send I send is send desk s
whatever<00:25:40.159><c> there's</c><00:25:40.320><c> a</c><00:25:40.400><c> hundred</c><00:25:40.720><c> ways</c><00:25:40.880><c> of</c><00:25:41.120><c> doing</c>

00:25:41.269 --> 00:25:41.279 align:start position:0%
whatever there's a hundred ways of doing
 

00:25:41.279 --> 00:25:43.990 align:start position:0%
whatever there's a hundred ways of doing
it<00:25:42.080><c> if</c><00:25:42.240><c> you</c><00:25:42.400><c> funnel</c><00:25:42.799><c> all</c><00:25:43.039><c> your</c><00:25:43.279><c> halo</c><00:25:43.679><c> swapping</c>

00:25:43.990 --> 00:25:44.000 align:start position:0%
it if you funnel all your halo swapping
 

00:25:44.000 --> 00:25:45.909 align:start position:0%
it if you funnel all your halo swapping
calls<00:25:44.320><c> through</c><00:25:44.480><c> a</c><00:25:44.640><c> function</c><00:25:44.960><c> call</c><00:25:45.600><c> called</c>

00:25:45.909 --> 00:25:45.919 align:start position:0%
calls through a function call called
 

00:25:45.919 --> 00:25:48.470 align:start position:0%
calls through a function call called
halo<00:25:46.320><c> swap</c><00:25:46.880><c> you</c><00:25:47.039><c> can</c><00:25:47.200><c> then</c><00:25:47.440><c> basically</c>

00:25:48.470 --> 00:25:48.480 align:start position:0%
halo swap you can then basically
 

00:25:48.480 --> 00:25:50.310 align:start position:0%
halo swap you can then basically
whenever<00:25:48.880><c> you</c><00:25:49.039><c> port</c><00:25:49.360><c> your</c><00:25:49.520><c> code</c><00:25:49.760><c> to</c><00:25:49.919><c> a</c><00:25:50.159><c> new</c>

00:25:50.310 --> 00:25:50.320 align:start position:0%
whenever you port your code to a new
 

00:25:50.320 --> 00:25:52.470 align:start position:0%
whenever you port your code to a new
machine<00:25:51.039><c> play</c><00:25:51.520><c> you</c><00:25:51.679><c> might</c><00:25:51.840><c> have</c><00:25:51.919><c> half</c><00:25:52.080><c> a</c><00:25:52.240><c> dozen</c>

00:25:52.470 --> 00:25:52.480 align:start position:0%
machine play you might have half a dozen
 

00:25:52.480 --> 00:25:53.990 align:start position:0%
machine play you might have half a dozen
implementations<00:25:52.960><c> of</c><00:25:53.039><c> the</c><00:25:53.120><c> halo</c><00:25:53.440><c> swapping</c><00:25:53.840><c> all</c>

00:25:53.990 --> 00:25:54.000 align:start position:0%
implementations of the halo swapping all
 

00:25:54.000 --> 00:25:55.590 align:start position:0%
implementations of the halo swapping all
done<00:25:54.159><c> in</c><00:25:54.320><c> slightly</c><00:25:54.640><c> different</c><00:25:54.799><c> ways</c><00:25:55.200><c> and</c><00:25:55.440><c> you</c>

00:25:55.590 --> 00:25:55.600 align:start position:0%
done in slightly different ways and you
 

00:25:55.600 --> 00:25:58.070 align:start position:0%
done in slightly different ways and you
can<00:25:55.679><c> pick</c><00:25:55.840><c> the</c><00:25:56.080><c> one</c><00:25:56.880><c> uh</c><00:25:57.039><c> which</c><00:25:57.279><c> is</c><00:25:57.440><c> fastest</c><00:25:57.840><c> on</c>

00:25:58.070 --> 00:25:58.080 align:start position:0%
can pick the one uh which is fastest on
 

00:25:58.080 --> 00:26:00.310 align:start position:0%
can pick the one uh which is fastest on
your<00:25:58.320><c> target</c><00:25:58.640><c> machine</c><00:25:59.440><c> so</c><00:25:59.600><c> you</c><00:25:59.760><c> can</c><00:25:59.919><c> optimize</c>

00:26:00.310 --> 00:26:00.320 align:start position:0%
your target machine so you can optimize
 

00:26:00.320 --> 00:26:01.830 align:start position:0%
your target machine so you can optimize
your<00:26:00.480><c> comps</c><00:26:00.720><c> for</c><00:26:00.880><c> different</c><00:26:01.039><c> NPI</c><00:26:01.440><c> libraries</c>

00:26:01.830 --> 00:26:01.840 align:start position:0%
your comps for different NPI libraries
 

00:26:01.840 --> 00:26:04.710 align:start position:0%
your comps for different NPI libraries
okay<00:26:02.159><c> one</c><00:26:02.320><c> NPI</c><00:26:02.720><c> library</c><00:26:02.960><c> might</c><00:26:03.520><c> best</c><00:26:03.679><c> to</c><00:26:03.840><c> do</c>

00:26:04.710 --> 00:26:04.720 align:start position:0%
okay one NPI library might best to do
 

00:26:04.720 --> 00:26:06.950 align:start position:0%
okay one NPI library might best to do
what<00:26:05.120><c> to</c><00:26:05.360><c> do</c><00:26:05.520><c> one</c><00:26:06.000><c> method</c><00:26:06.320><c> of</c><00:26:06.559><c> sending</c><00:26:06.799><c> on</c>

00:26:06.950 --> 00:26:06.960 align:start position:0%
what to do one method of sending on
 

00:26:06.960 --> 00:26:08.230 align:start position:0%
what to do one method of sending on
another.<00:26:07.279><c> It</c><00:26:07.440><c> might</c><00:26:07.520><c> be</c><00:26:07.600><c> a</c><00:26:07.760><c> question</c><00:26:08.000><c> doing</c>

00:26:08.230 --> 00:26:08.240 align:start position:0%
another. It might be a question doing
 

00:26:08.240 --> 00:26:10.070 align:start position:0%
another. It might be a question doing
another.

00:26:10.070 --> 00:26:10.080 align:start position:0%
another.
 

00:26:10.080 --> 00:26:12.470 align:start position:0%
another.
Uh<00:26:10.320><c> so</c><00:26:10.559><c> that's</c><00:26:10.799><c> really</c><00:26:11.360><c> that's</c><00:26:11.600><c> a</c><00:26:11.840><c> general</c><00:26:12.240><c> you</c>

00:26:12.470 --> 00:26:12.480 align:start position:0%
Uh so that's really that's a general you
 

00:26:12.480 --> 00:26:14.870 align:start position:0%
Uh so that's really that's a general you
know<00:26:12.799><c> design.</c><00:26:13.440><c> Um</c><00:26:13.760><c> and</c><00:26:14.000><c> this</c><00:26:14.159><c> used</c><00:26:14.320><c> to</c><00:26:14.400><c> be</c><00:26:14.559><c> very</c>

00:26:14.870 --> 00:26:14.880 align:start position:0%
know design. Um and this used to be very
 

00:26:14.880 --> 00:26:17.190 align:start position:0%
know design. Um and this used to be very
common<00:26:15.200><c> in</c><00:26:15.440><c> the</c><00:26:15.600><c> old</c><00:26:15.840><c> days</c><00:26:16.480><c> when</c><00:26:16.720><c> you</c><00:26:16.960><c> didn't</c>

00:26:17.190 --> 00:26:17.200 align:start position:0%
common in the old days when you didn't
 

00:26:17.200 --> 00:26:19.190 align:start position:0%
common in the old days when you didn't
even<00:26:17.440><c> know</c><00:26:17.679><c> you</c><00:26:17.840><c> had</c><00:26:18.080><c> NPI.</c><00:26:18.640><c> You</c><00:26:18.799><c> didn't</c><00:26:19.039><c> even</c>

00:26:19.190 --> 00:26:19.200 align:start position:0%
even know you had NPI. You didn't even
 

00:26:19.200 --> 00:26:20.870 align:start position:0%
even know you had NPI. You didn't even
know<00:26:19.360><c> what</c><00:26:19.600><c> your</c><00:26:19.840><c> message</c><00:26:20.240><c> passing</c><00:26:20.559><c> library</c>

00:26:20.870 --> 00:26:20.880 align:start position:0%
know what your message passing library
 

00:26:20.880 --> 00:26:22.630 align:start position:0%
know what your message passing library
was<00:26:21.120><c> going</c><00:26:21.200><c> to</c><00:26:21.360><c> be.</c><00:26:21.760><c> So</c><00:26:21.919><c> you</c><00:26:22.159><c> funneled</c><00:26:22.480><c> all</c>

00:26:22.630 --> 00:26:22.640 align:start position:0%
was going to be. So you funneled all
 

00:26:22.640 --> 00:26:23.990 align:start position:0%
was going to be. So you funneled all
your<00:26:22.799><c> communications</c><00:26:23.360><c> through</c><00:26:23.600><c> your</c><00:26:23.840><c> own</c>

00:26:23.990 --> 00:26:24.000 align:start position:0%
your communications through your own
 

00:26:24.000 --> 00:26:25.750 align:start position:0%
your communications through your own
interfaces<00:26:24.720><c> and</c><00:26:24.960><c> then</c><00:26:25.120><c> implemented</c><00:26:25.600><c> them</c>

00:26:25.750 --> 00:26:25.760 align:start position:0%
interfaces and then implemented them
 

00:26:25.760 --> 00:26:28.310 align:start position:0%
interfaces and then implemented them
with<00:26:25.919><c> other</c><00:26:26.320><c> now</c><00:26:26.559><c> now</c><00:26:26.799><c> NPI</c><00:26:27.360><c> is</c><00:26:27.679><c> universally</c>

00:26:28.310 --> 00:26:28.320 align:start position:0%
with other now now NPI is universally
 

00:26:28.320 --> 00:26:30.710 align:start position:0%
with other now now NPI is universally
available.<00:26:29.360><c> There's</c><00:26:29.600><c> the</c><00:26:29.840><c> temptation</c><00:26:30.240><c> not</c><00:26:30.480><c> to</c>

00:26:30.710 --> 00:26:30.720 align:start position:0%
available. There's the temptation not to
 

00:26:30.720 --> 00:26:34.070 align:start position:0%
available. There's the temptation not to
do<00:26:30.880><c> this</c><00:26:31.039><c> but</c><00:26:31.279><c> it</c><00:26:31.520><c> is</c><00:26:31.679><c> still</c><00:26:32.000><c> a</c><00:26:32.240><c> a</c><00:26:32.480><c> good</c><00:26:33.840><c> um</c>

00:26:34.070 --> 00:26:34.080 align:start position:0%
do this but it is still a a good um
 

00:26:34.080 --> 00:26:38.950 align:start position:0%
do this but it is still a a good um
discipline<00:26:34.880><c> and</c><00:26:35.200><c> programming</c><00:26:35.760><c> technique.</c>

00:26:38.950 --> 00:26:38.960 align:start position:0%
 
 

00:26:38.960 --> 00:26:42.630 align:start position:0%
 
Um<00:26:39.679><c> this</c><00:26:40.000><c> is</c><00:26:40.080><c> something</c><00:26:40.400><c> which</c><00:26:41.039><c> um</c><00:26:42.080><c> you</c><00:26:42.240><c> know</c>

00:26:42.630 --> 00:26:42.640 align:start position:0%
Um this is something which um you know
 

00:26:42.640 --> 00:26:44.390 align:start position:0%
Um this is something which um you know
this<00:26:42.799><c> won't</c><00:26:43.039><c> call</c><00:26:43.360><c> this</c><00:26:43.600><c> is</c><00:26:43.679><c> a</c><00:26:43.919><c> simple</c><00:26:44.240><c> error</c>

00:26:44.390 --> 00:26:44.400 align:start position:0%
this won't call this is a simple error
 

00:26:44.400 --> 00:26:46.149 align:start position:0%
this won't call this is a simple error
but<00:26:44.640><c> you</c><00:26:44.720><c> know</c><00:26:44.960><c> not</c><00:26:45.200><c> calling</c><00:26:45.679><c> collectors</c>

00:26:46.149 --> 00:26:46.159 align:start position:0%
but you know not calling collectors
 

00:26:46.159 --> 00:26:48.070 align:start position:0%
but you know not calling collectors
correct<00:26:46.559><c> correctly</c><00:26:47.360><c> you</c><00:26:47.600><c> have</c><00:26:47.679><c> to</c><00:26:47.840><c> call</c>

00:26:48.070 --> 00:26:48.080 align:start position:0%
correct correctly you have to call
 

00:26:48.080 --> 00:26:49.669 align:start position:0%
correct correctly you have to call
collectors<00:26:48.480><c> with</c><00:26:48.640><c> all</c><00:26:48.880><c> processes</c><00:26:49.360><c> in</c><00:26:49.520><c> the</c>

00:26:49.669 --> 00:26:49.679 align:start position:0%
collectors with all processes in the
 

00:26:49.679 --> 00:26:51.269 align:start position:0%
collectors with all processes in the
communicator<00:26:50.400><c> you</c><00:26:50.559><c> know</c><00:26:50.720><c> people</c><00:26:51.039><c> when</c>

00:26:51.269 --> 00:26:51.279 align:start position:0%
communicator you know people when
 

00:26:51.279 --> 00:26:53.669 align:start position:0%
communicator you know people when
they're<00:26:51.440><c> learning</c><00:26:51.760><c> NPI</c><00:26:52.720><c> uh</c><00:26:52.880><c> would</c><00:26:53.120><c> do</c><00:26:53.200><c> this</c><00:26:53.440><c> if</c>

00:26:53.669 --> 00:26:53.679 align:start position:0%
they're learning NPI uh would do this if
 

00:26:53.679 --> 00:26:57.430 align:start position:0%
they're learning NPI uh would do this if
rank<00:26:54.000><c> equals</c><00:26:54.400><c> zero</c><00:26:55.200><c> NPIB</c><00:26:55.919><c> cast</c><00:26:56.320><c> that's</c><00:26:56.640><c> not</c>

00:26:57.430 --> 00:26:57.440 align:start position:0%
rank equals zero NPIB cast that's not
 

00:26:57.440 --> 00:27:01.430 align:start position:0%
rank equals zero NPIB cast that's not
correct<00:26:58.559><c> uh</c><00:26:59.120><c> uh</c><00:26:59.279><c> you</c><00:26:59.520><c> have</c><00:26:59.679><c> to</c><00:26:59.840><c> call</c><00:27:00.480><c> um</c><00:27:01.039><c> the</c>

00:27:01.430 --> 00:27:01.440 align:start position:0%
correct uh uh you have to call um the
 

00:27:01.440 --> 00:27:03.269 align:start position:0%
correct uh uh you have to call um the
all<00:27:01.679><c> you</c><00:27:01.840><c> have</c><00:27:01.919><c> to</c><00:27:02.000><c> call</c><00:27:02.159><c> a</c><00:27:02.320><c> collective</c><00:27:02.799><c> on</c><00:27:03.039><c> all</c>

00:27:03.269 --> 00:27:03.279 align:start position:0%
all you have to call a collective on all
 

00:27:03.279 --> 00:27:04.870 align:start position:0%
all you have to call a collective on all
the<00:27:03.440><c> process</c><00:27:04.000><c> and</c><00:27:04.159><c> obviously</c><00:27:04.320><c> if</c><00:27:04.480><c> you</c><00:27:04.559><c> did</c><00:27:04.720><c> if</c>

00:27:04.870 --> 00:27:04.880 align:start position:0%
the process and obviously if you did if
 

00:27:04.880 --> 00:27:06.630 align:start position:0%
the process and obviously if you did if
rank<00:27:05.120><c> equals</c><00:27:05.360><c> zero</c><00:27:05.600><c> call</c><00:27:06.080><c> reducing</c><00:27:06.480><c> call</c>

00:27:06.630 --> 00:27:06.640 align:start position:0%
rank equals zero call reducing call
 

00:27:06.640 --> 00:27:10.950 align:start position:0%
rank equals zero call reducing call
deadlock<00:27:08.000><c> how</c><00:27:08.240><c> this</c><00:27:08.320><c> is</c><00:27:08.400><c> Another</c><00:27:09.200><c> um</c>

00:27:10.950 --> 00:27:10.960 align:start position:0%
deadlock how this is Another um
 

00:27:10.960 --> 00:27:14.710 align:start position:0%
deadlock how this is Another um
sometimes<00:27:12.080><c> um</c><00:27:12.640><c> people</c><00:27:13.120><c> use</c><00:27:13.520><c> reduce</c><00:27:14.320><c> in</c><00:27:14.559><c> the</c>

00:27:14.710 --> 00:27:14.720 align:start position:0%
sometimes um people use reduce in the
 

00:27:14.720 --> 00:27:16.789 align:start position:0%
sometimes um people use reduce in the
sense<00:27:14.960><c> so</c><00:27:15.200><c> if</c><00:27:15.360><c> you</c><00:27:15.520><c> remember</c><00:27:15.919><c> all</c><00:27:16.159><c> reduce</c><00:27:16.559><c> is</c>

00:27:16.789 --> 00:27:16.799 align:start position:0%
sense so if you remember all reduce is
 

00:27:16.799 --> 00:27:19.190 align:start position:0%
sense so if you remember all reduce is
is<00:27:16.960><c> a</c><00:27:17.120><c> global</c><00:27:17.440><c> sum</c><00:27:17.840><c> where</c><00:27:18.159><c> every</c><00:27:18.480><c> process</c><00:27:18.880><c> gets</c>

00:27:19.190 --> 00:27:19.200 align:start position:0%
is a global sum where every process gets
 

00:27:19.200 --> 00:27:22.549 align:start position:0%
is a global sum where every process gets
the<00:27:19.440><c> answer.</c><00:27:20.400><c> Uh</c><00:27:20.640><c> in</c><00:27:20.960><c> reduce</c><00:27:21.520><c> you</c><00:27:21.760><c> specify</c><00:27:22.240><c> a</c>

00:27:22.549 --> 00:27:22.559 align:start position:0%
the answer. Uh in reduce you specify a
 

00:27:22.559 --> 00:27:23.990 align:start position:0%
the answer. Uh in reduce you specify a
root<00:27:22.799><c> process.</c><00:27:23.279><c> You</c><00:27:23.440><c> might</c><00:27:23.520><c> say</c><00:27:23.679><c> well</c><00:27:23.840><c> only</c>

00:27:23.990 --> 00:27:24.000 align:start position:0%
root process. You might say well only
 

00:27:24.000 --> 00:27:26.070 align:start position:0%
root process. You might say well only
rank<00:27:24.320><c> zero</c><00:27:24.559><c> needs</c><00:27:24.799><c> to</c><00:27:24.880><c> know</c><00:27:25.039><c> this</c><00:27:25.279><c> summation.</c>

00:27:26.070 --> 00:27:26.080 align:start position:0%
rank zero needs to know this summation.
 

00:27:26.080 --> 00:27:28.710 align:start position:0%
rank zero needs to know this summation.
I'll<00:27:26.320><c> call</c><00:27:26.720><c> reduce</c><00:27:27.200><c> and</c><00:27:27.440><c> just</c><00:27:27.840><c> have</c><00:27:28.080><c> rank</c><00:27:28.480><c> zero</c>

00:27:28.710 --> 00:27:28.720 align:start position:0%
I'll call reduce and just have rank zero
 

00:27:28.720 --> 00:27:30.470 align:start position:0%
I'll call reduce and just have rank zero
know<00:27:28.880><c> the</c><00:27:29.120><c> answer.</c><00:27:29.679><c> The</c><00:27:30.000><c> problem</c><00:27:30.159><c> with</c><00:27:30.320><c> the</c>

00:27:30.470 --> 00:27:30.480 align:start position:0%
know the answer. The problem with the
 

00:27:30.480 --> 00:27:32.149 align:start position:0%
know the answer. The problem with the
way<00:27:30.640><c> that</c><00:27:30.720><c> you</c><00:27:30.880><c> program</c><00:27:31.200><c> NPI</c><00:27:31.760><c> which</c><00:27:31.919><c> is</c><00:27:32.000><c> an</c>

00:27:32.149 --> 00:27:32.159 align:start position:0%
way that you program NPI which is an
 

00:27:32.159 --> 00:27:35.029 align:start position:0%
way that you program NPI which is an
SPMD<00:27:32.799><c> model</c><00:27:33.120><c> single</c><00:27:33.440><c> program</c><00:27:33.760><c> multiple</c><00:27:34.159><c> data.</c>

00:27:35.029 --> 00:27:35.039 align:start position:0%
SPMD model single program multiple data.
 

00:27:35.039 --> 00:27:37.510 align:start position:0%
SPMD model single program multiple data.
If<00:27:35.279><c> you</c><00:27:35.440><c> have</c><00:27:35.600><c> a</c><00:27:35.760><c> variable</c><00:27:36.320><c> called</c><00:27:36.880><c> uh</c><00:27:37.200><c> let's</c>

00:27:37.510 --> 00:27:37.520 align:start position:0%
If you have a variable called uh let's
 

00:27:37.520 --> 00:27:40.630 align:start position:0%
If you have a variable called uh let's
say<00:27:37.760><c> global</c><00:27:38.159><c> rainfall</c><00:27:38.880><c> okay</c>

00:27:40.630 --> 00:27:40.640 align:start position:0%
say global rainfall okay
 

00:27:40.640 --> 00:27:44.310 align:start position:0%
say global rainfall okay
that<00:27:41.120><c> variable</c><00:27:41.760><c> exists</c><00:27:42.240><c> on</c><00:27:42.480><c> every</c><00:27:42.799><c> process</c><00:27:44.080><c> if</c>

00:27:44.310 --> 00:27:44.320 align:start position:0%
that variable exists on every process if
 

00:27:44.320 --> 00:27:46.789 align:start position:0%
that variable exists on every process if
you<00:27:44.559><c> compute</c><00:27:44.960><c> it</c><00:27:45.120><c> with</c><00:27:45.360><c> a</c><00:27:45.520><c> global</c><00:27:45.919><c> sum</c><00:27:46.480><c> but</c>

00:27:46.789 --> 00:27:46.799 align:start position:0%
you compute it with a global sum but
 

00:27:46.799 --> 00:27:50.310 align:start position:0%
you compute it with a global sum but
only<00:27:47.200><c> place</c><00:27:47.520><c> the</c><00:27:47.840><c> answer</c><00:27:48.400><c> on</c><00:27:48.640><c> a</c><00:27:48.799><c> rank</c><00:27:49.120><c> zero</c>

00:27:50.310 --> 00:27:50.320 align:start position:0%
only place the answer on a rank zero
 

00:27:50.320 --> 00:27:53.430 align:start position:0%
only place the answer on a rank zero
then<00:27:51.120><c> you</c><00:27:51.440><c> have</c><00:27:51.520><c> a</c><00:27:51.840><c> a</c><00:27:52.640><c> a</c><00:27:52.880><c> variable</c><00:27:53.200><c> called</c>

00:27:53.430 --> 00:27:53.440 align:start position:0%
then you have a a a variable called
 

00:27:53.440 --> 00:27:55.269 align:start position:0%
then you have a a a variable called
global<00:27:53.840><c> rainfall</c><00:27:54.320><c> which</c><00:27:54.559><c> only</c><00:27:54.799><c> makes</c><00:27:55.039><c> sense</c>

00:27:55.269 --> 00:27:55.279 align:start position:0%
global rainfall which only makes sense
 

00:27:55.279 --> 00:27:57.990 align:start position:0%
global rainfall which only makes sense
on<00:27:55.600><c> one</c><00:27:55.840><c> process</c><00:27:56.720><c> now</c><00:27:57.039><c> you</c><00:27:57.279><c> may</c><00:27:57.520><c> remember</c><00:27:57.840><c> that</c>

00:27:57.990 --> 00:27:58.000 align:start position:0%
on one process now you may remember that
 

00:27:58.000 --> 00:27:59.430 align:start position:0%
on one process now you may remember that
when<00:27:58.159><c> you</c><00:27:58.320><c> write</c><00:27:58.480><c> the</c><00:27:58.720><c> code</c><00:27:58.880><c> but</c><00:27:59.039><c> two</c><00:27:59.279><c> years</c>

00:27:59.430 --> 00:27:59.440 align:start position:0%
when you write the code but two years
 

00:27:59.440 --> 00:28:00.789 align:start position:0%
when you write the code but two years
later<00:27:59.679><c> you'll</c><00:27:59.919><c> come</c><00:28:00.080><c> back</c><00:28:00.240><c> and</c><00:28:00.399><c> you</c><00:28:00.559><c> might</c><00:28:00.640><c> say</c>

00:28:00.789 --> 00:28:00.799 align:start position:0%
later you'll come back and you might say
 

00:28:00.799 --> 00:28:01.990 align:start position:0%
later you'll come back and you might say
oh<00:28:00.960><c> there's</c><00:28:01.120><c> this</c><00:28:01.279><c> variable</c><00:28:01.600><c> called</c><00:28:01.760><c> global</c>

00:28:01.990 --> 00:28:02.000 align:start position:0%
oh there's this variable called global
 

00:28:02.000 --> 00:28:03.909 align:start position:0%
oh there's this variable called global
rainfall<00:28:02.399><c> I</c><00:28:02.480><c> need</c><00:28:02.640><c> to</c><00:28:02.799><c> know</c><00:28:02.880><c> that</c><00:28:03.120><c> everywhere</c>

00:28:03.909 --> 00:28:03.919 align:start position:0%
rainfall I need to know that everywhere
 

00:28:03.919 --> 00:28:06.470 align:start position:0%
rainfall I need to know that everywhere
so<00:28:04.240><c> just</c><00:28:04.480><c> as</c><00:28:05.120><c> a</c><00:28:05.440><c> defensive</c><00:28:06.000><c> programming</c>

00:28:06.470 --> 00:28:06.480 align:start position:0%
so just as a defensive programming
 

00:28:06.480 --> 00:28:09.110 align:start position:0%
so just as a defensive programming
technique.<00:28:07.279><c> I</c><00:28:07.600><c> tend</c><00:28:07.840><c> to</c><00:28:08.000><c> use</c><00:28:08.320><c> all</c><00:28:08.559><c> reduces</c>

00:28:09.110 --> 00:28:09.120 align:start position:0%
technique. I tend to use all reduces
 

00:28:09.120 --> 00:28:11.110 align:start position:0%
technique. I tend to use all reduces
everywhere<00:28:09.520><c> in</c><00:28:09.679><c> preference</c><00:28:10.000><c> to</c><00:28:10.159><c> reduce.</c><00:28:10.960><c> You</c>

00:28:11.110 --> 00:28:11.120 align:start position:0%
everywhere in preference to reduce. You
 

00:28:11.120 --> 00:28:13.110 align:start position:0%
everywhere in preference to reduce. You
know,<00:28:11.760><c> perhaps</c><00:28:12.080><c> you</c><00:28:12.320><c> only</c><00:28:12.559><c> need</c><00:28:12.720><c> really</c><00:28:12.960><c> need</c>

00:28:13.110 --> 00:28:13.120 align:start position:0%
know, perhaps you only need really need
 

00:28:13.120 --> 00:28:14.870 align:start position:0%
know, perhaps you only need really need
to<00:28:13.279><c> know</c><00:28:13.440><c> that</c><00:28:13.760><c> the</c><00:28:14.080><c> the</c><00:28:14.320><c> value</c><00:28:14.480><c> on</c><00:28:14.720><c> the</c>

00:28:14.870 --> 00:28:14.880 align:start position:0%
to know that the the value on the
 

00:28:14.880 --> 00:28:17.029 align:start position:0%
to know that the the value on the
controller<00:28:15.360><c> process,</c><00:28:15.760><c> but</c><00:28:16.000><c> but</c><00:28:16.559><c> using</c><00:28:16.880><c> all</c>

00:28:17.029 --> 00:28:17.039 align:start position:0%
controller process, but but using all
 

00:28:17.039 --> 00:28:18.630 align:start position:0%
controller process, but but using all
reduce<00:28:17.360><c> makes</c><00:28:17.520><c> things</c><00:28:17.760><c> simpler</c><00:28:18.159><c> and</c><00:28:18.399><c> there</c>

00:28:18.630 --> 00:28:18.640 align:start position:0%
reduce makes things simpler and there
 

00:28:18.640 --> 00:28:19.990 align:start position:0%
reduce makes things simpler and there
really<00:28:18.799><c> aren't</c><00:28:19.039><c> any</c><00:28:19.279><c> serious</c><00:28:19.600><c> performance</c>

00:28:19.990 --> 00:28:20.000 align:start position:0%
really aren't any serious performance
 

00:28:20.000 --> 00:28:22.070 align:start position:0%
really aren't any serious performance
implications.<00:28:20.640><c> I</c><00:28:20.799><c> think</c><00:28:20.880><c> it's</c><00:28:21.360><c> I</c><00:28:21.600><c> think</c><00:28:21.840><c> it's</c>

00:28:22.070 --> 00:28:22.080 align:start position:0%
implications. I think it's I think it's
 

00:28:22.080 --> 00:28:23.909 align:start position:0%
implications. I think it's I think it's
it's it's<00:28:22.480><c> a</c><00:28:22.640><c> nasty</c><00:28:23.039><c> side</c><00:28:23.279><c> effect</c><00:28:23.600><c> of</c><00:28:23.760><c> the</c>

00:28:23.909 --> 00:28:23.919 align:start position:0%
it's it's a nasty side effect of the
 

00:28:23.919 --> 00:28:26.630 align:start position:0%
it's it's a nasty side effect of the
SPMD<00:28:24.640><c> model</c><00:28:24.880><c> where</c><00:28:25.039><c> every</c><00:28:25.279><c> MPI</c><00:28:25.760><c> process</c><00:28:26.320><c> runs</c>

00:28:26.630 --> 00:28:26.640 align:start position:0%
SPMD model where every MPI process runs
 

00:28:26.640 --> 00:28:29.510 align:start position:0%
SPMD model where every MPI process runs
exactly<00:28:27.039><c> the</c><00:28:27.279><c> same</c><00:28:27.440><c> code</c><00:28:27.919><c> that</c><00:28:28.159><c> all</c><00:28:28.399><c> variables</c>

00:28:29.510 --> 00:28:29.520 align:start position:0%
exactly the same code that all variables
 

00:28:29.520 --> 00:28:31.909 align:start position:0%
exactly the same code that all variables
exist<00:28:30.000><c> everywhere</c><00:28:30.720><c> even</c><00:28:30.960><c> if</c><00:28:31.120><c> their</c><00:28:31.360><c> values</c>

00:28:31.909 --> 00:28:31.919 align:start position:0%
exist everywhere even if their values
 

00:28:31.919 --> 00:28:34.470 align:start position:0%
exist everywhere even if their values
make<00:28:32.159><c> sense</c><00:28:32.880><c> and</c><00:28:33.120><c> you</c><00:28:33.360><c> may</c><00:28:33.520><c> forget</c><00:28:33.840><c> that.</c><00:28:34.159><c> So</c><00:28:34.240><c> I</c>

00:28:34.470 --> 00:28:34.480 align:start position:0%
make sense and you may forget that. So I
 

00:28:34.480 --> 00:28:35.990 align:start position:0%
make sense and you may forget that. So I
think<00:28:34.559><c> using</c><00:28:34.880><c> all</c><00:28:35.039><c> reduces</c><00:28:35.520><c> is</c><00:28:35.679><c> a</c><00:28:35.760><c> good</c>

00:28:35.990 --> 00:28:36.000 align:start position:0%
think using all reduces is a good
 

00:28:36.000 --> 00:28:38.870 align:start position:0%
think using all reduces is a good
programming<00:28:36.399><c> technique.</c>

00:28:38.870 --> 00:28:38.880 align:start position:0%
programming technique.
 

00:28:38.880 --> 00:28:43.029 align:start position:0%
programming technique.
Error<00:28:39.360><c> checking</c><00:28:40.080><c> um</c><00:28:40.399><c> this</c><00:28:40.640><c> is</c><00:28:40.960><c> you</c><00:28:41.120><c> know</c><00:28:41.520><c> um</c><00:28:42.799><c> uh</c>

00:28:43.029 --> 00:28:43.039 align:start position:0%
Error checking um this is you know um uh
 

00:28:43.039 --> 00:28:46.070 align:start position:0%
Error checking um this is you know um uh
this<00:28:43.440><c> is</c><00:28:44.720><c> um</c><00:28:45.200><c> something</c><00:28:45.360><c> which</c><00:28:45.520><c> you</c><00:28:45.760><c> might</c><00:28:45.919><c> do.</c>

00:28:46.070 --> 00:28:46.080 align:start position:0%
this is um something which you might do.
 

00:28:46.080 --> 00:28:48.789 align:start position:0%
this is um something which you might do.
You<00:28:46.240><c> might</c><00:28:46.480><c> say</c><00:28:46.720><c> well</c><00:28:47.440><c> check</c><00:28:47.840><c> for</c><00:28:48.240><c> results.</c>

00:28:48.789 --> 00:28:48.799 align:start position:0%
You might say well check for results.
 

00:28:48.799 --> 00:28:51.590 align:start position:0%
You might say well check for results.
I've<00:28:49.039><c> got</c><00:28:49.120><c> a</c><00:28:49.360><c> partial</c><00:28:49.840><c> value</c>

00:28:51.590 --> 00:28:51.600 align:start position:0%
I've got a partial value
 

00:28:51.600 --> 00:28:53.430 align:start position:0%
I've got a partial value
which<00:28:51.840><c> is</c><00:28:52.000><c> one</c><00:28:52.240><c> float.</c><00:28:52.640><c> I'll</c><00:28:52.799><c> sum</c><00:28:53.039><c> it</c><00:28:53.200><c> up</c>

00:28:53.430 --> 00:28:53.440 align:start position:0%
which is one float. I'll sum it up
 

00:28:53.440 --> 00:28:55.350 align:start position:0%
which is one float. I'll sum it up
everywhere<00:28:54.000><c> but</c><00:28:54.240><c> I</c><00:28:54.399><c> know</c><00:28:54.640><c> for</c><00:28:54.720><c> example</c><00:28:55.120><c> this</c>

00:28:55.350 --> 00:28:55.360 align:start position:0%
everywhere but I know for example this
 

00:28:55.360 --> 00:28:57.830 align:start position:0%
everywhere but I know for example this
summation<00:28:55.840><c> might</c><00:28:56.159><c> be</c><00:28:56.640><c> uh</c><00:28:56.880><c> a</c><00:28:57.039><c> rainfall</c><00:28:57.600><c> total</c>

00:28:57.830 --> 00:28:57.840 align:start position:0%
summation might be uh a rainfall total
 

00:28:57.840 --> 00:28:59.990 align:start position:0%
summation might be uh a rainfall total
rain.<00:28:58.240><c> Clearly</c><00:28:58.559><c> the</c><00:28:58.799><c> rainfall</c><00:28:59.279><c> is</c><00:28:59.360><c> is</c><00:28:59.679><c> less.</c>

00:28:59.990 --> 00:29:00.000 align:start position:0%
rain. Clearly the rainfall is is less.
 

00:29:00.000 --> 00:29:02.789 align:start position:0%
rain. Clearly the rainfall is is less.
It<00:29:00.159><c> has</c><00:29:00.320><c> to</c><00:29:00.399><c> be</c><00:29:00.559><c> positive</c><00:29:01.200><c> or</c><00:29:01.440><c> at</c><00:29:01.440><c> least</c><00:29:02.480><c> non-</c>

00:29:02.789 --> 00:29:02.799 align:start position:0%
It has to be positive or at least non-
 

00:29:02.799 --> 00:29:04.870 align:start position:0%
It has to be positive or at least non-
negative.<00:29:03.440><c> So</c><00:29:03.600><c> you</c><00:29:03.840><c> might</c><00:29:04.000><c> do</c><00:29:04.159><c> an</c><00:29:04.399><c> error</c><00:29:04.640><c> check</c>

00:29:04.870 --> 00:29:04.880 align:start position:0%
negative. So you might do an error check
 

00:29:04.880 --> 00:29:07.590 align:start position:0%
negative. So you might do an error check
if<00:29:05.120><c> sum</c><00:29:05.360><c> is</c><00:29:05.520><c> less</c><00:29:05.760><c> than</c><00:29:05.919><c> zero</c><00:29:06.640><c> print</c><00:29:07.120><c> error.</c>

00:29:07.590 --> 00:29:07.600 align:start position:0%
if sum is less than zero print error.
 

00:29:07.600 --> 00:29:10.149 align:start position:0%
if sum is less than zero print error.
Okay,<00:29:08.080><c> this</c><00:29:08.240><c> is</c><00:29:08.399><c> a</c><00:29:08.559><c> dangerous</c><00:29:08.960><c> thing</c><00:29:09.120><c> to</c><00:29:09.360><c> do</c>

00:29:10.149 --> 00:29:10.159 align:start position:0%
Okay, this is a dangerous thing to do
 

00:29:10.159 --> 00:29:12.950 align:start position:0%
Okay, this is a dangerous thing to do
because<00:29:11.440><c> um</c>

00:29:12.950 --> 00:29:12.960 align:start position:0%
because um
 

00:29:12.960 --> 00:29:20.870 align:start position:0%
because um
um

00:29:20.870 --> 00:29:20.880 align:start position:0%
 
 

00:29:20.880 --> 00:29:24.789 align:start position:0%
 
uh<00:29:21.120><c> because</c><00:29:22.559><c> um</c><00:29:23.600><c> sorry</c><00:29:24.080><c> I'm</c><00:29:24.320><c> being</c><00:29:24.480><c> an</c><00:29:24.640><c> idiot</c>

00:29:24.789 --> 00:29:24.799 align:start position:0%
uh because um sorry I'm being an idiot
 

00:29:24.799 --> 00:29:26.630 align:start position:0%
uh because um sorry I'm being an idiot
here.<00:29:25.360><c> I've</c><00:29:25.520><c> done</c><00:29:25.679><c> an</c><00:29:25.760><c> MP.</c><00:29:26.240><c> So</c><00:29:26.399><c> what</c><00:29:26.480><c> I'm</c>

00:29:26.630 --> 00:29:26.640 align:start position:0%
here. I've done an MP. So what I'm
 

00:29:26.640 --> 00:29:28.070 align:start position:0%
here. I've done an MP. So what I'm
trying<00:29:26.720><c> to</c><00:29:26.799><c> say</c><00:29:26.880><c> is</c><00:29:27.120><c> I've</c><00:29:27.279><c> done</c><00:29:27.440><c> a</c><00:29:27.679><c> reduction</c>

00:29:28.070 --> 00:29:28.080 align:start position:0%
trying to say is I've done a reduction
 

00:29:28.080 --> 00:29:29.669 align:start position:0%
trying to say is I've done a reduction
operation<00:29:28.480><c> here.</c><00:29:28.720><c> Okay,</c><00:29:28.960><c> I'm</c><00:29:29.200><c> doing</c><00:29:29.360><c> NPI</c>

00:29:29.669 --> 00:29:29.679 align:start position:0%
operation here. Okay, I'm doing NPI
 

00:29:29.679 --> 00:29:31.750 align:start position:0%
operation here. Okay, I'm doing NPI
reduce<00:29:30.000><c> or</c><00:29:30.320><c> reduce.</c><00:29:30.799><c> So</c><00:29:31.039><c> this</c><00:29:31.200><c> summation</c>

00:29:31.750 --> 00:29:31.760 align:start position:0%
reduce or reduce. So this summation
 

00:29:31.760 --> 00:29:34.149 align:start position:0%
reduce or reduce. So this summation
value<00:29:32.000><c> is</c><00:29:32.240><c> only</c><00:29:32.640><c> is</c><00:29:32.880><c> only</c><00:29:33.120><c> known</c><00:29:33.520><c> on</c><00:29:33.760><c> rank</c>

00:29:34.149 --> 00:29:34.159 align:start position:0%
value is only is only known on rank
 

00:29:34.159 --> 00:29:36.470 align:start position:0%
value is only is only known on rank
zero.<00:29:34.559><c> Okay.</c><00:29:35.120><c> So</c><00:29:35.279><c> this</c><00:29:35.520><c> is</c><00:29:35.600><c> not</c><00:29:35.840><c> a</c><00:29:36.000><c> sensible</c>

00:29:36.470 --> 00:29:36.480 align:start position:0%
zero. Okay. So this is not a sensible
 

00:29:36.480 --> 00:29:38.710 align:start position:0%
zero. Okay. So this is not a sensible
thing<00:29:36.559><c> to</c><00:29:36.799><c> do.</c><00:29:37.120><c> Okay.</c><00:29:37.919><c> What</c><00:29:38.080><c> you</c><00:29:38.240><c> should</c><00:29:38.399><c> do</c><00:29:38.480><c> is</c>

00:29:38.710 --> 00:29:38.720 align:start position:0%
thing to do. Okay. What you should do is
 

00:29:38.720 --> 00:29:40.389 align:start position:0%
thing to do. Okay. What you should do is
everyone<00:29:39.039><c> needs</c><00:29:39.200><c> to</c><00:29:39.360><c> know</c><00:29:39.520><c> the</c><00:29:39.679><c> result.</c><00:29:40.240><c> So</c>

00:29:40.389 --> 00:29:40.399 align:start position:0%
everyone needs to know the result. So
 

00:29:40.399 --> 00:29:42.310 align:start position:0%
everyone needs to know the result. So
what<00:29:40.640><c> you</c><00:29:40.799><c> see</c><00:29:40.960><c> sometimes</c><00:29:41.440><c> some</c><00:29:41.679><c> people</c><00:29:41.919><c> doing</c>

00:29:42.310 --> 00:29:42.320 align:start position:0%
what you see sometimes some people doing
 

00:29:42.320 --> 00:29:44.710 align:start position:0%
what you see sometimes some people doing
is<00:29:42.559><c> they</c><00:29:42.799><c> broadcast.</c><00:29:43.440><c> You</c><00:29:43.600><c> see</c><00:29:43.760><c> people</c><00:29:44.000><c> do</c><00:29:44.480><c> a</c>

00:29:44.710 --> 00:29:44.720 align:start position:0%
is they broadcast. You see people do a
 

00:29:44.720 --> 00:29:46.789 align:start position:0%
is they broadcast. You see people do a
reduce<00:29:45.120><c> and</c><00:29:45.279><c> then</c><00:29:45.360><c> a</c><00:29:45.600><c> broadcast.</c><00:29:46.399><c> You</c><00:29:46.559><c> should</c>

00:29:46.789 --> 00:29:46.799 align:start position:0%
reduce and then a broadcast. You should
 

00:29:46.799 --> 00:29:49.909 align:start position:0%
reduce and then a broadcast. You should
not<00:29:47.039><c> do</c><00:29:47.200><c> this.</c><00:29:47.600><c> Okay?</c><00:29:48.320><c> You</c><00:29:48.480><c> should</c><00:29:48.640><c> use</c><00:29:48.880><c> NPI</c><00:29:49.679><c> or</c>

00:29:49.909 --> 00:29:49.919 align:start position:0%
not do this. Okay? You should use NPI or
 

00:29:49.919 --> 00:29:52.389 align:start position:0%
not do this. Okay? You should use NPI or
reduce.<00:29:50.720><c> So</c><00:29:50.960><c> sometimes</c><00:29:51.520><c> you</c><00:29:51.760><c> see</c><00:29:51.919><c> people</c>

00:29:52.389 --> 00:29:52.399 align:start position:0%
reduce. So sometimes you see people
 

00:29:52.399 --> 00:29:54.470 align:start position:0%
reduce. So sometimes you see people
they've<00:29:52.720><c> done</c><00:29:52.799><c> a</c><00:29:53.039><c> reduce</c><00:29:53.840><c> then</c><00:29:54.000><c> they</c><00:29:54.240><c> think</c>

00:29:54.470 --> 00:29:54.480 align:start position:0%
they've done a reduce then they think
 

00:29:54.480 --> 00:29:56.950 align:start position:0%
they've done a reduce then they think
well<00:29:54.720><c> I</c><00:29:54.880><c> want</c><00:29:55.120><c> to</c><00:29:55.600><c> I</c><00:29:55.840><c> now</c><00:29:56.080><c> need</c><00:29:56.399><c> want</c><00:29:56.640><c> everyone</c>

00:29:56.950 --> 00:29:56.960 align:start position:0%
well I want to I now need want everyone
 

00:29:56.960 --> 00:30:00.070 align:start position:0%
well I want to I now need want everyone
to<00:29:57.120><c> know</c><00:29:57.360><c> the</c><00:29:57.600><c> result.</c><00:29:58.399><c> Um</c><00:29:58.799><c> so</c><00:29:59.120><c> so</c><00:29:59.200><c> so</c><00:29:59.760><c> for</c><00:29:59.840><c> for</c>

00:30:00.070 --> 00:30:00.080 align:start position:0%
to know the result. Um so so so for for
 

00:30:00.080 --> 00:30:02.389 align:start position:0%
to know the result. Um so so so for for
this<00:30:00.399><c> code</c><00:30:00.640><c> to</c><00:30:00.799><c> stop</c><00:30:01.200><c> correctly,</c><00:30:02.080><c> everyone</c>

00:30:02.389 --> 00:30:02.399 align:start position:0%
this code to stop correctly, everyone
 

00:30:02.399 --> 00:30:04.789 align:start position:0%
this code to stop correctly, everyone
needs<00:30:02.640><c> to</c><00:30:02.799><c> know</c><00:30:02.960><c> the</c><00:30:03.200><c> value</c><00:30:03.360><c> of</c><00:30:03.520><c> the</c><00:30:03.679><c> sum.</c><00:30:04.480><c> So</c>

00:30:04.789 --> 00:30:04.799 align:start position:0%
needs to know the value of the sum. So
 

00:30:04.799 --> 00:30:06.630 align:start position:0%
needs to know the value of the sum. So
so<00:30:05.039><c> they</c><00:30:05.279><c> can</c><00:30:05.360><c> all</c><00:30:05.600><c> so</c><00:30:05.840><c> they</c><00:30:06.000><c> can</c><00:30:06.159><c> all</c><00:30:06.480><c> uh</c>

00:30:06.630 --> 00:30:06.640 align:start position:0%
so they can all so they can all uh
 

00:30:06.640 --> 00:30:09.750 align:start position:0%
so they can all so they can all uh
independently<00:30:07.600><c> uh</c><00:30:08.240><c> uh</c><00:30:08.880><c> terminate</c><00:30:09.360><c> execution</c>

00:30:09.750 --> 00:30:09.760 align:start position:0%
independently uh uh terminate execution
 

00:30:09.760 --> 00:30:11.510 align:start position:0%
independently uh uh terminate execution
of<00:30:09.919><c> the</c><00:30:10.080><c> program.</c><00:30:10.720><c> But</c><00:30:10.880><c> you</c><00:30:11.039><c> often</c><00:30:11.279><c> see</c><00:30:11.360><c> people</c>

00:30:11.510 --> 00:30:11.520 align:start position:0%
of the program. But you often see people
 

00:30:11.520 --> 00:30:12.950 align:start position:0%
of the program. But you often see people
do<00:30:11.760><c> reduce</c><00:30:12.000><c> and</c><00:30:12.159><c> broadcast.</c><00:30:12.559><c> Do</c><00:30:12.640><c> not</c><00:30:12.799><c> use</c>

00:30:12.950 --> 00:30:12.960 align:start position:0%
do reduce and broadcast. Do not use
 

00:30:12.960 --> 00:30:14.789 align:start position:0%
do reduce and broadcast. Do not use
reduce<00:30:13.200><c> plus</c><00:30:13.440><c> broadcast,</c><00:30:13.840><c> use</c><00:30:14.080><c> all</c><00:30:14.240><c> reduce.</c>

00:30:14.789 --> 00:30:14.799 align:start position:0%
reduce plus broadcast, use all reduce.
 

00:30:14.799 --> 00:30:16.470 align:start position:0%
reduce plus broadcast, use all reduce.
This<00:30:15.039><c> is</c><00:30:15.200><c> probably</c><00:30:15.440><c> going</c><00:30:15.520><c> to</c><00:30:15.679><c> be</c><00:30:15.760><c> twice</c><00:30:16.159><c> the</c>

00:30:16.470 --> 00:30:16.480 align:start position:0%
This is probably going to be twice the
 

00:30:16.480 --> 00:30:17.909 align:start position:0%
This is probably going to be twice the
all<00:30:16.720><c> reduce</c><00:30:16.960><c> will</c><00:30:17.120><c> probably</c><00:30:17.360><c> be</c><00:30:17.440><c> twice</c><00:30:17.679><c> as</c>

00:30:17.909 --> 00:30:17.919 align:start position:0%
all reduce will probably be twice as
 

00:30:17.919 --> 00:30:19.909 align:start position:0%
all reduce will probably be twice as
fast<00:30:18.159><c> as</c><00:30:18.399><c> this.</c><00:30:18.799><c> So</c><00:30:19.039><c> reduce</c><00:30:19.360><c> plus</c><00:30:19.600><c> broadcast</c>

00:30:19.909 --> 00:30:19.919 align:start position:0%
fast as this. So reduce plus broadcast
 

00:30:19.919 --> 00:30:21.590 align:start position:0%
fast as this. So reduce plus broadcast
is<00:30:20.159><c> not</c><00:30:20.240><c> a</c><00:30:20.399><c> good</c><00:30:20.559><c> thing</c><00:30:20.720><c> to</c><00:30:20.880><c> do.</c><00:30:21.360><c> You</c><00:30:21.520><c> should</c>

00:30:21.590 --> 00:30:21.600 align:start position:0%
is not a good thing to do. You should
 

00:30:21.600 --> 00:30:23.190 align:start position:0%
is not a good thing to do. You should
use<00:30:21.840><c> all</c><00:30:22.000><c> reduce</c><00:30:22.240><c> and</c><00:30:22.480><c> just</c><00:30:22.640><c> get</c><00:30:22.720><c> the</c><00:30:22.960><c> answer</c>

00:30:23.190 --> 00:30:23.200 align:start position:0%
use all reduce and just get the answer
 

00:30:23.200 --> 00:30:26.950 align:start position:0%
use all reduce and just get the answer
everywhere<00:30:23.600><c> right</c><00:30:23.760><c> from</c><00:30:24.000><c> the</c><00:30:24.159><c> start.</c>

00:30:26.950 --> 00:30:26.960 align:start position:0%
everywhere right from the start.
 

00:30:26.960 --> 00:30:29.350 align:start position:0%
everywhere right from the start.
Uh<00:30:27.279><c> this</c><00:30:27.440><c> is</c><00:30:27.600><c> something</c><00:30:27.919><c> and</c><00:30:28.080><c> this</c><00:30:28.240><c> is</c><00:30:28.399><c> I</c><00:30:28.640><c> mean</c>

00:30:29.350 --> 00:30:29.360 align:start position:0%
Uh this is something and this is I mean
 

00:30:29.360 --> 00:30:31.830 align:start position:0%
Uh this is something and this is I mean
I<00:30:29.600><c> always</c><00:30:29.840><c> say</c><00:30:30.159><c> you</c><00:30:30.320><c> know</c><00:30:30.399><c> when</c><00:30:30.559><c> you</c><00:30:31.360><c> the</c><00:30:31.679><c> most</c>

00:30:31.830 --> 00:30:31.840 align:start position:0%
I always say you know when you the most
 

00:30:31.840 --> 00:30:32.870 align:start position:0%
I always say you know when you the most
important<00:30:32.159><c> thing</c><00:30:32.240><c> when</c><00:30:32.480><c> you're</c><00:30:32.559><c> writing</c><00:30:32.720><c> an</c>

00:30:32.870 --> 00:30:32.880 align:start position:0%
important thing when you're writing an
 

00:30:32.880 --> 00:30:34.630 align:start position:0%
important thing when you're writing an
NPI<00:30:33.279><c> program</c><00:30:33.600><c> is</c><00:30:33.679><c> to</c><00:30:33.840><c> get</c><00:30:33.919><c> the</c><00:30:34.000><c> kept</c><00:30:34.240><c> correct</c>

00:30:34.630 --> 00:30:34.640 align:start position:0%
NPI program is to get the kept correct
 

00:30:34.640 --> 00:30:36.470 align:start position:0%
NPI program is to get the kept correct
result<00:30:35.440><c> and</c><00:30:35.679><c> not</c><00:30:35.840><c> to</c><00:30:36.080><c> worry</c><00:30:36.240><c> about</c>

00:30:36.470 --> 00:30:36.480 align:start position:0%
result and not to worry about
 

00:30:36.480 --> 00:30:39.909 align:start position:0%
result and not to worry about
performance<00:30:37.039><c> too</c><00:30:37.279><c> early</c><00:30:37.520><c> on</c><00:30:38.080><c> but</c><00:30:38.399><c> but</c><00:30:38.720><c> but</c><00:30:39.679><c> uh</c>

00:30:39.909 --> 00:30:39.919 align:start position:0%
performance too early on but but but uh
 

00:30:39.919 --> 00:30:41.430 align:start position:0%
performance too early on but but but uh
you<00:30:40.159><c> should</c><00:30:40.320><c> not</c><00:30:40.559><c> send</c><00:30:40.799><c> lots</c><00:30:41.039><c> of</c><00:30:41.200><c> small</c>

00:30:41.430 --> 00:30:41.440 align:start position:0%
you should not send lots of small
 

00:30:41.440 --> 00:30:44.630 align:start position:0%
you should not send lots of small
messages.<00:30:41.919><c> Okay.</c><00:30:42.320><c> So</c><00:30:42.720><c> so</c><00:30:43.919><c> you</c><00:30:44.159><c> should</c><00:30:44.320><c> not</c><00:30:44.480><c> do</c>

00:30:44.630 --> 00:30:44.640 align:start position:0%
messages. Okay. So so you should not do
 

00:30:44.640 --> 00:30:46.470 align:start position:0%
messages. Okay. So so you should not do
something<00:30:44.880><c> like</c><00:30:45.120><c> this.</c><00:30:45.600><c> Okay.</c><00:30:45.919><c> I</c><00:30:46.159><c> want</c><00:30:46.320><c> to</c>

00:30:46.470 --> 00:30:46.480 align:start position:0%
something like this. Okay. I want to
 

00:30:46.480 --> 00:30:49.430 align:start position:0%
something like this. Okay. I want to
send<00:30:46.720><c> the</c><00:30:47.120><c> in</c><00:30:47.360><c> C</c><00:30:47.760><c> I</c><00:30:48.000><c> want</c><00:30:48.159><c> to</c><00:30:48.320><c> send</c><00:30:48.880><c> uh</c><00:30:49.039><c> the</c>

00:30:49.430 --> 00:30:49.440 align:start position:0%
send the in C I want to send uh the
 

00:30:49.440 --> 00:30:50.950 align:start position:0%
send the in C I want to send uh the
contiguous<00:30:50.000><c> part</c><00:30:50.240><c> of</c><00:30:50.320><c> an</c><00:30:50.480><c> array</c><00:30:50.640><c> in</c><00:30:50.799><c> four</c>

00:30:50.950 --> 00:30:50.960 align:start position:0%
contiguous part of an array in four
 

00:30:50.960 --> 00:30:53.190 align:start position:0%
contiguous part of an array in four
channel<00:30:51.279><c> will</c><00:30:51.360><c> be</c><00:30:51.600><c> it</c><00:30:51.760><c> would</c><00:30:51.919><c> be</c><00:30:52.799><c> the</c><00:30:53.039><c> first</c>

00:30:53.190 --> 00:30:53.200 align:start position:0%
channel will be it would be the first
 

00:30:53.200 --> 00:30:55.190 align:start position:0%
channel will be it would be the first
index<00:30:53.840><c> in</c><00:30:54.080><c> C</c><00:30:54.240><c> the</c><00:30:54.399><c> contiguous</c><00:30:54.799><c> part</c><00:30:54.960><c> of</c><00:30:55.039><c> the</c>

00:30:55.190 --> 00:30:55.200 align:start position:0%
index in C the contiguous part of the
 

00:30:55.200 --> 00:30:57.590 align:start position:0%
index in C the contiguous part of the
second<00:30:55.360><c> index</c><00:30:56.000><c> I</c><00:30:56.240><c> want</c><00:30:56.320><c> to</c><00:30:56.480><c> send</c><00:30:56.640><c> the</c><00:30:56.880><c> N</c><00:30:57.120><c> values</c>

00:30:57.590 --> 00:30:57.600 align:start position:0%
second index I want to send the N values
 

00:30:57.600 --> 00:31:00.710 align:start position:0%
second index I want to send the N values
X<00:30:57.919><c> not</c><00:30:58.159><c> N</c><00:30:58.399><c> which</c><00:30:58.640><c> might</c><00:30:58.799><c> be</c><00:30:59.360><c> a</c><00:30:59.600><c> halo</c><00:31:00.159><c> I'm</c><00:31:00.480><c> doing</c>

00:31:00.710 --> 00:31:00.720 align:start position:0%
X not N which might be a halo I'm doing
 

00:31:00.720 --> 00:31:04.149 align:start position:0%
X not N which might be a halo I'm doing
boundary<00:31:01.120><c> exchange</c><00:31:02.159><c> uh</c><00:31:02.399><c> empty</c><00:31:02.799><c> I</c><00:31:03.039><c> send</c><00:31:03.840><c> this</c>

00:31:04.149 --> 00:31:04.159 align:start position:0%
boundary exchange uh empty I send this
 

00:31:04.159 --> 00:31:06.230 align:start position:0%
boundary exchange uh empty I send this
value<00:31:04.480><c> one</c><00:31:04.799><c> in</c><00:31:05.039><c> to</c><00:31:05.200><c> the</c><00:31:05.360><c> destination</c><00:31:05.919><c> but</c><00:31:06.080><c> I</c>

00:31:06.230 --> 00:31:06.240 align:start position:0%
value one in to the destination but I
 

00:31:06.240 --> 00:31:09.430 align:start position:0%
value one in to the destination but I
loop<00:31:06.399><c> over</c><00:31:06.720><c> J</c><00:31:07.200><c> this</c><00:31:07.440><c> is</c><00:31:07.679><c> very</c><00:31:08.080><c> very</c><00:31:08.159><c> very</c><00:31:08.880><c> slow</c>

00:31:09.430 --> 00:31:09.440 align:start position:0%
loop over J this is very very very slow
 

00:31:09.440 --> 00:31:11.029 align:start position:0%
loop over J this is very very very slow
you're<00:31:09.600><c> sending</c><00:31:09.840><c> a</c><00:31:10.080><c> large</c><00:31:10.399><c> number</c><00:31:10.640><c> of</c><00:31:10.799><c> small</c>

00:31:11.029 --> 00:31:11.039 align:start position:0%
you're sending a large number of small
 

00:31:11.039 --> 00:31:12.630 align:start position:0%
you're sending a large number of small
messages<00:31:11.760><c> you</c><00:31:11.919><c> should</c><00:31:12.080><c> send</c><00:31:12.240><c> a</c><00:31:12.480><c> single</c>

00:31:12.630 --> 00:31:12.640 align:start position:0%
messages you should send a single
 

00:31:12.640 --> 00:31:15.029 align:start position:0%
messages you should send a single
message<00:31:12.880><c> of</c><00:31:13.039><c> size</c><00:31:13.360><c> N</c><00:31:13.679><c> okay</c><00:31:14.000><c> so</c><00:31:14.159><c> this</c><00:31:14.320><c> is</c><00:31:14.480><c> fairly</c>

00:31:15.029 --> 00:31:15.039 align:start position:0%
message of size N okay so this is fairly
 

00:31:15.039 --> 00:31:17.990 align:start position:0%
message of size N okay so this is fairly
basic<00:31:15.520><c> stuff.</c><00:31:16.240><c> We</c><00:31:16.399><c> can</c><00:31:16.559><c> do</c><00:31:16.640><c> a</c><00:31:16.880><c> single</c><00:31:17.120><c> send</c><00:31:17.760><c> of</c>

00:31:17.990 --> 00:31:18.000 align:start position:0%
basic stuff. We can do a single send of
 

00:31:18.000 --> 00:31:21.029 align:start position:0%
basic stuff. We can do a single send of
this<00:31:18.399><c> and</c><00:31:18.640><c> this</c><00:31:18.880><c> will</c><00:31:19.200><c> be</c><00:31:19.760><c> a</c><00:31:20.000><c> lot</c><00:31:20.320><c> lot</c><00:31:20.399><c> lot</c>

00:31:21.029 --> 00:31:21.039 align:start position:0%
this and this will be a lot lot lot
 

00:31:21.039 --> 00:31:24.310 align:start position:0%
this and this will be a lot lot lot
faster<00:31:21.440><c> than</c><00:31:21.600><c> that.</c><00:31:21.919><c> Okay.</c><00:31:23.039><c> uh</c><00:31:23.360><c> MPI</c><00:31:24.000><c> what</c><00:31:24.159><c> we</c>

00:31:24.310 --> 00:31:24.320 align:start position:0%
faster than that. Okay. uh MPI what we
 

00:31:24.320 --> 00:31:26.549 align:start position:0%
faster than that. Okay. uh MPI what we
we<00:31:24.480><c> will</c><00:31:24.640><c> see</c><00:31:24.880><c> after</c><00:31:25.120><c> the</c><00:31:25.360><c> break</c><00:31:25.600><c> if</c><00:31:25.760><c> we</c><00:31:26.399><c> we</c>

00:31:26.549 --> 00:31:26.559 align:start position:0%
we will see after the break if we we
 

00:31:26.559 --> 00:31:29.110 align:start position:0%
we will see after the break if we we
look<00:31:26.640><c> at</c><00:31:26.799><c> performance</c><00:31:27.840><c> that</c><00:31:28.080><c> the</c><00:31:28.320><c> latency</c><00:31:28.960><c> the</c>

00:31:29.110 --> 00:31:29.120 align:start position:0%
look at performance that the latency the
 

00:31:29.120 --> 00:31:31.110 align:start position:0%
look at performance that the latency the
overhead<00:31:29.440><c> of</c><00:31:29.600><c> sending</c><00:31:29.840><c> an</c><00:31:30.000><c> MPI</c><00:31:30.480><c> message</c><00:31:30.799><c> is</c>

00:31:31.110 --> 00:31:31.120 align:start position:0%
overhead of sending an MPI message is
 

00:31:31.120 --> 00:31:34.070 align:start position:0%
overhead of sending an MPI message is
large<00:31:32.159><c> even</c><00:31:32.399><c> on</c><00:31:32.640><c> a</c><00:31:32.880><c> machine</c><00:31:33.120><c> like</c><00:31:33.440><c> Archer</c><00:31:33.840><c> 2</c>

00:31:34.070 --> 00:31:34.080 align:start position:0%
large even on a machine like Archer 2
 

00:31:34.080 --> 00:31:36.630 align:start position:0%
large even on a machine like Archer 2
with<00:31:34.240><c> a</c><00:31:34.320><c> dedicated</c><00:31:34.880><c> network</c><00:31:35.279><c> it</c><00:31:35.440><c> is</c><00:31:35.600><c> in</c><00:31:36.399><c> at</c>

00:31:36.630 --> 00:31:36.640 align:start position:0%
with a dedicated network it is in at
 

00:31:36.640 --> 00:31:38.470 align:start position:0%
with a dedicated network it is in at
best<00:31:36.960><c> in</c><00:31:37.120><c> the</c><00:31:37.360><c> microsconds</c><00:31:38.159><c> a</c><00:31:38.399><c> few</c>

00:31:38.470 --> 00:31:38.480 align:start position:0%
best in the microsconds a few
 

00:31:38.480 --> 00:31:40.950 align:start position:0%
best in the microsconds a few
microsconds<00:31:39.760><c> which</c><00:31:40.080><c> which</c><00:31:40.399><c> is</c><00:31:40.480><c> millionth</c><00:31:40.880><c> of</c>

00:31:40.950 --> 00:31:40.960 align:start position:0%
microsconds which which is millionth of
 

00:31:40.960 --> 00:31:42.389 align:start position:0%
microsconds which which is millionth of
a<00:31:41.039><c> second</c><00:31:41.279><c> which</c><00:31:41.519><c> might</c><00:31:41.679><c> sound</c><00:31:41.919><c> like</c><00:31:42.000><c> a</c><00:31:42.240><c> small</c>

00:31:42.389 --> 00:31:42.399 align:start position:0%
a second which might sound like a small
 

00:31:42.399 --> 00:31:45.110 align:start position:0%
a second which might sound like a small
amount<00:31:42.880><c> remember</c><00:31:43.760><c> modern</c><00:31:44.159><c> CPUs</c><00:31:44.640><c> are</c><00:31:44.799><c> clocking</c>

00:31:45.110 --> 00:31:45.120 align:start position:0%
amount remember modern CPUs are clocking
 

00:31:45.120 --> 00:31:47.029 align:start position:0%
amount remember modern CPUs are clocking
at<00:31:45.279><c> multiple</c><00:31:45.679><c> gigahertz</c><00:31:46.240><c> so</c><00:31:46.399><c> the</c><00:31:46.559><c> clock</c><00:31:46.799><c> cycle</c>

00:31:47.029 --> 00:31:47.039 align:start position:0%
at multiple gigahertz so the clock cycle
 

00:31:47.039 --> 00:31:49.269 align:start position:0%
at multiple gigahertz so the clock cycle
isn't<00:31:47.360><c> is</c><00:31:47.519><c> in</c><00:31:47.600><c> the</c><00:31:47.760><c> nanconds</c>

00:31:49.269 --> 00:31:49.279 align:start position:0%
isn't is in the nanconds
 

00:31:49.279 --> 00:31:51.350 align:start position:0%
isn't is in the nanconds
uh<00:31:49.360><c> and</c><00:31:49.519><c> so</c><00:31:49.679><c> a</c><00:31:49.840><c> millisecond</c>

00:31:51.350 --> 00:31:51.360 align:start position:0%
uh and so a millisecond
 

00:31:51.360 --> 00:31:55.269 align:start position:0%
uh and so a millisecond
a<00:31:51.600><c> microcond</c><00:31:52.240><c> apology</c><00:31:52.640><c> ies</c><00:31:53.120><c> is</c><00:31:53.360><c> is</c><00:31:53.440><c> is</c><00:31:53.679><c> is</c><00:31:54.000><c> a</c><00:31:54.240><c> is</c>

00:31:55.269 --> 00:31:55.279 align:start position:0%
a microcond apology ies is is is is a is
 

00:31:55.279 --> 00:31:58.630 align:start position:0%
a microcond apology ies is is is is a is
thousands<00:31:55.679><c> of</c><00:31:55.840><c> times</c><00:31:56.559><c> um</c><00:31:57.039><c> um</c><00:31:58.000><c> more</c><00:31:58.240><c> expensive</c>

00:31:58.630 --> 00:31:58.640 align:start position:0%
thousands of times um um more expensive
 

00:31:58.640 --> 00:32:00.070 align:start position:0%
thousands of times um um more expensive
than<00:31:58.880><c> doing</c><00:31:59.200><c> maybe</c><00:31:59.360><c> a</c><00:31:59.519><c> floatingoint</c>

00:32:00.070 --> 00:32:00.080 align:start position:0%
than doing maybe a floatingoint
 

00:32:00.080 --> 00:32:02.230 align:start position:0%
than doing maybe a floatingoint
calculation.<00:32:01.039><c> And</c><00:32:01.200><c> so</c><00:32:01.440><c> you</c><00:32:01.600><c> know</c><00:32:01.760><c> if</c><00:32:01.919><c> there's</c>

00:32:02.230 --> 00:32:02.240 align:start position:0%
calculation. And so you know if there's
 

00:32:02.240 --> 00:32:05.029 align:start position:0%
calculation. And so you know if there's
one<00:32:02.480><c> optimization</c><00:32:03.279><c> technique</c><00:32:03.679><c> for</c><00:32:03.919><c> NPI,</c><00:32:04.720><c> it's</c>

00:32:05.029 --> 00:32:05.039 align:start position:0%
one optimization technique for NPI, it's
 

00:32:05.039 --> 00:32:07.110 align:start position:0%
one optimization technique for NPI, it's
do<00:32:05.200><c> a</c><00:32:05.440><c> small</c><00:32:05.679><c> number</c><00:32:05.840><c> of</c><00:32:06.080><c> large</c><00:32:06.399><c> messages,</c><00:32:06.960><c> not</c>

00:32:07.110 --> 00:32:07.120 align:start position:0%
do a small number of large messages, not
 

00:32:07.120 --> 00:32:08.789 align:start position:0%
do a small number of large messages, not
a<00:32:07.279><c> large</c><00:32:07.519><c> number</c><00:32:07.679><c> of</c><00:32:07.840><c> small</c><00:32:08.080><c> messages.</c><00:32:08.640><c> Now</c>

00:32:08.789 --> 00:32:08.799 align:start position:0%
a large number of small messages. Now
 

00:32:08.799 --> 00:32:10.789 align:start position:0%
a large number of small messages. Now
this<00:32:08.960><c> is</c><00:32:09.120><c> fairly</c><00:32:09.440><c> easy</c><00:32:09.600><c> to</c><00:32:09.840><c> do</c><00:32:10.320><c> because</c><00:32:10.559><c> the</c>

00:32:10.789 --> 00:32:10.799 align:start position:0%
this is fairly easy to do because the
 

00:32:10.799 --> 00:32:13.430 align:start position:0%
this is fairly easy to do because the
data<00:32:11.039><c> is</c><00:32:11.279><c> contiguous.</c>

00:32:13.430 --> 00:32:13.440 align:start position:0%
data is contiguous.
 

00:32:13.440 --> 00:32:15.590 align:start position:0%
data is contiguous.
But<00:32:13.679><c> what</c><00:32:14.000><c> happens</c><00:32:14.240><c> if</c><00:32:14.480><c> you</c><00:32:14.640><c> want</c><00:32:14.799><c> to</c><00:32:14.960><c> send</c><00:32:15.279><c> in</c>

00:32:15.590 --> 00:32:15.600 align:start position:0%
But what happens if you want to send in
 

00:32:15.600 --> 00:32:19.430 align:start position:0%
But what happens if you want to send in
C<00:32:16.240><c> the</c><00:32:16.480><c> first</c><00:32:17.200><c> uh</c><00:32:17.919><c> uh</c><00:32:18.080><c> dimension</c><00:32:18.559><c> or</c><00:32:18.720><c> in</c><00:32:19.039><c> four</c>

00:32:19.430 --> 00:32:19.440 align:start position:0%
C the first uh uh dimension or in four
 

00:32:19.440 --> 00:32:21.350 align:start position:0%
C the first uh uh dimension or in four
the<00:32:19.679><c> second</c><00:32:19.919><c> one</c><00:32:20.320><c> where</c><00:32:20.559><c> the</c><00:32:20.799><c> data</c><00:32:21.039><c> isn't</c>

00:32:21.350 --> 00:32:21.360 align:start position:0%
the second one where the data isn't
 

00:32:21.360 --> 00:32:23.909 align:start position:0%
the second one where the data isn't
contiguous<00:32:22.480><c> uh</c><00:32:22.720><c> well</c><00:32:22.960><c> you</c><00:32:23.200><c> use</c><00:32:23.360><c> a</c><00:32:23.519><c> derived</c>

00:32:23.909 --> 00:32:23.919 align:start position:0%
contiguous uh well you use a derived
 

00:32:23.919 --> 00:32:27.430 align:start position:0%
contiguous uh well you use a derived
type<00:32:24.240><c> or</c><00:32:24.480><c> a</c><00:32:24.640><c> vector.</c><00:32:25.519><c> So</c><00:32:26.000><c> uh</c><00:32:26.240><c> you</c><00:32:26.480><c> do</c><00:32:26.720><c> not</c><00:32:27.120><c> loop</c>

00:32:27.430 --> 00:32:27.440 align:start position:0%
type or a vector. So uh you do not loop
 

00:32:27.440 --> 00:32:30.070 align:start position:0%
type or a vector. So uh you do not loop
over<00:32:27.919><c> on</c><00:32:28.159><c> the</c><00:32:28.559><c> so</c><00:32:28.720><c> you</c><00:32:29.039><c> cannot</c><00:32:29.600><c> because</c><00:32:29.919><c> the</c>

00:32:30.070 --> 00:32:30.080 align:start position:0%
over on the so you cannot because the
 

00:32:30.080 --> 00:32:31.909 align:start position:0%
over on the so you cannot because the
data<00:32:30.320><c> is</c><00:32:30.480><c> not</c><00:32:30.640><c> contiguous</c><00:32:31.200><c> here</c><00:32:31.440><c> if</c><00:32:31.519><c> I</c><00:32:31.679><c> want</c><00:32:31.760><c> to</c>

00:32:31.909 --> 00:32:31.919 align:start position:0%
data is not contiguous here if I want to
 

00:32:31.919 --> 00:32:36.230 align:start position:0%
data is not contiguous here if I want to
send<00:32:32.240><c> x00</c><00:32:33.200><c> x10</c><00:32:34.080><c> up</c><00:32:34.320><c> to</c><00:32:34.399><c> x</c><00:32:34.640><c> n</c><00:32:34.880><c> minus</c><00:32:35.200><c> one</c><00:32:35.600><c> 0</c>

00:32:36.230 --> 00:32:36.240 align:start position:0%
send x00 x10 up to x n minus one 0
 

00:32:36.240 --> 00:32:38.149 align:start position:0%
send x00 x10 up to x n minus one 0
that's<00:32:36.640><c> there's</c><00:32:36.880><c> a</c><00:32:37.200><c> that's</c><00:32:37.440><c> a</c><00:32:37.600><c> strided</c>

00:32:38.149 --> 00:32:38.159 align:start position:0%
that's there's a that's a strided
 

00:32:38.159 --> 00:32:39.509 align:start position:0%
that's there's a that's a strided
pattern<00:32:38.480><c> because</c><00:32:38.640><c> I'm</c><00:32:38.880><c> moving</c><00:32:39.120><c> over</c><00:32:39.360><c> this</c>

00:32:39.509 --> 00:32:39.519 align:start position:0%
pattern because I'm moving over this
 

00:32:39.519 --> 00:32:42.549 align:start position:0%
pattern because I'm moving over this
index<00:32:39.919><c> not</c><00:32:40.080><c> this</c><00:32:40.240><c> one.</c><00:32:40.960><c> Um</c><00:32:41.600><c> but</c><00:32:42.000><c> uh</c><00:32:42.080><c> the</c><00:32:42.240><c> way</c><00:32:42.320><c> to</c>

00:32:42.549 --> 00:32:42.559 align:start position:0%
index not this one. Um but uh the way to
 

00:32:42.559 --> 00:32:44.870 align:start position:0%
index not this one. Um but uh the way to
do<00:32:42.640><c> that</c><00:32:42.880><c> is</c><00:32:43.120><c> to</c><00:32:43.279><c> use</c><00:32:43.440><c> a</c><00:32:43.600><c> vector.</c><00:32:44.159><c> Okay.</c><00:32:44.640><c> Now</c>

00:32:44.870 --> 00:32:44.880 align:start position:0%
do that is to use a vector. Okay. Now
 

00:32:44.880 --> 00:32:47.990 align:start position:0%
do that is to use a vector. Okay. Now
you<00:32:45.120><c> could</c><00:32:46.240><c> uh</c><00:32:46.320><c> an</c><00:32:46.799><c> a</c><00:32:47.039><c> vector</c><00:32:47.279><c> is</c><00:32:47.440><c> is</c><00:32:47.519><c> is</c><00:32:47.840><c> a</c>

00:32:47.990 --> 00:32:48.000 align:start position:0%
you could uh an a vector is is is a
 

00:32:48.000 --> 00:32:50.070 align:start position:0%
you could uh an a vector is is is a
strided<00:32:48.480><c> type</c><00:32:48.799><c> which</c><00:32:49.039><c> which</c><00:32:49.440><c> you</c><00:32:49.919><c> have</c><00:32:50.000><c> to</c>

00:32:50.070 --> 00:32:50.080 align:start position:0%
strided type which which you have to
 

00:32:50.080 --> 00:32:51.350 align:start position:0%
strided type which which you have to
define<00:32:50.399><c> it</c><00:32:50.559><c> appropriately.</c><00:32:50.960><c> But</c><00:32:51.120><c> having</c><00:32:51.279><c> done</c>

00:32:51.350 --> 00:32:51.360 align:start position:0%
define it appropriately. But having done
 

00:32:51.360 --> 00:32:53.110 align:start position:0%
define it appropriately. But having done
that<00:32:51.600><c> you</c><00:32:51.760><c> can</c><00:32:51.840><c> send</c><00:32:52.080><c> one</c><00:32:52.240><c> vector.</c><00:32:52.720><c> Now</c><00:32:52.960><c> you</c>

00:32:53.110 --> 00:32:53.120 align:start position:0%
that you can send one vector. Now you
 

00:32:53.120 --> 00:32:55.269 align:start position:0%
that you can send one vector. Now you
could<00:32:53.279><c> do</c><00:32:53.519><c> copy</c><00:32:53.919><c> in</c><00:32:54.159><c> to</c><00:32:54.320><c> a</c><00:32:54.559><c> temporary</c><00:32:54.880><c> buffer</c>

00:32:55.269 --> 00:32:55.279 align:start position:0%
could do copy in to a temporary buffer
 

00:32:55.279 --> 00:32:58.310 align:start position:0%
could do copy in to a temporary buffer
send<00:32:55.440><c> and</c><00:32:55.679><c> copy</c><00:32:56.000><c> out</c><00:32:56.240><c> again.</c><00:32:57.679><c> Performance</c><00:32:58.159><c> is</c>

00:32:58.310 --> 00:32:58.320 align:start position:0%
send and copy out again. Performance is
 

00:32:58.320 --> 00:32:59.830 align:start position:0%
send and copy out again. Performance is
probably<00:32:58.559><c> not</c><00:32:58.640><c> that</c><00:32:58.880><c> bad</c><00:32:59.039><c> but</c><00:32:59.200><c> it</c><00:32:59.360><c> is</c><00:32:59.600><c> ugly.</c>

00:32:59.830 --> 00:32:59.840 align:start position:0%
probably not that bad but it is ugly.
 

00:32:59.840 --> 00:33:02.149 align:start position:0%
probably not that bad but it is ugly.
And<00:33:00.080><c> so</c><00:33:00.399><c> derived</c><00:33:00.880><c> types</c><00:33:01.200><c> such</c><00:33:01.360><c> as</c><00:33:01.519><c> vectors</c><00:33:02.000><c> are</c>

00:33:02.149 --> 00:33:02.159 align:start position:0%
And so derived types such as vectors are
 

00:33:02.159 --> 00:33:04.630 align:start position:0%
And so derived types such as vectors are
very<00:33:02.320><c> very</c><00:33:02.640><c> useful</c><00:33:02.960><c> for</c><00:33:03.200><c> sending</c><00:33:04.159><c> um</c><00:33:04.399><c> for</c>

00:33:04.630 --> 00:33:04.640 align:start position:0%
very very useful for sending um for
 

00:33:04.640 --> 00:33:06.789 align:start position:0%
very very useful for sending um for
ensuring<00:33:05.519><c> you</c><00:33:05.760><c> send</c><00:33:06.000><c> a</c><00:33:06.159><c> small</c><00:33:06.399><c> number</c><00:33:06.640><c> of</c>

00:33:06.789 --> 00:33:06.799 align:start position:0%
ensuring you send a small number of
 

00:33:06.799 --> 00:33:08.789 align:start position:0%
ensuring you send a small number of
large<00:33:07.120><c> messages</c><00:33:07.760><c> but</c><00:33:08.000><c> doing</c><00:33:08.240><c> it</c><00:33:08.320><c> in</c><00:33:08.399><c> a</c><00:33:08.559><c> neat</c>

00:33:08.789 --> 00:33:08.799 align:start position:0%
large messages but doing it in a neat
 

00:33:08.799 --> 00:33:11.909 align:start position:0%
large messages but doing it in a neat
way<00:33:08.960><c> without</c><00:33:09.279><c> explicit</c><00:33:09.840><c> copying.</c>

00:33:11.909 --> 00:33:11.919 align:start position:0%
way without explicit copying.
 

00:33:11.919 --> 00:33:15.029 align:start position:0%
way without explicit copying.
Okay.

00:33:15.029 --> 00:33:15.039 align:start position:0%
 
 

00:33:15.039 --> 00:33:18.070 align:start position:0%
 
Uh<00:33:15.360><c> this</c><00:33:15.600><c> is</c><00:33:15.760><c> just</c><00:33:16.480><c> um</c><00:33:17.440><c> when</c><00:33:17.679><c> people</c><00:33:17.840><c> are</c>

00:33:18.070 --> 00:33:18.080 align:start position:0%
Uh this is just um when people are
 

00:33:18.080 --> 00:33:20.149 align:start position:0%
Uh this is just um when people are
learning<00:33:18.399><c> NPI</c><00:33:18.960><c> you</c><00:33:19.120><c> often</c><00:33:19.360><c> see</c><00:33:19.519><c> them</c><00:33:19.840><c> I</c><00:33:20.080><c> have</c>

00:33:20.149 --> 00:33:20.159 align:start position:0%
learning NPI you often see them I have
 

00:33:20.159 --> 00:33:23.190 align:start position:0%
learning NPI you often see them I have
an<00:33:20.320><c> example</c><00:33:20.799><c> where</c><00:33:21.840><c> um</c><00:33:22.320><c> you</c><00:33:22.559><c> have</c><00:33:22.720><c> to</c><00:33:22.799><c> compute</c>

00:33:23.190 --> 00:33:23.200 align:start position:0%
an example where um you have to compute
 

00:33:23.200 --> 00:33:26.549 align:start position:0%
an example where um you have to compute
pi<00:33:23.519><c> in</c><00:33:23.760><c> parallel</c><00:33:24.640><c> and</c><00:33:24.960><c> people</c><00:33:25.360><c> write</c><00:33:26.080><c> um</c><00:33:26.399><c> so</c>

00:33:26.549 --> 00:33:26.559 align:start position:0%
pi in parallel and people write um so
 

00:33:26.559 --> 00:33:29.110 align:start position:0%
pi in parallel and people write um so
you<00:33:26.799><c> have</c><00:33:26.880><c> a</c><00:33:27.039><c> loop</c><00:33:27.279><c> from</c><00:33:27.519><c> one</c><00:33:27.679><c> to</c><00:33:27.919><c> n</c><00:33:28.720><c> and</c><00:33:28.960><c> you</c>

00:33:29.110 --> 00:33:29.120 align:start position:0%
you have a loop from one to n and you
 

00:33:29.120 --> 00:33:30.950 align:start position:0%
you have a loop from one to n and you
want<00:33:29.279><c> to</c><00:33:29.360><c> split</c><00:33:29.600><c> it</c><00:33:29.760><c> up</c><00:33:29.919><c> across</c><00:33:30.240><c> the</c><00:33:30.480><c> processes</c>

00:33:30.950 --> 00:33:30.960 align:start position:0%
want to split it up across the processes
 

00:33:30.960 --> 00:33:32.630 align:start position:0%
want to split it up across the processes
and<00:33:31.279><c> people</c><00:33:31.519><c> in</c><00:33:31.840><c> when</c><00:33:32.000><c> they're</c><00:33:32.159><c> writing</c><00:33:32.399><c> their</c>

00:33:32.630 --> 00:33:32.640 align:start position:0%
and people in when they're writing their
 

00:33:32.640 --> 00:33:35.509 align:start position:0%
and people in when they're writing their
very<00:33:32.799><c> early</c><00:33:33.120><c> codes</c><00:33:33.519><c> often</c><00:33:34.480><c> write</c><00:33:35.120><c> they</c><00:33:35.360><c> write</c>

00:33:35.509 --> 00:33:35.519 align:start position:0%
very early codes often write they write
 

00:33:35.519 --> 00:33:37.830 align:start position:0%
very early codes often write they write
a<00:33:35.840><c> code</c><00:33:36.080><c> which</c><00:33:36.240><c> is</c><00:33:36.480><c> specific</c><00:33:37.039><c> to</c><00:33:37.200><c> here</c><00:33:37.600><c> four</c>

00:33:37.830 --> 00:33:37.840 align:start position:0%
a code which is specific to here four
 

00:33:37.840 --> 00:33:39.590 align:start position:0%
a code which is specific to here four
processes<00:33:38.559><c> they</c><00:33:38.799><c> assume</c><00:33:39.120><c> they're</c><00:33:39.279><c> running</c><00:33:39.440><c> on</c>

00:33:39.590 --> 00:33:39.600 align:start position:0%
processes they assume they're running on
 

00:33:39.600 --> 00:33:42.470 align:start position:0%
processes they assume they're running on
four<00:33:39.840><c> processes</c><00:33:40.399><c> they</c><00:33:40.720><c> say</c><00:33:41.200><c> you</c><00:33:41.279><c> know</c><00:33:42.000><c> if</c><00:33:42.240><c> rank</c>

00:33:42.470 --> 00:33:42.480 align:start position:0%
four processes they say you know if rank
 

00:33:42.480 --> 00:33:44.310 align:start position:0%
four processes they say you know if rank
is<00:33:42.640><c> zero</c><00:33:42.880><c> I</c><00:33:43.039><c> loop</c><00:33:43.200><c> from</c><00:33:43.360><c> one</c><00:33:43.519><c> to</c><00:33:43.679><c> n</c><00:33:43.840><c> over</c><00:33:44.080><c> four</c>

00:33:44.310 --> 00:33:44.320 align:start position:0%
is zero I loop from one to n over four
 

00:33:44.320 --> 00:33:45.830 align:start position:0%
is zero I loop from one to n over four
if<00:33:44.480><c> rank</c><00:33:44.720><c> is</c><00:33:44.880><c> while</c><00:33:44.960><c> I</c><00:33:45.120><c> loop</c><00:33:45.200><c> from</c><00:33:45.360><c> n</c><00:33:45.519><c> over</c><00:33:45.679><c> 4</c>

00:33:45.830 --> 00:33:45.840 align:start position:0%
if rank is while I loop from n over 4
 

00:33:45.840 --> 00:33:48.549 align:start position:0%
if rank is while I loop from n over 4
plus<00:33:46.080><c> one</c><00:33:46.240><c> to</c><00:33:46.320><c> n</c><00:33:46.480><c> /</c><00:33:46.799><c> two</c><00:33:47.039><c> and</c><00:33:47.279><c> they</c><00:33:47.519><c> have</c><00:33:47.679><c> four</c>

00:33:48.549 --> 00:33:48.559 align:start position:0%
plus one to n / two and they have four
 

00:33:48.559 --> 00:33:50.070 align:start position:0%
plus one to n / two and they have four
code<00:33:48.880><c> branches.</c><00:33:49.279><c> That's</c><00:33:49.519><c> clearly</c><00:33:49.760><c> a</c><00:33:49.919><c> bad</c>

00:33:50.070 --> 00:33:50.080 align:start position:0%
code branches. That's clearly a bad
 

00:33:50.080 --> 00:33:52.389 align:start position:0%
code branches. That's clearly a bad
thing<00:33:50.159><c> to</c><00:33:50.320><c> do.</c><00:33:50.480><c> It's</c><00:33:50.640><c> not</c><00:33:50.799><c> scalable.</c><00:33:51.919><c> However,</c>

00:33:52.389 --> 00:33:52.399 align:start position:0%
thing to do. It's not scalable. However,
 

00:33:52.399 --> 00:33:53.990 align:start position:0%
thing to do. It's not scalable. However,
so<00:33:52.559><c> you</c><00:33:52.720><c> shouldn't</c><00:33:52.960><c> write</c><00:33:53.200><c> code</c><00:33:53.440><c> which</c><00:33:53.679><c> only</c>

00:33:53.990 --> 00:33:54.000 align:start position:0%
so you shouldn't write code which only
 

00:33:54.000 --> 00:33:56.710 align:start position:0%
so you shouldn't write code which only
runs<00:33:54.240><c> on</c><00:33:54.399><c> a</c><00:33:54.559><c> particular</c><00:33:54.960><c> process</c><00:33:55.440><c> count.</c>

00:33:56.710 --> 00:33:56.720 align:start position:0%
runs on a particular process count.
 

00:33:56.720 --> 00:34:00.149 align:start position:0%
runs on a particular process count.
However,<00:33:58.000><c> um</c><00:33:58.720><c> it's</c><00:33:59.039><c> often</c><00:33:59.440><c> easiest</c><00:33:59.760><c> to</c><00:33:59.919><c> make</c>

00:34:00.149 --> 00:34:00.159 align:start position:0%
However, um it's often easiest to make
 

00:34:00.159 --> 00:34:02.230 align:start position:0%
However, um it's often easiest to make
peer<00:34:00.480><c> compile</c><00:34:00.880><c> time</c><00:34:01.200><c> constant.</c><00:34:01.679><c> It</c><00:34:01.840><c> may</c><00:34:02.080><c> not</c>

00:34:02.230 --> 00:34:02.240 align:start position:0%
peer compile time constant. It may not
 

00:34:02.240 --> 00:34:04.789 align:start position:0%
peer compile time constant. It may not
be<00:34:02.399><c> the</c><00:34:02.640><c> most</c><00:34:02.799><c> elegant</c><00:34:03.200><c> thing</c><00:34:03.360><c> to</c><00:34:03.600><c> do</c><00:34:04.640><c> uh</c>

00:34:04.789 --> 00:34:04.799 align:start position:0%
be the most elegant thing to do uh
 

00:34:04.799 --> 00:34:07.110 align:start position:0%
be the most elegant thing to do uh
because<00:34:05.200><c> you</c><00:34:05.519><c> have</c><00:34:05.760><c> to</c><00:34:06.000><c> recompile</c><00:34:06.799><c> your</c>

00:34:07.110 --> 00:34:07.120 align:start position:0%
because you have to recompile your
 

00:34:07.120 --> 00:34:08.550 align:start position:0%
because you have to recompile your
program<00:34:07.519><c> when</c><00:34:07.679><c> you</c><00:34:07.840><c> change</c><00:34:08.079><c> the</c><00:34:08.240><c> number</c><00:34:08.399><c> of</c>

00:34:08.550 --> 00:34:08.560 align:start position:0%
program when you change the number of
 

00:34:08.560 --> 00:34:12.710 align:start position:0%
program when you change the number of
processes.<00:34:09.760><c> However,</c><00:34:11.040><c> it</c><00:34:11.280><c> c</c><00:34:11.760><c> um</c><00:34:12.159><c> compilation</c>

00:34:12.710 --> 00:34:12.720 align:start position:0%
processes. However, it c um compilation
 

00:34:12.720 --> 00:34:15.349 align:start position:0%
processes. However, it c um compilation
is<00:34:12.879><c> quite</c><00:34:13.119><c> fast</c><00:34:13.359><c> these</c><00:34:13.760><c> days</c><00:34:14.320><c> and</c><00:34:14.639><c> it</c><00:34:14.879><c> can</c><00:34:15.119><c> make</c>

00:34:15.349 --> 00:34:15.359 align:start position:0%
is quite fast these days and it can make
 

00:34:15.359 --> 00:34:17.669 align:start position:0%
is quite fast these days and it can make
things<00:34:15.599><c> much</c><00:34:15.919><c> easier.</c><00:34:16.480><c> Um</c><00:34:16.800><c> it</c><00:34:17.119><c> can</c><00:34:17.359><c> make</c>

00:34:17.669 --> 00:34:17.679 align:start position:0%
things much easier. Um it can make
 

00:34:17.679 --> 00:34:19.990 align:start position:0%
things much easier. Um it can make
defining<00:34:18.159><c> arrays</c><00:34:18.639><c> and</c><00:34:18.800><c> such</c><00:34:19.040><c> like</c><00:34:19.280><c> much</c><00:34:19.599><c> nicer</c>

00:34:19.990 --> 00:34:20.000 align:start position:0%
defining arrays and such like much nicer
 

00:34:20.000 --> 00:34:24.470 align:start position:0%
defining arrays and such like much nicer
if<00:34:20.320><c> p</c><00:34:20.560><c> is</c><00:34:20.720><c> a</c><00:34:20.879><c> compile</c><00:34:21.280><c> time</c><00:34:21.599><c> constant.</c><00:34:22.639><c> Um</c><00:34:23.280><c> so</c><00:34:24.240><c> I</c>

00:34:24.470 --> 00:34:24.480 align:start position:0%
if p is a compile time constant. Um so I
 

00:34:24.480 --> 00:34:26.950 align:start position:0%
if p is a compile time constant. Um so I
mean<00:34:24.560><c> it's</c><00:34:24.800><c> a</c><00:34:24.960><c> m</c><00:34:25.280><c> ideally</c><00:34:26.399><c> a</c><00:34:26.639><c> single</c>

00:34:26.950 --> 00:34:26.960 align:start position:0%
mean it's a m ideally a single
 

00:34:26.960 --> 00:34:29.349 align:start position:0%
mean it's a m ideally a single
executable<00:34:28.159><c> will</c><00:34:28.480><c> run</c><00:34:28.639><c> on</c><00:34:28.800><c> any</c><00:34:29.040><c> number</c><00:34:29.200><c> of</c>

00:34:29.349 --> 00:34:29.359 align:start position:0%
executable will run on any number of
 

00:34:29.359 --> 00:34:31.430 align:start position:0%
executable will run on any number of
processes<00:34:29.839><c> without</c><00:34:30.159><c> recompilation.</c>

00:34:31.430 --> 00:34:31.440 align:start position:0%
processes without recompilation.
 

00:34:31.440 --> 00:34:33.669 align:start position:0%
processes without recompilation.
However,<00:34:32.879><c> you</c><00:34:32.960><c> know,</c><00:34:33.040><c> if</c><00:34:33.200><c> you're</c><00:34:33.359><c> developing</c>

00:34:33.669 --> 00:34:33.679 align:start position:0%
However, you know, if you're developing
 

00:34:33.679 --> 00:34:37.829 align:start position:0%
However, you know, if you're developing
your<00:34:33.919><c> own</c><00:34:34.000><c> code</c><00:34:34.240><c> and</c><00:34:34.480><c> your</c><00:34:35.200><c> um</c><00:34:36.320><c> your</c><00:34:36.879><c> um</c><00:34:37.599><c> the</c>

00:34:37.829 --> 00:34:37.839 align:start position:0%
your own code and your um your um the
 

00:34:37.839 --> 00:34:39.349 align:start position:0%
your own code and your um your um the
time<00:34:38.079><c> you</c><00:34:38.240><c> can</c><00:34:38.399><c> spend</c><00:34:38.639><c> in</c><00:34:38.879><c> developing</c><00:34:39.200><c> the</c>

00:34:39.349 --> 00:34:39.359 align:start position:0%
time you can spend in developing the
 

00:34:39.359 --> 00:34:41.909 align:start position:0%
time you can spend in developing the
code<00:34:39.520><c> is</c><00:34:39.679><c> limited,</c><00:34:40.560><c> having</c><00:34:40.960><c> p</c><00:34:41.359><c> compile</c><00:34:41.679><c> time</c>

00:34:41.909 --> 00:34:41.919 align:start position:0%
code is limited, having p compile time
 

00:34:41.919 --> 00:34:43.190 align:start position:0%
code is limited, having p compile time
number<00:34:42.079><c> of</c><00:34:42.240><c> processes</c><00:34:42.639><c> that</c><00:34:42.720><c> compile</c><00:34:43.040><c> time</c>

00:34:43.190 --> 00:34:43.200 align:start position:0%
number of processes that compile time
 

00:34:43.200 --> 00:34:45.829 align:start position:0%
number of processes that compile time
comp<00:34:43.520><c> is</c><00:34:43.760><c> not</c><00:34:44.240><c> necessarily</c><00:34:44.720><c> a</c><00:34:44.879><c> bad</c><00:34:45.119><c> thing.</c>

00:34:45.829 --> 00:34:45.839 align:start position:0%
comp is not necessarily a bad thing.
 

00:34:45.839 --> 00:34:47.349 align:start position:0%
comp is not necessarily a bad thing.
However,<00:34:46.240><c> you</c><00:34:46.399><c> have</c><00:34:46.560><c> to</c><00:34:46.639><c> check</c><00:34:46.800><c> at</c><00:34:47.040><c> runtime</c>

00:34:47.349 --> 00:34:47.359 align:start position:0%
However, you have to check at runtime
 

00:34:47.359 --> 00:34:48.710 align:start position:0%
However, you have to check at runtime
that<00:34:47.599><c> it's</c><00:34:47.760><c> compile,</c><00:34:48.079><c> it's</c><00:34:48.320><c> running</c><00:34:48.480><c> on</c><00:34:48.639><c> the</c>

00:34:48.710 --> 00:34:48.720 align:start position:0%
that it's compile, it's running on the
 

00:34:48.720 --> 00:34:49.909 align:start position:0%
that it's compile, it's running on the
right<00:34:48.879><c> number</c><00:34:49.040><c> of</c><00:34:49.119><c> processes.</c><00:34:49.520><c> So,</c><00:34:49.599><c> if</c><00:34:49.760><c> you've</c>

00:34:49.909 --> 00:34:49.919 align:start position:0%
right number of processes. So, if you've
 

00:34:49.919 --> 00:34:51.909 align:start position:0%
right number of processes. So, if you've
compiled<00:34:50.240><c> it</c><00:34:50.399><c> for</c><00:34:50.560><c> 20</c><00:34:50.879><c> processes</c><00:34:51.440><c> and</c><00:34:51.599><c> you</c><00:34:51.760><c> run</c>

00:34:51.909 --> 00:34:51.919 align:start position:0%
compiled it for 20 processes and you run
 

00:34:51.919 --> 00:34:53.270 align:start position:0%
compiled it for 20 processes and you run
it<00:34:52.000><c> on</c><00:34:52.159><c> 10,</c><00:34:52.320><c> you</c><00:34:52.399><c> have</c><00:34:52.480><c> to</c><00:34:52.560><c> say</c><00:34:52.720><c> look,</c><00:34:52.960><c> I</c><00:34:53.119><c> can't</c>

00:34:53.270 --> 00:34:53.280 align:start position:0%
it on 10, you have to say look, I can't
 

00:34:53.280 --> 00:34:55.990 align:start position:0%
it on 10, you have to say look, I can't
run<00:34:53.520><c> you've</c><00:34:53.760><c> compiled.</c><00:34:54.320><c> But</c><00:34:54.560><c> you</c><00:34:54.720><c> know</c><00:34:55.440><c> it's</c>

00:34:55.990 --> 00:34:56.000 align:start position:0%
run you've compiled. But you know it's
 

00:34:56.000 --> 00:34:57.910 align:start position:0%
run you've compiled. But you know it's
if<00:34:56.240><c> it's</c><00:34:56.560><c> not</c><00:34:56.720><c> necessarily</c><00:34:57.280><c> a</c><00:34:57.520><c> terrible</c><00:34:57.760><c> thing</c>

00:34:57.910 --> 00:34:57.920 align:start position:0%
if it's not necessarily a terrible thing
 

00:34:57.920 --> 00:35:00.069 align:start position:0%
if it's not necessarily a terrible thing
to<00:34:58.079><c> have</c><00:34:58.320><c> P</c><00:34:58.560><c> a</c><00:34:58.720><c> compile</c><00:34:59.040><c> time</c><00:34:59.280><c> constant.</c><00:34:59.839><c> It</c>

00:35:00.069 --> 00:35:00.079 align:start position:0%
to have P a compile time constant. It
 

00:35:00.079 --> 00:35:02.310 align:start position:0%
to have P a compile time constant. It
can<00:35:00.320><c> make</c><00:35:00.960><c> uh</c><00:35:01.119><c> especially</c><00:35:01.440><c> in</c><00:35:01.599><c> languages</c><00:35:02.079><c> like</c>

00:35:02.310 --> 00:35:02.320 align:start position:0%
can make uh especially in languages like
 

00:35:02.320 --> 00:35:04.390 align:start position:0%
can make uh especially in languages like
C<00:35:02.880><c> where</c><00:35:03.119><c> array</c><00:35:03.440><c> allocation</c><00:35:03.920><c> is</c><00:35:04.160><c> rather</c>

00:35:04.390 --> 00:35:04.400 align:start position:0%
C where array allocation is rather
 

00:35:04.400 --> 00:35:10.470 align:start position:0%
C where array allocation is rather
hairy.<00:35:05.200><c> Um</c><00:35:06.240><c> um</c><00:35:06.800><c> it</c><00:35:07.119><c> can</c><00:35:07.280><c> make</c><00:35:07.520><c> things</c><00:35:07.760><c> easier.</c>

00:35:10.470 --> 00:35:10.480 align:start position:0%
hairy. Um um it can make things easier.
 

00:35:10.480 --> 00:35:12.950 align:start position:0%
hairy. Um um it can make things easier.
Um<00:35:11.040><c> so</c><00:35:11.280><c> this</c><00:35:11.520><c> is</c><00:35:11.599><c> a</c><00:35:12.160><c> um</c><00:35:12.320><c> this</c><00:35:12.560><c> is</c><00:35:12.720><c> an</c>

00:35:12.950 --> 00:35:12.960 align:start position:0%
Um so this is a um this is an
 

00:35:12.960 --> 00:35:14.950 align:start position:0%
Um so this is a um this is an
interesting<00:35:13.359><c> one.</c><00:35:13.599><c> I</c><00:35:14.000><c> so</c><00:35:14.240><c> incorrect</c><00:35:14.640><c> use</c><00:35:14.800><c> of</c>

00:35:14.950 --> 00:35:14.960 align:start position:0%
interesting one. I so incorrect use of
 

00:35:14.960 --> 00:35:16.630 align:start position:0%
interesting one. I so incorrect use of
nonblock.<00:35:15.440><c> You</c><00:35:15.599><c> do</c><00:35:15.760><c> see</c><00:35:15.839><c> this</c><00:35:16.000><c> all</c><00:35:16.160><c> the</c><00:35:16.320><c> time.</c>

00:35:16.630 --> 00:35:16.640 align:start position:0%
nonblock. You do see this all the time.
 

00:35:16.640 --> 00:35:17.910 align:start position:0%
nonblock. You do see this all the time.
This<00:35:16.720><c> is</c><00:35:16.800><c> where</c><00:35:16.960><c> you</c><00:35:17.119><c> write</c><00:35:17.280><c> an</c><00:35:17.440><c> incorrect</c>

00:35:17.910 --> 00:35:17.920 align:start position:0%
This is where you write an incorrect
 

00:35:17.920 --> 00:35:21.030 align:start position:0%
This is where you write an incorrect
program<00:35:18.240><c> which</c><00:35:18.880><c> often</c><00:35:19.280><c> still</c><00:35:19.680><c> runs.</c><00:35:20.480><c> Uh,</c><00:35:20.800><c> can</c>

00:35:21.030 --> 00:35:21.040 align:start position:0%
program which often still runs. Uh, can
 

00:35:21.040 --> 00:35:26.790 align:start position:0%
program which often still runs. Uh, can
anyone<00:35:22.240><c> spot</c><00:35:23.200><c> uh</c>

00:35:26.790 --> 00:35:26.800 align:start position:0%
 
 

00:35:26.800 --> 00:35:36.310 align:start position:0%
 
what's<00:35:27.119><c> wrong</c><00:35:27.280><c> with</c><00:35:27.520><c> this</c><00:35:27.839><c> code?</c>

00:35:36.310 --> 00:35:36.320 align:start position:0%
 
 

00:35:36.320 --> 00:35:38.870 align:start position:0%
 
So,<00:35:36.880><c> um,</c>

00:35:38.870 --> 00:35:38.880 align:start position:0%
So, um,
 

00:35:38.880 --> 00:35:43.510 align:start position:0%
So, um,
so<00:35:39.200><c> no,</c><00:35:39.520><c> so</c><00:35:39.760><c> I</c><00:35:39.920><c> I</c><00:35:40.320><c> so</c><00:35:40.560><c> I</c><00:35:40.960><c> the</c><00:35:41.280><c> isn</c><00:35:41.839><c> is</c><00:35:42.000><c> is</c><00:35:42.000><c> is</c>

00:35:43.510 --> 00:35:43.520 align:start position:0%
so no, so I I so I the isn is is is
 

00:35:43.520 --> 00:35:51.829 align:start position:0%
so no, so I I so I the isn is is is
send<00:35:44.079><c> is</c><00:35:44.079><c> is</c><00:35:44.240><c> is</c><00:35:44.640><c> a</c><00:35:44.800><c> routine</c><00:35:45.440><c> is</c><00:35:45.760><c> send</c><00:35:46.240><c> is</c><00:35:47.119><c> non</c>

00:35:51.829 --> 00:35:51.839 align:start position:0%
 
 

00:35:51.839 --> 00:35:54.230 align:start position:0%
 
synchronous<00:35:52.560><c> send.</c><00:35:53.280><c> So</c><00:35:53.440><c> I</c><00:35:53.599><c> just</c><00:35:53.760><c> use</c><00:35:53.839><c> that</c><00:35:54.000><c> as</c>

00:35:54.230 --> 00:35:54.240 align:start position:0%
synchronous send. So I just use that as
 

00:35:54.240 --> 00:35:57.270 align:start position:0%
synchronous send. So I just use that as
example.<00:35:55.680><c> So</c><00:35:56.000><c> that</c><00:35:56.160><c> is</c><00:35:56.320><c> a</c><00:35:56.480><c> correct</c><00:35:56.720><c> routine.</c>

00:35:57.270 --> 00:35:57.280 align:start position:0%
example. So that is a correct routine.
 

00:35:57.280 --> 00:36:00.150 align:start position:0%
example. So that is a correct routine.
But<00:35:57.440><c> but</c><00:35:57.680><c> the</c><00:35:58.400><c> um</c>

00:36:00.150 --> 00:36:00.160 align:start position:0%
But but the um
 

00:36:00.160 --> 00:36:01.750 align:start position:0%
But but the um
uh

00:36:01.750 --> 00:36:01.760 align:start position:0%
uh
 

00:36:01.760 --> 00:36:04.550 align:start position:0%
uh
um

00:36:04.550 --> 00:36:04.560 align:start position:0%
um
 

00:36:04.560 --> 00:36:05.990 align:start position:0%
um
would<00:36:04.720><c> you</c><00:36:04.960><c> buy</c><00:36:05.040><c> too</c><00:36:05.200><c> many</c><00:36:05.359><c> sounds,</c><00:36:05.680><c> Stephen?</c>

00:36:05.990 --> 00:36:06.000 align:start position:0%
would you buy too many sounds, Stephen?
 

00:36:06.000 --> 00:36:07.030 align:start position:0%
would you buy too many sounds, Stephen?
That's<00:36:06.160><c> interesting.</c><00:36:06.480><c> I</c><00:36:06.640><c> don't</c><00:36:06.800><c> quite</c><00:36:06.960><c> know</c>

00:36:07.030 --> 00:36:07.040 align:start position:0%
That's interesting. I don't quite know
 

00:36:07.040 --> 00:36:14.870 align:start position:0%
That's interesting. I don't quite know
what<00:36:07.280><c> you</c><00:36:07.839><c> you</c><00:36:08.240><c> want</c><00:36:08.400><c> me</c><00:36:08.640><c> to</c>

00:36:14.870 --> 00:36:14.880 align:start position:0%
 
 

00:36:14.880 --> 00:36:16.550 align:start position:0%
 
There's<00:36:15.200><c> two</c><00:36:15.440><c> sort</c><00:36:15.599><c> of</c><00:36:15.760><c> things</c><00:36:16.000><c> wrong</c><00:36:16.320><c> with</c>

00:36:16.550 --> 00:36:16.560 align:start position:0%
There's two sort of things wrong with
 

00:36:16.560 --> 00:36:19.349 align:start position:0%
There's two sort of things wrong with
this<00:36:16.800><c> code.</c><00:36:17.760><c> um</c>

00:36:19.349 --> 00:36:19.359 align:start position:0%
this code. um
 

00:36:19.359 --> 00:36:21.829 align:start position:0%
this code. um
which

00:36:21.829 --> 00:36:21.839 align:start position:0%
which
 

00:36:21.839 --> 00:36:25.030 align:start position:0%
which
the<00:36:22.160><c> first</c><00:36:22.480><c> is</c><00:36:22.880><c> that</c><00:36:23.599><c> um</c><00:36:24.000><c> I've</c><00:36:24.320><c> got</c><00:36:24.480><c> this</c><00:36:24.720><c> now</c>

00:36:25.030 --> 00:36:25.040 align:start position:0%
the first is that um I've got this now
 

00:36:25.040 --> 00:36:27.190 align:start position:0%
the first is that um I've got this now
start<00:36:25.440><c> compilation</c><00:36:26.640><c> what</c><00:36:26.800><c> I'm</c><00:36:26.880><c> doing</c><00:36:26.960><c> is</c><00:36:27.119><c> I'm</c>

00:36:27.190 --> 00:36:27.200 align:start position:0%
start compilation what I'm doing is I'm
 

00:36:27.200 --> 00:36:30.230 align:start position:0%
start compilation what I'm doing is I'm
using<00:36:27.520><c> I'm</c><00:36:27.760><c> doing</c>

00:36:30.230 --> 00:36:30.240 align:start position:0%
using I'm doing
 

00:36:30.240 --> 00:36:33.589 align:start position:0%
using I'm doing
ah<00:36:30.480><c> okay</c><00:36:30.880><c> uh</c><00:36:31.040><c> no</c><00:36:31.200><c> but</c><00:36:32.079><c> um</c>

00:36:33.589 --> 00:36:33.599 align:start position:0%
ah okay uh no but um
 

00:36:33.599 --> 00:36:35.829 align:start position:0%
ah okay uh no but um
uh

00:36:35.829 --> 00:36:35.839 align:start position:0%
uh
 

00:36:35.839 --> 00:36:38.310 align:start position:0%
uh
uh<00:36:36.079><c> this</c><00:36:36.400><c> so</c><00:36:36.720><c> okay</c><00:36:36.960><c> so</c><00:36:37.280><c> this</c><00:36:37.440><c> code</c><00:36:37.680><c> would</c><00:36:38.000><c> work</c>

00:36:38.310 --> 00:36:38.320 align:start position:0%
uh this so okay so this code would work
 

00:36:38.320 --> 00:36:42.069 align:start position:0%
uh this so okay so this code would work
because<00:36:39.680><c> um</c><00:36:40.800><c> I'm</c><00:36:41.040><c> no</c><00:36:41.280><c> so</c><00:36:41.440><c> I'm</c><00:36:41.599><c> not</c><00:36:41.680><c> sending</c><00:36:41.920><c> to</c>

00:36:42.069 --> 00:36:42.079 align:start position:0%
because um I'm no so I'm not sending to
 

00:36:42.079 --> 00:36:44.230 align:start position:0%
because um I'm no so I'm not sending to
myself<00:36:42.480><c> I'm</c><00:36:42.720><c> sending</c><00:36:42.960><c> to</c><00:36:43.200><c> I</c><00:36:43.680><c> okay</c><00:36:44.000><c> it's</c>

00:36:44.230 --> 00:36:44.240 align:start position:0%
myself I'm sending to I okay it's
 

00:36:44.240 --> 00:36:45.910 align:start position:0%
myself I'm sending to I okay it's
actually<00:36:44.480><c> true</c><00:36:44.720><c> that</c><00:36:45.040><c> it's</c><00:36:45.359><c> there's</c><00:36:45.680><c> not</c><00:36:45.760><c> a</c>

00:36:45.910 --> 00:36:45.920 align:start position:0%
actually true that it's there's not a
 

00:36:45.920 --> 00:36:47.910 align:start position:0%
actually true that it's there's not a
log<00:36:46.240><c> but</c><00:36:46.560><c> it's</c><00:36:46.720><c> a</c><00:36:46.880><c> way</c><00:36:47.200><c> the</c><00:36:47.359><c> way</c><00:36:47.520><c> I'm</c>

00:36:47.910 --> 00:36:47.920 align:start position:0%
log but it's a way the way I'm
 

00:36:47.920 --> 00:36:49.270 align:start position:0%
log but it's a way the way I'm
specifically<00:36:48.240><c> the</c><00:36:48.400><c> way</c><00:36:48.480><c> I'm</c><00:36:48.640><c> using</c><00:36:48.800><c> non-bot</c>

00:36:49.270 --> 00:36:49.280 align:start position:0%
specifically the way I'm using non-bot
 

00:36:49.280 --> 00:36:50.950 align:start position:0%
specifically the way I'm using non-bot
communications.<00:36:50.240><c> So</c><00:36:50.400><c> what</c><00:36:50.560><c> I'm</c><00:36:50.720><c> doing</c><00:36:50.800><c> here</c>

00:36:50.950 --> 00:36:50.960 align:start position:0%
communications. So what I'm doing here
 

00:36:50.960 --> 00:36:52.310 align:start position:0%
communications. So what I'm doing here
is<00:36:51.119><c> if</c><00:36:51.280><c> rank</c><00:36:51.599><c> you</c><00:36:51.839><c> should</c><00:36:51.920><c> really</c><00:36:52.160><c> do</c><00:36:52.240><c> this</c>

00:36:52.310 --> 00:36:52.320 align:start position:0%
is if rank you should really do this
 

00:36:52.320 --> 00:36:53.670 align:start position:0%
is if rank you should really do this
with<00:36:52.480><c> the</c><00:36:52.640><c> broadcast</c><00:36:53.119><c> but</c><00:36:53.280><c> what</c><00:36:53.359><c> I'm</c><00:36:53.520><c> doing</c><00:36:53.599><c> is</c>

00:36:53.670 --> 00:36:53.680 align:start position:0%
with the broadcast but what I'm doing is
 

00:36:53.680 --> 00:36:55.510 align:start position:0%
with the broadcast but what I'm doing is
I'm<00:36:53.839><c> saying</c><00:36:54.000><c> if</c><00:36:54.160><c> I'm</c><00:36:54.320><c> ranked</c><00:36:54.560><c> zero</c><00:36:55.040><c> I</c><00:36:55.200><c> loop</c>

00:36:55.510 --> 00:36:55.520 align:start position:0%
I'm saying if I'm ranked zero I loop
 

00:36:55.520 --> 00:36:57.270 align:start position:0%
I'm saying if I'm ranked zero I loop
over<00:36:55.760><c> everybody</c><00:36:56.079><c> else</c><00:36:56.400><c> one</c><00:36:56.640><c> to</c><00:36:56.800><c> size</c><00:36:57.040><c> minus</c>

00:36:57.270 --> 00:36:57.280 align:start position:0%
over everybody else one to size minus
 

00:36:57.280 --> 00:36:59.349 align:start position:0%
over everybody else one to size minus
one<00:36:57.599><c> I</c><00:36:57.760><c> send</c><00:36:57.839><c> them</c><00:36:58.000><c> a</c><00:36:58.240><c> value</c><00:36:58.720><c> and</c><00:36:58.960><c> everyone</c>

00:36:59.349 --> 00:36:59.359 align:start position:0%
one I send them a value and everyone
 

00:36:59.359 --> 00:37:01.190 align:start position:0%
one I send them a value and everyone
else<00:36:59.680><c> receives</c><00:37:00.079><c> that.</c><00:37:00.480><c> So</c><00:37:00.640><c> these</c><00:37:00.800><c> sends</c><00:37:01.040><c> and</c>

00:37:01.190 --> 00:37:01.200 align:start position:0%
else receives that. So these sends and
 

00:37:01.200 --> 00:37:03.829 align:start position:0%
else receives that. So these sends and
receives<00:37:01.599><c> do</c><00:37:01.839><c> match</c><00:37:02.079><c> up</c><00:37:02.720><c> because</c><00:37:03.119><c> one</c><00:37:03.440><c> process</c>

00:37:03.829 --> 00:37:03.839 align:start position:0%
receives do match up because one process
 

00:37:03.839 --> 00:37:06.630 align:start position:0%
receives do match up because one process
is<00:37:04.079><c> doing</c><00:37:04.320><c> size</c><00:37:04.640><c> minus</c><00:37:05.040><c> one</c><00:37:05.280><c> sends</c><00:37:06.079><c> and</c><00:37:06.320><c> size</c>

00:37:06.630 --> 00:37:06.640 align:start position:0%
is doing size minus one sends and size
 

00:37:06.640 --> 00:37:08.230 align:start position:0%
is doing size minus one sends and size
minus<00:37:06.960><c> one</c><00:37:07.200><c> processes</c><00:37:07.680><c> are</c><00:37:07.839><c> doing</c><00:37:08.000><c> one</c>

00:37:08.230 --> 00:37:08.240 align:start position:0%
minus one processes are doing one
 

00:37:08.240 --> 00:37:10.310 align:start position:0%
minus one processes are doing one
receive<00:37:08.880><c> but</c><00:37:09.040><c> it's</c><00:37:09.200><c> the</c><00:37:09.359><c> use</c><00:37:09.520><c> of</c><00:37:09.599><c> non-blocking</c>

00:37:10.310 --> 00:37:10.320 align:start position:0%
receive but it's the use of non-blocking
 

00:37:10.320 --> 00:37:13.349 align:start position:0%
receive but it's the use of non-blocking
which<00:37:10.480><c> is</c><00:37:10.640><c> the</c><00:37:10.800><c> problem</c><00:37:11.040><c> here.</c><00:37:11.599><c> Um</c>

00:37:13.349 --> 00:37:13.359 align:start position:0%
which is the problem here. Um
 

00:37:13.359 --> 00:37:14.630 align:start position:0%
which is the problem here. Um
so<00:37:13.599><c> you're</c><00:37:13.760><c> absolutely</c><00:37:14.079><c> right.</c><00:37:14.320><c> There's</c><00:37:14.480><c> no</c>

00:37:14.630 --> 00:37:14.640 align:start position:0%
so you're absolutely right. There's no
 

00:37:14.640 --> 00:37:16.310 align:start position:0%
so you're absolutely right. There's no
point<00:37:14.800><c> doing</c><00:37:15.119><c> no</c><00:37:15.359><c> absolutely</c><00:37:15.599><c> right.</c><00:37:15.839><c> So,</c><00:37:16.079><c> so,</c>

00:37:16.310 --> 00:37:16.320 align:start position:0%
point doing no absolutely right. So, so,
 

00:37:16.320 --> 00:37:21.750 align:start position:0%
point doing no absolutely right. So, so,
so,<00:37:16.720><c> so,</c><00:37:17.119><c> so,</c><00:37:18.320><c> um,</c><00:37:19.520><c> ah,</c><00:37:19.760><c> okay.</c><00:37:20.160><c> Right.</c><00:37:20.720><c> So,</c>

00:37:21.750 --> 00:37:21.760 align:start position:0%
so, so, so, um, ah, okay. Right. So,
 

00:37:21.760 --> 00:37:23.109 align:start position:0%
so, so, so, um, ah, okay. Right. So,
right,<00:37:22.000><c> that's,</c><00:37:22.400><c> so,</c><00:37:22.640><c> so</c><00:37:22.800><c> you're</c><00:37:22.880><c> absolutely</c>

00:37:23.109 --> 00:37:23.119 align:start position:0%
right, that's, so, so you're absolutely
 

00:37:23.119 --> 00:37:24.470 align:start position:0%
right, that's, so, so you're absolutely
right,<00:37:23.280><c> Yousef,</c><00:37:23.680><c> there's</c><00:37:23.839><c> no</c><00:37:24.000><c> point.</c><00:37:24.240><c> So,</c>

00:37:24.470 --> 00:37:24.480 align:start position:0%
right, Yousef, there's no point. So,
 

00:37:24.480 --> 00:37:26.390 align:start position:0%
right, Yousef, there's no point. So,
people<00:37:24.720><c> overuse</c><00:37:25.200><c> non-blocking.</c><00:37:25.839><c> So,</c><00:37:26.000><c> here</c><00:37:26.160><c> I</c>

00:37:26.390 --> 00:37:26.400 align:start position:0%
people overuse non-blocking. So, here I
 

00:37:26.400 --> 00:37:27.750 align:start position:0%
people overuse non-blocking. So, here I
shouldn't<00:37:26.560><c> use</c><00:37:26.720><c> non-blocking.</c><00:37:27.440><c> There's</c><00:37:27.599><c> no</c>

00:37:27.750 --> 00:37:27.760 align:start position:0%
shouldn't use non-blocking. There's no
 

00:37:27.760 --> 00:37:30.069 align:start position:0%
shouldn't use non-blocking. There's no
need<00:37:28.000><c> here.</c><00:37:28.640><c> However,</c><00:37:29.440><c> in</c><00:37:29.599><c> a</c><00:37:29.839><c> more</c>

00:37:30.069 --> 00:37:30.079 align:start position:0%
need here. However, in a more
 

00:37:30.079 --> 00:37:31.910 align:start position:0%
need here. However, in a more
complicated<00:37:30.640><c> this</c><00:37:30.880><c> in</c><00:37:31.040><c> a</c><00:37:31.200><c> more</c><00:37:31.359><c> complicated</c>

00:37:31.910 --> 00:37:31.920 align:start position:0%
complicated this in a more complicated
 

00:37:31.920 --> 00:37:33.670 align:start position:0%
complicated this in a more complicated
example,<00:37:32.240><c> I</c><00:37:32.480><c> might</c><00:37:32.640><c> need</c><00:37:32.720><c> to</c><00:37:32.880><c> do</c><00:37:32.960><c> it.</c><00:37:33.200><c> So,</c><00:37:33.440><c> yes,</c>

00:37:33.670 --> 00:37:33.680 align:start position:0%
example, I might need to do it. So, yes,
 

00:37:33.680 --> 00:37:34.630 align:start position:0%
example, I might need to do it. So, yes,
so<00:37:33.839><c> there</c><00:37:34.000><c> needs</c><00:37:34.160><c> to</c><00:37:34.240><c> be</c><00:37:34.400><c> some</c>

00:37:34.630 --> 00:37:34.640 align:start position:0%
so there needs to be some
 

00:37:34.640 --> 00:37:37.270 align:start position:0%
so there needs to be some
synchronization<00:37:35.599><c> between</c><00:37:36.240><c> this</c><00:37:36.560><c> and</c><00:37:36.800><c> this.</c>

00:37:37.270 --> 00:37:37.280 align:start position:0%
synchronization between this and this.
 

00:37:37.280 --> 00:37:38.950 align:start position:0%
synchronization between this and this.
But<00:37:37.359><c> a</c><00:37:37.599><c> barrier</c><00:37:37.920><c> is</c><00:37:38.160><c> not</c><00:37:38.320><c> what</c><00:37:38.480><c> you</c><00:37:38.560><c> need.</c><00:37:38.800><c> What</c>

00:37:38.950 --> 00:37:38.960 align:start position:0%
But a barrier is not what you need. What
 

00:37:38.960 --> 00:37:40.950 align:start position:0%
But a barrier is not what you need. What
you<00:37:39.119><c> need</c><00:37:39.200><c> to</c><00:37:39.280><c> do</c><00:37:39.359><c> is</c><00:37:39.520><c> you</c><00:37:39.680><c> need</c><00:37:39.760><c> to</c><00:37:40.000><c> make</c><00:37:40.160><c> sure</c>

00:37:40.950 --> 00:37:40.960 align:start position:0%
you need to do is you need to make sure
 

00:37:40.960 --> 00:37:42.870 align:start position:0%
you need to do is you need to make sure
that<00:37:41.280><c> these</c><00:37:41.599><c> non-blocking</c><00:37:42.320><c> communications</c>

00:37:42.870 --> 00:37:42.880 align:start position:0%
that these non-blocking communications
 

00:37:42.880 --> 00:37:45.109 align:start position:0%
that these non-blocking communications
have<00:37:43.119><c> completed.</c><00:37:43.760><c> So</c><00:37:43.920><c> you</c><00:37:44.160><c> need</c><00:37:44.240><c> to</c><00:37:44.480><c> wait.</c>

00:37:45.109 --> 00:37:45.119 align:start position:0%
have completed. So you need to wait.
 

00:37:45.119 --> 00:37:47.510 align:start position:0%
have completed. So you need to wait.
Every<00:37:45.359><c> non-blocking</c><00:37:46.079><c> communication</c><00:37:47.200><c> has</c><00:37:47.440><c> to</c>

00:37:47.510 --> 00:37:47.520 align:start position:0%
Every non-blocking communication has to
 

00:37:47.520 --> 00:37:49.990 align:start position:0%
Every non-blocking communication has to
have<00:37:47.680><c> an</c><00:37:47.760><c> appro</c><00:37:48.160><c> has</c><00:37:48.320><c> to</c><00:37:48.480><c> have</c><00:37:49.200><c> a</c><00:37:49.440><c> wait</c><00:37:49.760><c> where</c>

00:37:49.990 --> 00:37:50.000 align:start position:0%
have an appro has to have a wait where
 

00:37:50.000 --> 00:37:53.990 align:start position:0%
have an appro has to have a wait where
you<00:37:50.160><c> tell</c><00:37:50.400><c> NPI</c><00:37:51.440><c> I</c><00:37:51.680><c> cannot</c><00:37:52.079><c> proceed</c><00:37:52.560><c> until</c><00:37:53.440><c> this</c>

00:37:53.990 --> 00:37:54.000 align:start position:0%
you tell NPI I cannot proceed until this
 

00:37:54.000 --> 00:37:56.550 align:start position:0%
you tell NPI I cannot proceed until this
communication<00:37:54.720><c> has</c><00:37:55.040><c> completed.</c>

00:37:56.550 --> 00:37:56.560 align:start position:0%
communication has completed.
 

00:37:56.560 --> 00:37:58.310 align:start position:0%
communication has completed.
And<00:37:56.880><c> the</c><00:37:57.200><c> important</c><00:37:57.520><c> point</c><00:37:57.760><c> is</c><00:37:57.920><c> that</c><00:37:58.079><c> that</c>

00:37:58.310 --> 00:37:58.320 align:start position:0%
And the important point is that that
 

00:37:58.320 --> 00:38:00.790 align:start position:0%
And the important point is that that
weight<00:37:58.720><c> does</c><00:37:58.960><c> two</c><00:37:59.280><c> things.</c><00:37:59.680><c> A</c><00:38:00.000><c> it</c><00:38:00.160><c> acts</c><00:38:00.400><c> like</c><00:38:00.640><c> a</c>

00:38:00.790 --> 00:38:00.800 align:start position:0%
weight does two things. A it acts like a
 

00:38:00.800 --> 00:38:02.950 align:start position:0%
weight does two things. A it acts like a
barrier<00:38:01.440><c> Steven</c><00:38:01.760><c> has</c><00:38:02.000><c> mentioned.</c><00:38:02.320><c> So</c><00:38:02.480><c> it</c><00:38:02.640><c> it</c>

00:38:02.950 --> 00:38:02.960 align:start position:0%
barrier Steven has mentioned. So it it
 

00:38:02.960 --> 00:38:05.030 align:start position:0%
barrier Steven has mentioned. So it it
makes<00:38:03.200><c> sure</c><00:38:03.280><c> that</c><00:38:03.520><c> the</c><00:38:03.839><c> the</c><00:38:04.240><c> program</c><00:38:04.640><c> waits</c>

00:38:05.030 --> 00:38:05.040 align:start position:0%
makes sure that the the program waits
 

00:38:05.040 --> 00:38:06.790 align:start position:0%
makes sure that the the program waits
until<00:38:05.359><c> that</c><00:38:05.680><c> communication</c><00:38:06.240><c> has</c><00:38:06.480><c> been</c>

00:38:06.790 --> 00:38:06.800 align:start position:0%
until that communication has been
 

00:38:06.800 --> 00:38:10.310 align:start position:0%
until that communication has been
completed.<00:38:08.079><c> But</c><00:38:08.320><c> more</c><00:38:08.720><c> equally</c><00:38:09.280><c> importantly,</c>

00:38:10.310 --> 00:38:10.320 align:start position:0%
completed. But more equally importantly,
 

00:38:10.320 --> 00:38:13.109 align:start position:0%
completed. But more equally importantly,
it<00:38:10.560><c> allows</c><00:38:10.960><c> NPI</c><00:38:11.839><c> to</c><00:38:12.320><c> it</c><00:38:12.480><c> knows</c><00:38:12.720><c> that</c><00:38:12.880><c> that</c>

00:38:13.109 --> 00:38:13.119 align:start position:0%
it allows NPI to it knows that that
 

00:38:13.119 --> 00:38:14.950 align:start position:0%
it allows NPI to it knows that that
communication<00:38:13.599><c> is</c><00:38:13.839><c> finished</c><00:38:14.079><c> and</c><00:38:14.560><c> that</c><00:38:14.800><c> you</c>

00:38:14.950 --> 00:38:14.960 align:start position:0%
communication is finished and that you
 

00:38:14.960 --> 00:38:16.870 align:start position:0%
communication is finished and that you
have<00:38:15.200><c> waited</c><00:38:15.520><c> on</c><00:38:15.680><c> it</c><00:38:15.760><c> and</c><00:38:16.000><c> it</c><00:38:16.160><c> can</c><00:38:16.240><c> then</c><00:38:16.480><c> free</c>

00:38:16.870 --> 00:38:16.880 align:start position:0%
have waited on it and it can then free
 

00:38:16.880 --> 00:38:19.030 align:start position:0%
have waited on it and it can then free
eternal<00:38:17.359><c> resources.</c><00:38:18.320><c> So</c><00:38:18.480><c> there</c><00:38:18.640><c> are</c><00:38:18.720><c> actually</c>

00:38:19.030 --> 00:38:19.040 align:start position:0%
eternal resources. So there are actually
 

00:38:19.040 --> 00:38:21.829 align:start position:0%
eternal resources. So there are actually
two<00:38:19.280><c> problems</c><00:38:19.520><c> with</c><00:38:19.760><c> this</c><00:38:20.000><c> code.</c><00:38:20.640><c> One</c><00:38:20.880><c> is</c><00:38:21.520><c> now</c>

00:38:21.829 --> 00:38:21.839 align:start position:0%
two problems with this code. One is now
 

00:38:21.839 --> 00:38:24.310 align:start position:0%
two problems with this code. One is now
start<00:38:22.160><c> computation.</c><00:38:22.800><c> I</c><00:38:23.119><c> haven't</c><00:38:23.359><c> waited</c><00:38:24.079><c> for</c>

00:38:24.310 --> 00:38:24.320 align:start position:0%
start computation. I haven't waited for
 

00:38:24.320 --> 00:38:26.710 align:start position:0%
start computation. I haven't waited for
these<00:38:24.560><c> receives</c><00:38:25.040><c> to</c><00:38:25.280><c> complete.</c><00:38:26.160><c> I</c><00:38:26.400><c> don't</c><00:38:26.560><c> know</c>

00:38:26.710 --> 00:38:26.720 align:start position:0%
these receives to complete. I don't know
 

00:38:26.720 --> 00:38:28.470 align:start position:0%
these receives to complete. I don't know
these<00:38:26.960><c> receives.</c><00:38:27.440><c> They've</c><00:38:27.680><c> been</c><00:38:27.839><c> issued</c><00:38:28.079><c> but</c>

00:38:28.470 --> 00:38:28.480 align:start position:0%
these receives. They've been issued but
 

00:38:28.480 --> 00:38:32.230 align:start position:0%
these receives. They've been issued but
so<00:38:28.640><c> I</c><00:38:28.800><c> need</c><00:38:28.880><c> to</c><00:38:29.040><c> have</c><00:38:29.200><c> a</c><00:38:29.440><c> wait.</c><00:38:30.160><c> Um</c><00:38:30.960><c> so</c><00:38:31.440><c> we</c><00:38:31.760><c> need</c>

00:38:32.230 --> 00:38:32.240 align:start position:0%
so I need to have a wait. Um so we need
 

00:38:32.240 --> 00:38:33.829 align:start position:0%
so I need to have a wait. Um so we need
um

00:38:33.829 --> 00:38:33.839 align:start position:0%
um
 

00:38:33.839 --> 00:38:36.150 align:start position:0%
um
uh<00:38:34.160><c> so</c><00:38:34.880><c> we</c><00:38:35.200><c> so</c><00:38:35.359><c> there's</c><00:38:35.599><c> two</c><00:38:35.760><c> problems</c><00:38:36.000><c> here.</c>

00:38:36.150 --> 00:38:36.160 align:start position:0%
uh so we so there's two problems here.
 

00:38:36.160 --> 00:38:38.870 align:start position:0%
uh so we so there's two problems here.
We<00:38:36.320><c> need</c><00:38:36.400><c> to</c><00:38:36.560><c> have</c><00:38:36.640><c> a</c><00:38:36.800><c> weight</c><00:38:37.040><c> here</c><00:38:37.839><c> but</c><00:38:38.160><c> also</c>

00:38:38.870 --> 00:38:38.880 align:start position:0%
We need to have a weight here but also
 

00:38:38.880 --> 00:38:41.589 align:start position:0%
We need to have a weight here but also
okay<00:38:39.760><c> here</c><00:38:40.160><c> on</c><00:38:40.400><c> so</c><00:38:40.720><c> rank</c><00:38:40.960><c> there</c><00:38:41.200><c> needs</c><00:38:41.280><c> to</c><00:38:41.359><c> be</c><00:38:41.440><c> a</c>

00:38:41.589 --> 00:38:41.599 align:start position:0%
okay here on so rank there needs to be a
 

00:38:41.599 --> 00:38:44.069 align:start position:0%
okay here on so rank there needs to be a
weight<00:38:41.839><c> here</c><00:38:42.400><c> on</c><00:38:42.560><c> these</c><00:38:42.960><c> on</c><00:38:43.119><c> these</c><00:38:43.359><c> on</c><00:38:43.599><c> these</c>

00:38:44.069 --> 00:38:44.079 align:start position:0%
weight here on these on these on these
 

00:38:44.079 --> 00:38:48.069 align:start position:0%
weight here on these on these on these
um<00:38:45.040><c> uh</c><00:38:46.320><c> on</c><00:38:46.480><c> these</c><00:38:46.960><c> received</c><00:38:47.359><c> to</c><00:38:47.520><c> check</c><00:38:47.760><c> they've</c>

00:38:48.069 --> 00:38:48.079 align:start position:0%
um uh on these received to check they've
 

00:38:48.079 --> 00:38:49.829 align:start position:0%
um uh on these received to check they've
completed.<00:38:48.800><c> The</c><00:38:49.040><c> other</c><00:38:49.200><c> problem</c><00:38:49.440><c> is</c><00:38:49.680><c> I'm</c>

00:38:49.829 --> 00:38:49.839 align:start position:0%
completed. The other problem is I'm
 

00:38:49.839 --> 00:38:51.430 align:start position:0%
completed. The other problem is I'm
issuing<00:38:50.160><c> multiple</c><00:38:50.560><c> senses.</c><00:38:51.040><c> So</c><00:38:51.200><c> remember</c>

00:38:51.430 --> 00:38:51.440 align:start position:0%
issuing multiple senses. So remember
 

00:38:51.440 --> 00:38:52.630 align:start position:0%
issuing multiple senses. So remember
when<00:38:51.599><c> you</c><00:38:51.680><c> issue</c><00:38:51.920><c> a</c><00:38:52.000><c> non-blocking</c>

00:38:52.630 --> 00:38:52.640 align:start position:0%
when you issue a non-blocking
 

00:38:52.640 --> 00:38:55.270 align:start position:0%
when you issue a non-blocking
communication<00:38:53.599><c> you're</c><00:38:53.920><c> asking</c><00:38:54.320><c> NPI</c><00:38:54.880><c> to</c><00:38:55.040><c> do</c>

00:38:55.270 --> 00:38:55.280 align:start position:0%
communication you're asking NPI to do
 

00:38:55.280 --> 00:38:56.950 align:start position:0%
communication you're asking NPI to do
something<00:38:55.760><c> in</c><00:38:56.000><c> the</c><00:38:56.160><c> future.</c><00:38:56.560><c> Could</c><00:38:56.800><c> you</c>

00:38:56.950 --> 00:38:56.960 align:start position:0%
something in the future. Could you
 

00:38:56.960 --> 00:38:58.550 align:start position:0%
something in the future. Could you
please<00:38:57.119><c> send</c><00:38:57.359><c> this</c><00:38:57.520><c> message</c><00:38:57.839><c> sometime</c><00:38:58.240><c> in</c><00:38:58.480><c> the</c>

00:38:58.550 --> 00:38:58.560 align:start position:0%
please send this message sometime in the
 

00:38:58.560 --> 00:39:01.030 align:start position:0%
please send this message sometime in the
future?<00:38:59.520><c> What</c><00:38:59.680><c> NPI</c><00:39:00.160><c> gives</c><00:39:00.320><c> you</c><00:39:00.480><c> back</c><00:39:00.640><c> is</c><00:39:00.880><c> a</c>

00:39:01.030 --> 00:39:01.040 align:start position:0%
future? What NPI gives you back is a
 

00:39:01.040 --> 00:39:03.510 align:start position:0%
future? What NPI gives you back is a
request.<00:39:01.520><c> This</c><00:39:01.680><c> is</c><00:39:01.839><c> returned</c><00:39:02.320><c> to</c><00:39:02.560><c> you</c><00:39:03.200><c> and</c>

00:39:03.510 --> 00:39:03.520 align:start position:0%
request. This is returned to you and
 

00:39:03.520 --> 00:39:05.990 align:start position:0%
request. This is returned to you and
that<00:39:03.920><c> is</c><00:39:04.560><c> um</c><00:39:04.800><c> effect</c><00:39:05.200><c> like</c><00:39:05.280><c> a</c><00:39:05.440><c> ticket.</c><00:39:05.680><c> This</c><00:39:05.920><c> is</c>

00:39:05.990 --> 00:39:06.000 align:start position:0%
that is um effect like a ticket. This is
 

00:39:06.000 --> 00:39:07.910 align:start position:0%
that is um effect like a ticket. This is
your<00:39:06.160><c> ticket</c><00:39:06.720><c> number</c><00:39:06.960><c> or</c><00:39:07.119><c> your</c><00:39:07.280><c> or</c><00:39:07.440><c> your</c><00:39:07.599><c> your</c>

00:39:07.910 --> 00:39:07.920 align:start position:0%
your ticket number or your or your your
 

00:39:07.920 --> 00:39:10.150 align:start position:0%
your ticket number or your or your your
receipt<00:39:08.720><c> your</c><00:39:08.960><c> order</c><00:39:09.280><c> number</c><00:39:09.599><c> for</c><00:39:09.760><c> this</c><00:39:10.000><c> for</c>

00:39:10.150 --> 00:39:10.160 align:start position:0%
receipt your order number for this for
 

00:39:10.160 --> 00:39:11.910 align:start position:0%
receipt your order number for this for
this<00:39:10.400><c> communication.</c>

00:39:11.910 --> 00:39:11.920 align:start position:0%
this communication.
 

00:39:11.920 --> 00:39:13.750 align:start position:0%
this communication.
What<00:39:12.160><c> I'm</c><00:39:12.400><c> doing</c><00:39:12.560><c> here</c><00:39:12.800><c> is</c><00:39:13.040><c> on</c><00:39:13.200><c> this</c><00:39:13.440><c> when</c><00:39:13.599><c> I</c>

00:39:13.750 --> 00:39:13.760 align:start position:0%
What I'm doing here is on this when I
 

00:39:13.760 --> 00:39:15.750 align:start position:0%
What I'm doing here is on this when I
when<00:39:13.920><c> I</c><00:39:14.000><c> do</c><00:39:14.160><c> I</c><00:39:14.400><c> equals</c><00:39:14.800><c> 2,</c><00:39:15.040><c> I'm</c><00:39:15.280><c> issuing</c><00:39:15.599><c> a</c>

00:39:15.750 --> 00:39:15.760 align:start position:0%
when I do I equals 2, I'm issuing a
 

00:39:15.760 --> 00:39:19.349 align:start position:0%
when I do I equals 2, I'm issuing a
second<00:39:16.160><c> MPI</c><00:39:16.960><c> send</c><00:39:17.359><c> to</c><00:39:17.599><c> rank</c><00:39:18.000><c> two,</c><00:39:18.800><c> but</c><00:39:19.040><c> I'm</c>

00:39:19.349 --> 00:39:19.359 align:start position:0%
second MPI send to rank two, but I'm
 

00:39:19.359 --> 00:39:21.190 align:start position:0%
second MPI send to rank two, but I'm
overwriting<00:39:19.920><c> the</c><00:39:20.160><c> request.</c><00:39:20.640><c> You</c><00:39:20.800><c> see</c><00:39:21.040><c> people</c>

00:39:21.190 --> 00:39:21.200 align:start position:0%
overwriting the request. You see people
 

00:39:21.200 --> 00:39:22.790 align:start position:0%
overwriting the request. You see people
doing<00:39:21.359><c> this</c><00:39:21.520><c> quite</c><00:39:21.680><c> a</c><00:39:21.920><c> lot.</c><00:39:22.400><c> They</c><00:39:22.640><c> are</c>

00:39:22.790 --> 00:39:22.800 align:start position:0%
doing this quite a lot. They are
 

00:39:22.800 --> 00:39:24.870 align:start position:0%
doing this quite a lot. They are
overwriting<00:39:23.359><c> the</c><00:39:23.520><c> request.</c><00:39:23.920><c> So,</c><00:39:24.160><c> so,</c><00:39:24.400><c> so</c><00:39:24.560><c> it's</c>

00:39:24.870 --> 00:39:24.880 align:start position:0%
overwriting the request. So, so, so it's
 

00:39:24.880 --> 00:39:27.510 align:start position:0%
overwriting the request. So, so, so it's
like<00:39:25.040><c> they've</c><00:39:25.280><c> lost</c><00:39:25.520><c> the</c><00:39:25.760><c> first</c><00:39:26.000><c> ticket.</c><00:39:27.359><c> And</c>

00:39:27.510 --> 00:39:27.520 align:start position:0%
like they've lost the first ticket. And
 

00:39:27.520 --> 00:39:29.270 align:start position:0%
like they've lost the first ticket. And
that<00:39:27.760><c> is</c><00:39:27.920><c> a</c><00:39:28.160><c> problem</c><00:39:28.400><c> because</c><00:39:28.640><c> it</c><00:39:28.800><c> means</c><00:39:29.040><c> that</c>

00:39:29.270 --> 00:39:29.280 align:start position:0%
that is a problem because it means that
 

00:39:29.280 --> 00:39:31.430 align:start position:0%
that is a problem because it means that
you<00:39:29.440><c> will</c><00:39:29.680><c> never</c><00:39:30.000><c> ever</c><00:39:30.560><c> tidy</c><00:39:30.960><c> these</c><00:39:31.280><c> things</c>

00:39:31.430 --> 00:39:31.440 align:start position:0%
you will never ever tidy these things
 

00:39:31.440 --> 00:39:33.270 align:start position:0%
you will never ever tidy these things
up.<00:39:31.680><c> You</c><00:39:31.839><c> will</c><00:39:32.000><c> never</c><00:39:32.320><c> and</c><00:39:32.560><c> this</c><00:39:32.640><c> is</c><00:39:32.800><c> a</c><00:39:32.960><c> memory</c>

00:39:33.270 --> 00:39:33.280 align:start position:0%
up. You will never and this is a memory
 

00:39:33.280 --> 00:39:35.910 align:start position:0%
up. You will never and this is a memory
leak.<00:39:34.400><c> So</c><00:39:34.560><c> you</c><00:39:34.800><c> see</c><00:39:34.960><c> this</c><00:39:35.119><c> quite</c><00:39:35.359><c> a</c><00:39:35.520><c> lot.</c><00:39:35.760><c> The</c>

00:39:35.910 --> 00:39:35.920 align:start position:0%
leak. So you see this quite a lot. The
 

00:39:35.920 --> 00:39:38.470 align:start position:0%
leak. So you see this quite a lot. The
code<00:39:36.160><c> this</c><00:39:36.400><c> code</c><00:39:36.720><c> would</c><00:39:37.040><c> run.</c><00:39:37.520><c> Okay,</c><00:39:38.079><c> if</c><00:39:38.320><c> you</c>

00:39:38.470 --> 00:39:38.480 align:start position:0%
code this code would run. Okay, if you
 

00:39:38.480 --> 00:39:40.310 align:start position:0%
code this code would run. Okay, if you
were<00:39:38.640><c> lucky</c><00:39:38.880><c> it</c><00:39:39.119><c> would</c><00:39:39.280><c> run</c><00:39:39.520><c> correctly</c>

00:39:40.310 --> 00:39:40.320 align:start position:0%
were lucky it would run correctly
 

00:39:40.320 --> 00:39:42.150 align:start position:0%
were lucky it would run correctly
because<00:39:40.720><c> you</c><00:39:40.960><c> might</c><00:39:41.200><c> be</c><00:39:41.359><c> lucky</c><00:39:41.680><c> and</c><00:39:42.079><c> and</c><00:39:42.160><c> and</c>

00:39:42.150 --> 00:39:42.160 align:start position:0%
because you might be lucky and and and
 

00:39:42.160 --> 00:39:44.310 align:start position:0%
because you might be lucky and and and
and<00:39:42.880><c> not</c><00:39:43.119><c> have</c><00:39:43.280><c> the</c><00:39:43.440><c> equivalent</c><00:39:43.680><c> of</c><00:39:43.839><c> a</c><00:39:44.000><c> barrier</c>

00:39:44.310 --> 00:39:44.320 align:start position:0%
and not have the equivalent of a barrier
 

00:39:44.320 --> 00:39:47.270 align:start position:0%
and not have the equivalent of a barrier
here.<00:39:44.960><c> Not</c><00:39:45.200><c> having</c><00:39:45.520><c> a</c><00:39:45.839><c> weight</c><00:39:46.160><c> here</c><00:39:46.560><c> would</c><00:39:47.040><c> you</c>

00:39:47.270 --> 00:39:47.280 align:start position:0%
here. Not having a weight here would you
 

00:39:47.280 --> 00:39:48.950 align:start position:0%
here. Not having a weight here would you
might<00:39:47.440><c> be</c><00:39:47.599><c> lucky</c><00:39:47.920><c> enough.</c><00:39:48.400><c> But</c><00:39:48.560><c> the</c><00:39:48.720><c> problem</c>

00:39:48.950 --> 00:39:48.960 align:start position:0%
might be lucky enough. But the problem
 

00:39:48.960 --> 00:39:52.150 align:start position:0%
might be lucky enough. But the problem
here<00:39:49.200><c> is</c><00:39:49.359><c> that</c><00:39:49.599><c> you</c><00:39:49.760><c> are</c><00:39:50.240><c> um</c><00:39:50.720><c> that</c><00:39:50.960><c> you</c><00:39:51.200><c> are</c><00:39:51.839><c> um</c>

00:39:52.150 --> 00:39:52.160 align:start position:0%
here is that you are um that you are um
 

00:39:52.160 --> 00:39:54.230 align:start position:0%
here is that you are um that you are um
you<00:39:52.400><c> are</c><00:39:52.560><c> overwriting</c><00:39:53.119><c> the</c><00:39:53.440><c> requests.</c><00:39:54.000><c> Okay,</c>

00:39:54.230 --> 00:39:54.240 align:start position:0%
you are overwriting the requests. Okay,
 

00:39:54.240 --> 00:39:56.470 align:start position:0%
you are overwriting the requests. Okay,
these<00:39:54.480><c> tickets</c><00:39:54.880><c> which</c><00:39:55.200><c> NPI</c><00:39:55.599><c> is</c><00:39:55.760><c> issuing</c><00:39:56.079><c> you</c>

00:39:56.470 --> 00:39:56.480 align:start position:0%
these tickets which NPI is issuing you
 

00:39:56.480 --> 00:39:58.950 align:start position:0%
these tickets which NPI is issuing you
if<00:39:56.640><c> you</c><00:39:56.880><c> issue</c><00:39:57.280><c> here</c><00:39:57.680><c> size</c><00:39:58.000><c> minus</c><00:39:58.320><c> one</c>

00:39:58.950 --> 00:39:58.960 align:start position:0%
if you issue here size minus one
 

00:39:58.960 --> 00:40:01.430 align:start position:0%
if you issue here size minus one
non-blocking<00:39:59.760><c> send,</c><00:40:00.480><c> it's</c><00:40:00.720><c> up</c><00:40:00.880><c> to</c><00:40:01.040><c> you</c><00:40:01.200><c> to</c>

00:40:01.430 --> 00:40:01.440 align:start position:0%
non-blocking send, it's up to you to
 

00:40:01.440 --> 00:40:03.829 align:start position:0%
non-blocking send, it's up to you to
remember<00:40:02.240><c> size</c><00:40:02.560><c> minus</c><00:40:02.880><c> one</c><00:40:03.200><c> tickets.</c><00:40:03.599><c> you</c>

00:40:03.829 --> 00:40:03.839 align:start position:0%
remember size minus one tickets. you
 

00:40:03.839 --> 00:40:05.510 align:start position:0%
remember size minus one tickets. you
can't<00:40:04.000><c> just</c><00:40:04.240><c> overwrite</c><00:40:04.720><c> them.</c><00:40:04.960><c> Okay?</c><00:40:05.359><c> And</c>

00:40:05.510 --> 00:40:05.520 align:start position:0%
can't just overwrite them. Okay? And
 

00:40:05.520 --> 00:40:07.190 align:start position:0%
can't just overwrite them. Okay? And
that<00:40:05.680><c> would</c><00:40:05.839><c> lead</c><00:40:06.000><c> to</c><00:40:06.079><c> a</c><00:40:06.320><c> memory</c><00:40:06.640><c> leak</c><00:40:06.960><c> because</c>

00:40:07.190 --> 00:40:07.200 align:start position:0%
that would lead to a memory leak because
 

00:40:07.200 --> 00:40:09.750 align:start position:0%
that would lead to a memory leak because
NPI<00:40:07.680><c> would</c><00:40:07.839><c> never</c><00:40:08.079><c> be</c><00:40:08.160><c> able</c><00:40:08.320><c> to</c><00:40:08.480><c> tidy</c><00:40:08.880><c> up</c><00:40:09.599><c> uh</c>

00:40:09.750 --> 00:40:09.760 align:start position:0%
NPI would never be able to tidy up uh
 

00:40:09.760 --> 00:40:12.470 align:start position:0%
NPI would never be able to tidy up uh
the<00:40:10.079><c> sub</c><00:40:10.480><c> all</c><00:40:10.720><c> of</c><00:40:10.880><c> the</c><00:40:11.280><c> uh</c><00:40:11.520><c> free</c><00:40:11.760><c> the</c><00:40:12.000><c> resources</c>

00:40:12.470 --> 00:40:12.480 align:start position:0%
the sub all of the uh free the resources
 

00:40:12.480 --> 00:40:14.310 align:start position:0%
the sub all of the uh free the resources
associated<00:40:13.040><c> with</c><00:40:13.280><c> these</c><00:40:13.839><c> ongoing</c>

00:40:14.310 --> 00:40:14.320 align:start position:0%
associated with these ongoing
 

00:40:14.320 --> 00:40:16.630 align:start position:0%
associated with these ongoing
communications.<00:40:15.599><c> Um</c><00:40:16.000><c> and</c><00:40:16.240><c> going</c><00:40:16.400><c> back</c><00:40:16.480><c> to</c>

00:40:16.630 --> 00:40:16.640 align:start position:0%
communications. Um and going back to
 

00:40:16.640 --> 00:40:18.069 align:start position:0%
communications. Um and going back to
exactly<00:40:16.880><c> what</c><00:40:17.040><c> Yousef</c><00:40:17.440><c> said</c><00:40:17.599><c> right</c><00:40:17.760><c> at</c><00:40:17.920><c> the</c>

00:40:18.069 --> 00:40:18.079 align:start position:0%
exactly what Yousef said right at the
 

00:40:18.079 --> 00:40:20.870 align:start position:0%
exactly what Yousef said right at the
start,<00:40:18.880><c> why</c><00:40:19.119><c> use</c><00:40:19.359><c> non-blocking</c><00:40:19.920><c> here</c><00:40:20.079><c> at</c><00:40:20.240><c> all.</c>

00:40:20.870 --> 00:40:20.880 align:start position:0%
start, why use non-blocking here at all.
 

00:40:20.880 --> 00:40:22.950 align:start position:0%
start, why use non-blocking here at all.
Okay.<00:40:21.440><c> So,</c><00:40:21.680><c> you</c><00:40:21.839><c> know,</c><00:40:22.079><c> again,</c><00:40:22.480><c> people</c><00:40:22.720><c> tend</c>

00:40:22.950 --> 00:40:22.960 align:start position:0%
Okay. So, you know, again, people tend
 

00:40:22.960 --> 00:40:24.950 align:start position:0%
Okay. So, you know, again, people tend
to<00:40:23.040><c> overuse</c><00:40:23.599><c> non-blocking</c><00:40:24.400><c> not</c><00:40:24.560><c> need</c><00:40:24.720><c> for</c>

00:40:24.950 --> 00:40:24.960 align:start position:0%
to overuse non-blocking not need for
 

00:40:24.960 --> 00:40:26.150 align:start position:0%
to overuse non-blocking not need for
simple<00:40:25.119><c> pieces</c><00:40:25.359><c> of</c><00:40:25.440><c> code</c><00:40:25.680><c> like</c><00:40:25.920><c> of</c><00:40:26.000><c> course</c>

00:40:26.150 --> 00:40:26.160 align:start position:0%
simple pieces of code like of course
 

00:40:26.160 --> 00:40:27.910 align:start position:0%
simple pieces of code like of course
here<00:40:26.320><c> you</c><00:40:26.480><c> should</c><00:40:26.640><c> really</c><00:40:26.800><c> do</c><00:40:26.960><c> a</c><00:40:27.119><c> broadcast.</c>

00:40:27.910 --> 00:40:27.920 align:start position:0%
here you should really do a broadcast.
 

00:40:27.920 --> 00:40:29.349 align:start position:0%
here you should really do a broadcast.
If<00:40:28.079><c> you</c><00:40:28.160><c> need</c><00:40:28.320><c> to</c><00:40:28.400><c> do</c><00:40:28.560><c> a</c><00:40:28.720><c> pattern</c><00:40:28.960><c> like</c><00:40:29.119><c> this</c>

00:40:29.349 --> 00:40:29.359 align:start position:0%
If you need to do a pattern like this
 

00:40:29.359 --> 00:40:30.390 align:start position:0%
If you need to do a pattern like this
which<00:40:29.599><c> couldn't</c><00:40:29.839><c> be</c><00:40:29.920><c> done</c><00:40:30.079><c> through</c><00:40:30.240><c> a</c>

00:40:30.390 --> 00:40:30.400 align:start position:0%
which couldn't be done through a
 

00:40:30.400 --> 00:40:32.390 align:start position:0%
which couldn't be done through a
broadcast,<00:40:31.200><c> you</c><00:40:31.440><c> could,</c><00:40:31.599><c> you</c><00:40:31.760><c> know,</c><00:40:32.000><c> avoid</c>

00:40:32.390 --> 00:40:32.400 align:start position:0%
broadcast, you could, you know, avoid
 

00:40:32.400 --> 00:40:33.990 align:start position:0%
broadcast, you could, you know, avoid
the<00:40:32.560><c> complication</c><00:40:32.960><c> of</c><00:40:33.119><c> non-blocking</c><00:40:33.760><c> unless</c>

00:40:33.990 --> 00:40:34.000 align:start position:0%
the complication of non-blocking unless
 

00:40:34.000 --> 00:40:35.829 align:start position:0%
the complication of non-blocking unless
it's<00:40:34.240><c> performance</c><00:40:34.720><c> critical.</c><00:40:35.280><c> So</c><00:40:35.440><c> you</c><00:40:35.680><c> will</c>

00:40:35.829 --> 00:40:35.839 align:start position:0%
it's performance critical. So you will
 

00:40:35.839 --> 00:40:37.349 align:start position:0%
it's performance critical. So you will
need<00:40:35.920><c> to</c><00:40:36.000><c> use</c><00:40:36.160><c> non-blocking</c><00:40:36.720><c> communications</c>

00:40:37.349 --> 00:40:37.359 align:start position:0%
need to use non-blocking communications
 

00:40:37.359 --> 00:40:39.990 align:start position:0%
need to use non-blocking communications
down<00:40:37.680><c> the</c><00:40:37.839><c> depth</c><00:40:38.079><c> of</c><00:40:38.320><c> your</c><00:40:38.480><c> code</c><00:40:39.280><c> for</c><00:40:39.599><c> halo</c>

00:40:39.990 --> 00:40:40.000 align:start position:0%
down the depth of your code for halo
 

00:40:40.000 --> 00:40:43.430 align:start position:0%
down the depth of your code for halo
swapping<00:40:40.400><c> and</c><00:40:40.720><c> things</c><00:40:40.880><c> like</c><00:40:41.119><c> that</c><00:40:42.320><c> for</c><00:40:43.040><c> for</c>

00:40:43.430 --> 00:40:43.440 align:start position:0%
swapping and things like that for for
 

00:40:43.440 --> 00:40:45.990 align:start position:0%
swapping and things like that for for
but<00:40:43.599><c> but</c><00:40:44.000><c> for</c><00:40:44.320><c> setup</c><00:40:44.960><c> at</c><00:40:45.200><c> the</c><00:40:45.359><c> start</c><00:40:45.599><c> and</c><00:40:45.760><c> then</c>

00:40:45.990 --> 00:40:46.000 align:start position:0%
but but for setup at the start and then
 

00:40:46.000 --> 00:40:47.990 align:start position:0%
but but for setup at the start and then
shut<00:40:46.160><c> down</c><00:40:46.400><c> at</c><00:40:46.560><c> the</c><00:40:46.640><c> end,</c><00:40:47.280><c> I</c><00:40:47.520><c> would</c><00:40:47.680><c> avoid</c>

00:40:47.990 --> 00:40:48.000 align:start position:0%
shut down at the end, I would avoid
 

00:40:48.000 --> 00:40:49.270 align:start position:0%
shut down at the end, I would avoid
using<00:40:48.240><c> non-blocking</c><00:40:48.800><c> unless</c><00:40:49.119><c> it's</c>

00:40:49.270 --> 00:40:49.280 align:start position:0%
using non-blocking unless it's
 

00:40:49.280 --> 00:40:51.589 align:start position:0%
using non-blocking unless it's
absolutely<00:40:49.680><c> necessary.</c>

00:40:51.589 --> 00:40:51.599 align:start position:0%
absolutely necessary.
 

00:40:51.599 --> 00:40:54.069 align:start position:0%
absolutely necessary.
Okay.

00:40:54.069 --> 00:40:54.079 align:start position:0%
Okay.
 

00:40:54.079 --> 00:40:57.990 align:start position:0%
Okay.
Um<00:40:54.800><c> so</c><00:40:55.520><c> okay</c><00:40:56.000><c> uh</c><00:40:56.160><c> debugging</c><00:40:57.200><c> I</c><00:40:57.440><c> don't</c><00:40:57.599><c> want</c><00:40:57.760><c> to</c>

00:40:57.990 --> 00:40:58.000 align:start position:0%
Um so okay uh debugging I don't want to
 

00:40:58.000 --> 00:41:00.390 align:start position:0%
Um so okay uh debugging I don't want to
maybe<00:40:58.720><c> um</c>

00:41:00.390 --> 00:41:00.400 align:start position:0%
maybe um
 

00:41:00.400 --> 00:41:04.470 align:start position:0%
maybe um
uh<00:41:01.280><c> labor</c><00:41:01.760><c> this</c><00:41:01.920><c> point</c><00:41:02.240><c> but</c><00:41:02.640><c> I</c><00:41:02.960><c> think</c><00:41:03.040><c> that</c><00:41:04.240><c> um</c>

00:41:04.470 --> 00:41:04.480 align:start position:0%
uh labor this point but I think that um
 

00:41:04.480 --> 00:41:07.430 align:start position:0%
uh labor this point but I think that um
what<00:41:04.720><c> I</c><00:41:04.880><c> would</c><00:41:05.119><c> say</c><00:41:05.280><c> is</c><00:41:05.440><c> that</c><00:41:06.000><c> um</c><00:41:06.720><c> debugging</c><00:41:07.280><c> is</c>

00:41:07.430 --> 00:41:07.440 align:start position:0%
what I would say is that um debugging is
 

00:41:07.440 --> 00:41:10.150 align:start position:0%
what I would say is that um debugging is
hard.<00:41:08.400><c> Parallel</c><00:41:08.880><c> programs</c><00:41:09.359><c> are</c><00:41:09.520><c> more</c>

00:41:10.150 --> 00:41:10.160 align:start position:0%
hard. Parallel programs are more
 

00:41:10.160 --> 00:41:12.630 align:start position:0%
hard. Parallel programs are more
debugging<00:41:10.720><c> any</c><00:41:10.960><c> program</c><00:41:11.200><c> is</c><00:41:11.440><c> hard.</c><00:41:12.079><c> parallel</c>

00:41:12.630 --> 00:41:12.640 align:start position:0%
debugging any program is hard. parallel
 

00:41:12.640 --> 00:41:14.069 align:start position:0%
debugging any program is hard. parallel
programs<00:41:13.040><c> are</c><00:41:13.200><c> more</c><00:41:13.440><c> complicated</c><00:41:13.839><c> than</c>

00:41:14.069 --> 00:41:14.079 align:start position:0%
programs are more complicated than
 

00:41:14.079 --> 00:41:16.710 align:start position:0%
programs are more complicated than
serial<00:41:14.480><c> programs</c><00:41:15.119><c> and</c><00:41:15.359><c> therefore</c><00:41:16.160><c> the</c><00:41:16.480><c> so</c><00:41:16.720><c> so</c>

00:41:16.710 --> 00:41:16.720 align:start position:0%
serial programs and therefore the so so
 

00:41:16.720 --> 00:41:20.870 align:start position:0%
serial programs and therefore the so so
so<00:41:17.200><c> writing</c><00:41:17.680><c> good</c><00:41:18.640><c> maintainable</c><00:41:20.000><c> verifiable</c>

00:41:20.870 --> 00:41:20.880 align:start position:0%
so writing good maintainable verifiable
 

00:41:20.880 --> 00:41:23.109 align:start position:0%
so writing good maintainable verifiable
code<00:41:21.280><c> is</c><00:41:21.599><c> even</c><00:41:21.920><c> more</c><00:41:22.240><c> important</c><00:41:22.480><c> in</c><00:41:22.720><c> parallel</c>

00:41:23.109 --> 00:41:23.119 align:start position:0%
code is even more important in parallel
 

00:41:23.119 --> 00:41:25.589 align:start position:0%
code is even more important in parallel
program<00:41:23.520><c> is</c><00:41:23.680><c> in</c><00:41:23.839><c> serial</c><00:41:24.240><c> programming</c><00:41:25.200><c> so</c><00:41:25.440><c> I</c>

00:41:25.589 --> 00:41:25.599 align:start position:0%
program is in serial programming so I
 

00:41:25.599 --> 00:41:27.349 align:start position:0%
program is in serial programming so I
think<00:41:25.760><c> the</c><00:41:25.920><c> major</c><00:41:26.240><c> mistake</c><00:41:26.560><c> that</c><00:41:26.800><c> people</c><00:41:27.119><c> make</c>

00:41:27.349 --> 00:41:27.359 align:start position:0%
think the major mistake that people make
 

00:41:27.359 --> 00:41:29.349 align:start position:0%
think the major mistake that people make
is<00:41:27.599><c> they</c><00:41:28.079><c> whenever</c><00:41:28.480><c> their</c><00:41:28.720><c> program</c><00:41:29.040><c> goes</c>

00:41:29.349 --> 00:41:29.359 align:start position:0%
is they whenever their program goes
 

00:41:29.359 --> 00:41:32.150 align:start position:0%
is they whenever their program goes
wrong<00:41:30.000><c> they</c><00:41:30.240><c> assume</c><00:41:30.480><c> it's</c><00:41:30.720><c> a</c><00:41:30.880><c> parallel</c><00:41:31.280><c> bug</c>

00:41:32.150 --> 00:41:32.160 align:start position:0%
wrong they assume it's a parallel bug
 

00:41:32.160 --> 00:41:34.470 align:start position:0%
wrong they assume it's a parallel bug
people<00:41:32.400><c> say</c><00:41:32.640><c> my</c><00:41:32.960><c> program</c><00:41:33.200><c> goes</c><00:41:33.440><c> wrong</c><00:41:33.599><c> on</c><00:41:33.760><c> 256</c>

00:41:34.470 --> 00:41:34.480 align:start position:0%
people say my program goes wrong on 256
 

00:41:34.480 --> 00:41:36.390 align:start position:0%
people say my program goes wrong on 256
processors<00:41:35.280><c> there's</c><00:41:35.520><c> some</c><00:41:36.000><c> well</c><00:41:36.160><c> maybe</c>

00:41:36.390 --> 00:41:36.400 align:start position:0%
processors there's some well maybe
 

00:41:36.400 --> 00:41:37.910 align:start position:0%
processors there's some well maybe
you've<00:41:36.560><c> just</c><00:41:36.720><c> made</c><00:41:36.800><c> a</c><00:41:36.960><c> good</c><00:41:37.119><c> oldfashioned</c><00:41:37.680><c> bug</c>

00:41:37.910 --> 00:41:37.920 align:start position:0%
you've just made a good oldfashioned bug
 

00:41:37.920 --> 00:41:40.710 align:start position:0%
you've just made a good oldfashioned bug
okay<00:41:38.160><c> maybe</c><00:41:38.319><c> it's</c><00:41:38.400><c> just</c><00:41:38.480><c> a</c><00:41:38.640><c> bug</c><00:41:38.880><c> bug</c><00:41:39.520><c> so</c><00:41:40.400><c> check</c>

00:41:40.710 --> 00:41:40.720 align:start position:0%
okay maybe it's just a bug bug so check
 

00:41:40.720 --> 00:41:42.550 align:start position:0%
okay maybe it's just a bug bug so check
you<00:41:40.880><c> haven't</c><00:41:41.040><c> broken</c><00:41:41.359><c> the</c><00:41:41.440><c> serial</c><00:41:42.160><c> Check</c><00:41:42.400><c> you</c>

00:41:42.550 --> 00:41:42.560 align:start position:0%
you haven't broken the serial Check you
 

00:41:42.560 --> 00:41:44.309 align:start position:0%
you haven't broken the serial Check you
haven't<00:41:42.720><c> made</c><00:41:42.880><c> a</c><00:41:43.040><c> logic</c><00:41:43.359><c> error</c><00:41:43.520><c> in</c><00:41:43.680><c> your</c><00:41:43.920><c> in</c><00:41:44.079><c> in</c>

00:41:44.309 --> 00:41:44.319 align:start position:0%
haven't made a logic error in your in in
 

00:41:44.319 --> 00:41:46.150 align:start position:0%
haven't made a logic error in your in in
your<00:41:44.480><c> algorithm.</c>

00:41:46.150 --> 00:41:46.160 align:start position:0%
your algorithm.
 

00:41:46.160 --> 00:41:47.750 align:start position:0%
your algorithm.
Then<00:41:46.400><c> run</c><00:41:46.560><c> the</c><00:41:46.720><c> parallelo</c><00:41:47.280><c> with</c><00:41:47.359><c> P</c><00:41:47.520><c> equals</c>

00:41:47.750 --> 00:41:47.760 align:start position:0%
Then run the parallelo with P equals
 

00:41:47.760 --> 00:41:48.950 align:start position:0%
Then run the parallelo with P equals
one,<00:41:48.000><c> then</c><00:41:48.160><c> run</c><00:41:48.319><c> a</c><00:41:48.480><c> small</c><00:41:48.720><c> number</c><00:41:48.880><c> of</c>

00:41:48.950 --> 00:41:48.960 align:start position:0%
one, then run a small number of
 

00:41:48.960 --> 00:41:51.270 align:start position:0%
one, then run a small number of
processes.<00:41:49.680><c> It's</c><00:41:50.000><c> very</c><00:41:50.480><c> it's</c><00:41:50.800><c> relatively</c>

00:41:51.270 --> 00:41:51.280 align:start position:0%
processes. It's very it's relatively
 

00:41:51.280 --> 00:41:54.309 align:start position:0%
processes. It's very it's relatively
unusual<00:41:52.480><c> for</c><00:41:52.720><c> a</c><00:41:52.880><c> bug</c><00:41:53.119><c> to</c><00:41:53.359><c> manifest</c><00:41:53.760><c> itself</c>

00:41:54.309 --> 00:41:54.319 align:start position:0%
unusual for a bug to manifest itself
 

00:41:54.319 --> 00:41:56.710 align:start position:0%
unusual for a bug to manifest itself
only<00:41:54.640><c> at</c><00:41:54.800><c> very</c><00:41:55.040><c> large</c><00:41:55.280><c> numbers</c><00:41:55.520><c> of</c><00:41:55.680><c> processes.</c>

00:41:56.710 --> 00:41:56.720 align:start position:0%
only at very large numbers of processes.
 

00:41:56.720 --> 00:41:58.710 align:start position:0%
only at very large numbers of processes.
Typically,<00:41:57.359><c> if</c><00:41:57.599><c> there's</c><00:41:58.000><c> a</c><00:41:58.160><c> bug</c><00:41:58.400><c> in</c><00:41:58.560><c> your</c>

00:41:58.710 --> 00:41:58.720 align:start position:0%
Typically, if there's a bug in your
 

00:41:58.720 --> 00:42:00.950 align:start position:0%
Typically, if there's a bug in your
program,<00:41:59.119><c> it</c><00:41:59.359><c> will</c><00:41:59.520><c> manifest</c><00:41:59.920><c> itself</c><00:42:00.400><c> on</c><00:42:00.720><c> a</c>

00:42:00.950 --> 00:42:00.960 align:start position:0%
program, it will manifest itself on a
 

00:42:00.960 --> 00:42:02.950 align:start position:0%
program, it will manifest itself on a
handful<00:42:01.280><c> of</c><00:42:01.520><c> processes</c><00:42:02.240><c> and</c><00:42:02.400><c> then</c><00:42:02.640><c> it</c><00:42:02.800><c> is</c>

00:42:02.950 --> 00:42:02.960 align:start position:0%
handful of processes and then it is
 

00:42:02.960 --> 00:42:04.710 align:start position:0%
handful of processes and then it is
debugable.<00:42:03.599><c> So</c><00:42:03.839><c> the</c><00:42:04.079><c> first</c><00:42:04.240><c> thing</c><00:42:04.400><c> you</c><00:42:04.560><c> should</c>

00:42:04.710 --> 00:42:04.720 align:start position:0%
debugable. So the first thing you should
 

00:42:04.720 --> 00:42:07.030 align:start position:0%
debugable. So the first thing you should
do<00:42:04.800><c> if</c><00:42:04.960><c> you</c><00:42:05.119><c> find</c><00:42:05.280><c> a</c><00:42:05.440><c> bug</c><00:42:05.599><c> in</c><00:42:05.760><c> your</c><00:42:05.920><c> program</c><00:42:06.560><c> is</c>

00:42:07.030 --> 00:42:07.040 align:start position:0%
do if you find a bug in your program is
 

00:42:07.040 --> 00:42:09.030 align:start position:0%
do if you find a bug in your program is
find<00:42:07.359><c> the</c><00:42:07.599><c> minimum</c><00:42:07.920><c> number</c><00:42:08.160><c> of</c><00:42:08.319><c> processes</c><00:42:08.880><c> on</c>

00:42:09.030 --> 00:42:09.040 align:start position:0%
find the minimum number of processes on
 

00:42:09.040 --> 00:42:11.349 align:start position:0%
find the minimum number of processes on
which<00:42:09.359><c> that</c><00:42:09.760><c> bug</c><00:42:10.240><c> or</c><00:42:10.480><c> an</c><00:42:10.640><c> equivalent</c><00:42:11.040><c> bug</c>

00:42:11.349 --> 00:42:11.359 align:start position:0%
which that bug or an equivalent bug
 

00:42:11.359 --> 00:42:14.230 align:start position:0%
which that bug or an equivalent bug
manifests<00:42:11.920><c> itself</c><00:42:12.800><c> and</c><00:42:13.040><c> debug.</c><00:42:13.599><c> So</c><00:42:13.760><c> it</c><00:42:14.000><c> really</c>

00:42:14.230 --> 00:42:14.240 align:start position:0%
manifests itself and debug. So it really
 

00:42:14.240 --> 00:42:17.109 align:start position:0%
manifests itself and debug. So it really
is<00:42:14.480><c> almost</c><00:42:14.800><c> impossible</c><00:42:15.280><c> to</c><00:42:15.520><c> debug</c><00:42:16.560><c> on</c><00:42:16.880><c> large</c>

00:42:17.109 --> 00:42:17.119 align:start position:0%
is almost impossible to debug on large
 

00:42:17.119 --> 00:42:18.710 align:start position:0%
is almost impossible to debug on large
numbers<00:42:17.359><c> of</c><00:42:17.520><c> process.</c><00:42:18.000><c> Yes,</c><00:42:18.319><c> parallel</c>

00:42:18.710 --> 00:42:18.720 align:start position:0%
numbers of process. Yes, parallel
 

00:42:18.720 --> 00:42:20.870 align:start position:0%
numbers of process. Yes, parallel
debuggers<00:42:19.280><c> exist.</c><00:42:19.839><c> This</c><00:42:20.000><c> is</c><00:42:20.000><c> a</c><00:42:20.160><c> very</c><00:42:20.319><c> old</c><00:42:20.640><c> lady</c>

00:42:20.870 --> 00:42:20.880 align:start position:0%
debuggers exist. This is a very old lady
 

00:42:20.880 --> 00:42:24.870 align:start position:0%
debuggers exist. This is a very old lady
DDT.<00:42:21.440><c> It's</c><00:42:21.599><c> now</c><00:42:21.760><c> called</c><00:42:22.240><c> um</c><00:42:22.720><c> ARM</c><00:42:23.119><c> Forge.</c>

00:42:24.870 --> 00:42:24.880 align:start position:0%
DDT. It's now called um ARM Forge.
 

00:42:24.880 --> 00:42:26.710 align:start position:0%
DDT. It's now called um ARM Forge.
However,<00:42:25.440><c> debuggers</c><00:42:26.000><c> are</c><00:42:26.160><c> powerful</c><00:42:26.400><c> tools,</c>

00:42:26.710 --> 00:42:26.720 align:start position:0%
However, debuggers are powerful tools,
 

00:42:26.720 --> 00:42:29.109 align:start position:0%
However, debuggers are powerful tools,
but<00:42:26.880><c> they're</c><00:42:27.119><c> very</c><00:42:27.359><c> complicated</c><00:42:27.839><c> to</c><00:42:28.079><c> learn.</c>

00:42:29.109 --> 00:42:29.119 align:start position:0%
but they're very complicated to learn.
 

00:42:29.119 --> 00:42:33.270 align:start position:0%
but they're very complicated to learn.
um<00:42:29.440><c> you</c><00:42:29.680><c> know</c><00:42:30.240><c> um</c><00:42:31.440><c> um</c>

00:42:33.270 --> 00:42:33.280 align:start position:0%
um you know um um
 

00:42:33.280 --> 00:42:35.670 align:start position:0%
um you know um um
old-fashioned<00:42:34.160><c> verification</c><00:42:35.119><c> printing</c><00:42:35.520><c> is</c>

00:42:35.670 --> 00:42:35.680 align:start position:0%
old-fashioned verification printing is
 

00:42:35.680 --> 00:42:38.230 align:start position:0%
old-fashioned verification printing is
is<00:42:36.000><c> still</c><00:42:36.160><c> a</c><00:42:36.319><c> very</c><00:42:36.560><c> useful</c><00:42:36.880><c> technique</c><00:42:37.680><c> but</c><00:42:38.079><c> it</c>

00:42:38.230 --> 00:42:38.240 align:start position:0%
is still a very useful technique but it
 

00:42:38.240 --> 00:42:41.990 align:start position:0%
is still a very useful technique but it
is<00:42:38.400><c> only</c><00:42:38.880><c> it's</c><00:42:39.119><c> only</c><00:42:39.359><c> possible</c><00:42:39.839><c> to</c><00:42:40.079><c> do</c>

00:42:41.990 --> 00:42:42.000 align:start position:0%
is only it's only possible to do
 

00:42:42.000 --> 00:42:43.750 align:start position:0%
is only it's only possible to do
in<00:42:42.240><c> every</c><00:42:42.400><c> process</c><00:42:42.720><c> if</c><00:42:42.880><c> you</c><00:42:43.280><c> if</c><00:42:43.520><c> you're</c>

00:42:43.750 --> 00:42:43.760 align:start position:0%
in every process if you if you're
 

00:42:43.760 --> 00:42:45.510 align:start position:0%
in every process if you if you're
running<00:42:43.920><c> on</c><00:42:44.079><c> a</c><00:42:44.240><c> small</c><00:42:44.480><c> number</c><00:42:44.640><c> of</c><00:42:44.720><c> processes</c>

00:42:45.510 --> 00:42:45.520 align:start position:0%
running on a small number of processes
 

00:42:45.520 --> 00:42:46.950 align:start position:0%
running on a small number of processes
and<00:42:45.680><c> so</c><00:42:45.839><c> if</c><00:42:46.079><c> you're</c><00:42:46.240><c> developing</c><00:42:46.560><c> your</c><00:42:46.800><c> own</c>

00:42:46.950 --> 00:42:46.960 align:start position:0%
and so if you're developing your own
 

00:42:46.960 --> 00:42:50.790 align:start position:0%
and so if you're developing your own
code<00:42:47.760><c> um</c><00:42:49.040><c> um</c><00:42:49.599><c> I</c><00:42:49.920><c> would</c><00:42:50.000><c> say</c><00:42:50.160><c> that</c><00:42:50.400><c> you</c><00:42:50.560><c> know</c>

00:42:50.790 --> 00:42:50.800 align:start position:0%
code um um I would say that you know
 

00:42:50.800 --> 00:42:53.430 align:start position:0%
code um um I would say that you know
that<00:42:50.960><c> the</c><00:42:51.440><c> that</c><00:42:51.680><c> that</c><00:42:52.160><c> actually</c><00:42:52.880><c> often</c><00:42:53.359><c> the</c>

00:42:53.430 --> 00:42:53.440 align:start position:0%
that the that that actually often the
 

00:42:53.440 --> 00:42:55.670 align:start position:0%
that the that that actually often the
debugger<00:42:53.920><c> is</c><00:42:54.079><c> is</c><00:42:54.160><c> is</c>

00:42:55.670 --> 00:42:55.680 align:start position:0%
debugger is is is
 

00:42:55.680 --> 00:42:58.309 align:start position:0%
debugger is is is
not<00:42:56.480><c> it's</c><00:42:56.720><c> not</c><00:42:56.800><c> a</c><00:42:56.960><c> panacea</c><00:42:57.680><c> okay</c><00:42:57.839><c> so</c><00:42:58.079><c> someone's</c>

00:42:58.309 --> 00:42:58.319 align:start position:0%
not it's not a panacea okay so someone's
 

00:42:58.319 --> 00:43:01.750 align:start position:0%
not it's not a panacea okay so someone's
asked<00:42:58.640><c> question</c><00:42:59.040><c> here.</c>

00:43:01.750 --> 00:43:01.760 align:start position:0%
asked question here.
 

00:43:01.760 --> 00:43:06.470 align:start position:0%
asked question here.
So<00:43:02.160><c> Alexa</c><00:43:03.359><c> polish.</c><00:43:04.000><c> So</c><00:43:04.720><c> um</c>

00:43:06.470 --> 00:43:06.480 align:start position:0%
So Alexa polish. So um
 

00:43:06.480 --> 00:43:09.829 align:start position:0%
So Alexa polish. So um
so<00:43:06.800><c> was</c><00:43:07.040><c> that</c><00:43:07.520><c> you?</c><00:43:08.240><c> Well,</c><00:43:08.560><c> yes.</c><00:43:08.960><c> So</c><00:43:09.280><c> so</c><00:43:09.280><c> so</c>

00:43:09.829 --> 00:43:09.839 align:start position:0%
so was that you? Well, yes. So so so
 

00:43:09.839 --> 00:43:12.390 align:start position:0%
so was that you? Well, yes. So so so
what's<00:43:10.319><c> probably</c><00:43:10.800><c> happening</c><00:43:11.359><c> here,</c><00:43:11.760><c> Mark,</c><00:43:12.160><c> is</c>

00:43:12.390 --> 00:43:12.400 align:start position:0%
what's probably happening here, Mark, is
 

00:43:12.400 --> 00:43:15.990 align:start position:0%
what's probably happening here, Mark, is
that<00:43:13.200><c> um</c><00:43:14.400><c> that</c>

00:43:15.990 --> 00:43:16.000 align:start position:0%
that um that
 

00:43:16.000 --> 00:43:18.150 align:start position:0%
that um that
um

00:43:18.150 --> 00:43:18.160 align:start position:0%
um
 

00:43:18.160 --> 00:43:19.829 align:start position:0%
um
that<00:43:18.400><c> there's</c><00:43:18.640><c> a</c><00:43:18.720><c> load</c><00:43:19.040><c> imbalance.</c><00:43:19.520><c> In</c><00:43:19.680><c> other</c>

00:43:19.829 --> 00:43:19.839 align:start position:0%
that there's a load imbalance. In other
 

00:43:19.839 --> 00:43:21.990 align:start position:0%
that there's a load imbalance. In other
words,<00:43:20.720><c> you've</c><00:43:20.960><c> issued</c><00:43:21.280><c> a</c><00:43:21.359><c> lot</c><00:43:21.520><c> of</c><00:43:21.599><c> receipts.</c>

00:43:21.990 --> 00:43:22.000 align:start position:0%
words, you've issued a lot of receipts.
 

00:43:22.000 --> 00:43:24.230 align:start position:0%
words, you've issued a lot of receipts.
You're<00:43:22.160><c> expecting</c><00:43:22.560><c> data</c><00:43:22.880><c> to</c><00:43:23.040><c> come</c><00:43:23.200><c> in.</c><00:43:23.680><c> Okay?</c>

00:43:24.230 --> 00:43:24.240 align:start position:0%
You're expecting data to come in. Okay?
 

00:43:24.240 --> 00:43:26.390 align:start position:0%
You're expecting data to come in. Okay?
So<00:43:24.480><c> so</c><00:43:24.480><c> so</c><00:43:24.960><c> issuing</c><00:43:25.280><c> the</c><00:43:25.440><c> receipts</c><00:43:25.839><c> takes</c><00:43:26.079><c> no</c>

00:43:26.390 --> 00:43:26.400 align:start position:0%
So so so issuing the receipts takes no
 

00:43:26.400 --> 00:43:28.470 align:start position:0%
So so so issuing the receipts takes no
time.<00:43:26.800><c> Okay?</c><00:43:27.520><c> When</c><00:43:27.760><c> you</c><00:43:27.839><c> issue</c><00:43:28.079><c> a</c><00:43:28.240><c> receipt,</c>

00:43:28.470 --> 00:43:28.480 align:start position:0%
time. Okay? When you issue a receipt,
 

00:43:28.480 --> 00:43:29.670 align:start position:0%
time. Okay? When you issue a receipt,
you're<00:43:28.640><c> saying</c><00:43:28.880><c> I</c><00:43:29.040><c> would</c><00:43:29.119><c> like</c><00:43:29.280><c> to</c><00:43:29.440><c> receive</c>

00:43:29.670 --> 00:43:29.680 align:start position:0%
you're saying I would like to receive
 

00:43:29.680 --> 00:43:31.270 align:start position:0%
you're saying I would like to receive
some<00:43:29.920><c> data</c><00:43:30.160><c> sometime</c><00:43:30.560><c> in</c><00:43:30.720><c> the</c><00:43:30.880><c> future.</c><00:43:31.119><c> When</c>

00:43:31.270 --> 00:43:31.280 align:start position:0%
some data sometime in the future. When
 

00:43:31.280 --> 00:43:34.470 align:start position:0%
some data sometime in the future. When
it<00:43:31.440><c> comes</c><00:43:31.680><c> in,</c><00:43:31.839><c> put</c><00:43:32.000><c> it</c><00:43:32.160><c> here.</c><00:43:32.800><c> So</c><00:43:32.960><c> the</c><00:43:33.200><c> receive</c>

00:43:34.470 --> 00:43:34.480 align:start position:0%
it comes in, put it here. So the receive
 

00:43:34.480 --> 00:43:39.030 align:start position:0%
it comes in, put it here. So the receive
will<00:43:35.680><c> um</c><00:43:36.240><c> not</c><00:43:36.560><c> take</c><00:43:36.800><c> any</c><00:43:37.040><c> time.</c><00:43:37.680><c> However,</c><00:43:38.880><c> when</c>

00:43:39.030 --> 00:43:39.040 align:start position:0%
will um not take any time. However, when
 

00:43:39.040 --> 00:43:40.630 align:start position:0%
will um not take any time. However, when
you<00:43:39.200><c> do</c><00:43:39.280><c> a</c><00:43:39.440><c> wait</c><00:43:39.680><c> any</c><00:43:39.920><c> what</c><00:43:40.000><c> you</c><00:43:40.079><c> do</c><00:43:40.240><c> say,</c><00:43:40.480><c> okay,</c>

00:43:40.630 --> 00:43:40.640 align:start position:0%
you do a wait any what you do say, okay,
 

00:43:40.640 --> 00:43:42.470 align:start position:0%
you do a wait any what you do say, okay,
I'm<00:43:40.880><c> going</c><00:43:40.960><c> to</c><00:43:41.040><c> wait</c><00:43:41.280><c> until</c><00:43:41.680><c> some</c><00:43:41.920><c> data</c><00:43:42.240><c> is</c>

00:43:42.470 --> 00:43:42.480 align:start position:0%
I'm going to wait until some data is
 

00:43:42.480 --> 00:43:44.470 align:start position:0%
I'm going to wait until some data is
received.<00:43:43.119><c> Okay.</c><00:43:43.599><c> And</c><00:43:43.760><c> so</c><00:43:43.839><c> if</c><00:43:44.000><c> it's</c><00:43:44.160><c> showing</c><00:43:44.400><c> a</c>

00:43:44.470 --> 00:43:44.480 align:start position:0%
received. Okay. And so if it's showing a
 

00:43:44.480 --> 00:43:45.670 align:start position:0%
received. Okay. And so if it's showing a
long<00:43:44.640><c> time</c><00:43:44.720><c> there,</c><00:43:44.960><c> it's</c><00:43:45.200><c> just</c><00:43:45.280><c> showing</c><00:43:45.520><c> that</c>

00:43:45.670 --> 00:43:45.680 align:start position:0%
long time there, it's just showing that
 

00:43:45.680 --> 00:43:47.030 align:start position:0%
long time there, it's just showing that
there's<00:43:45.920><c> a</c><00:43:46.000><c> load</c><00:43:46.240><c> imbalance.</c><00:43:46.720><c> That</c><00:43:46.880><c> means</c>

00:43:47.030 --> 00:43:47.040 align:start position:0%
there's a load imbalance. That means
 

00:43:47.040 --> 00:43:48.550 align:start position:0%
there's a load imbalance. That means
that<00:43:47.280><c> the</c><00:43:47.359><c> at</c><00:43:47.520><c> the</c><00:43:47.680><c> time</c><00:43:47.839><c> you're</c><00:43:48.160><c> waiting</c><00:43:48.480><c> for</c>

00:43:48.550 --> 00:43:48.560 align:start position:0%
that the at the time you're waiting for
 

00:43:48.560 --> 00:43:53.109 align:start position:0%
that the at the time you're waiting for
the<00:43:48.720><c> data,</c><00:43:49.040><c> it</c><00:43:49.200><c> has</c><00:43:49.359><c> not</c><00:43:49.440><c> been</c><00:43:49.599><c> sent</c><00:43:49.920><c> yet.</c><00:43:50.800><c> So,</c>

00:43:53.109 --> 00:43:53.119 align:start position:0%
the data, it has not been sent yet. So,
 

00:43:53.119 --> 00:43:55.750 align:start position:0%
the data, it has not been sent yet. So,
so<00:43:53.599><c> if</c><00:43:53.760><c> you'd</c><00:43:54.000><c> issued</c><00:43:54.880><c> not</c><00:43:55.119><c> if</c><00:43:55.280><c> you'd</c><00:43:55.440><c> used</c><00:43:55.599><c> a</c>

00:43:55.750 --> 00:43:55.760 align:start position:0%
so if you'd issued not if you'd used a
 

00:43:55.760 --> 00:43:58.309 align:start position:0%
so if you'd issued not if you'd used a
blocking<00:43:56.240><c> receive,</c><00:43:57.280><c> if</c><00:43:57.440><c> you</c><00:43:57.520><c> just</c><00:43:57.760><c> did</c><00:43:57.839><c> NPI</c>

00:43:58.309 --> 00:43:58.319 align:start position:0%
blocking receive, if you just did NPI
 

00:43:58.319 --> 00:44:00.390 align:start position:0%
blocking receive, if you just did NPI
receive,<00:43:58.960><c> the</c><00:43:59.200><c> profiler</c><00:43:59.760><c> would</c><00:43:59.920><c> have</c><00:44:00.079><c> showed</c>

00:44:00.390 --> 00:44:00.400 align:start position:0%
receive, the profiler would have showed
 

00:44:00.400 --> 00:44:03.030 align:start position:0%
receive, the profiler would have showed
a<00:44:00.560><c> lot</c><00:44:00.720><c> of</c><00:44:00.800><c> time</c><00:44:00.960><c> in</c><00:44:01.200><c> the</c><00:44:01.280><c> receive</c><00:44:02.160><c> waiting</c><00:44:02.640><c> for</c>

00:44:03.030 --> 00:44:03.040 align:start position:0%
a lot of time in the receive waiting for
 

00:44:03.040 --> 00:44:05.670 align:start position:0%
a lot of time in the receive waiting for
the<00:44:03.280><c> data</c><00:44:03.599><c> to</c><00:44:03.760><c> come</c><00:44:03.920><c> in</c><00:44:04.560><c> here.</c><00:44:05.040><c> Issuing</c><00:44:05.440><c> the</c>

00:44:05.670 --> 00:44:05.680 align:start position:0%
the data to come in here. Issuing the
 

00:44:05.680 --> 00:44:07.510 align:start position:0%
the data to come in here. Issuing the
receive<00:44:06.000><c> is</c><00:44:06.240><c> instantaneous</c><00:44:07.040><c> because</c><00:44:07.280><c> you're</c>

00:44:07.510 --> 00:44:07.520 align:start position:0%
receive is instantaneous because you're
 

00:44:07.520 --> 00:44:09.589 align:start position:0%
receive is instantaneous because you're
saying,<00:44:08.000><c> you</c><00:44:08.160><c> know,</c><00:44:08.720><c> sometime</c><00:44:09.040><c> in</c><00:44:09.200><c> the</c><00:44:09.359><c> future</c>

00:44:09.589 --> 00:44:09.599 align:start position:0%
saying, you know, sometime in the future
 

00:44:09.599 --> 00:44:11.030 align:start position:0%
saying, you know, sometime in the future
the<00:44:09.839><c> data</c><00:44:10.000><c> is</c><00:44:10.160><c> going</c><00:44:10.240><c> to</c><00:44:10.319><c> arrive,</c><00:44:10.720><c> put</c><00:44:10.800><c> it</c>

00:44:11.030 --> 00:44:11.040 align:start position:0%
the data is going to arrive, put it
 

00:44:11.040 --> 00:44:13.829 align:start position:0%
the data is going to arrive, put it
here.<00:44:11.680><c> But</c><00:44:11.760><c> it's</c><00:44:12.000><c> the</c><00:44:12.240><c> wait,</c><00:44:13.040><c> which</c><00:44:13.359><c> does</c><00:44:13.599><c> that</c>

00:44:13.829 --> 00:44:13.839 align:start position:0%
here. But it's the wait, which does that
 

00:44:13.839 --> 00:44:16.470 align:start position:0%
here. But it's the wait, which does that
make<00:44:14.000><c> sense?</c><00:44:15.119><c> So</c><00:44:15.280><c> that</c><00:44:15.440><c> that</c><00:44:15.760><c> should</c><00:44:16.000><c> so</c><00:44:16.240><c> so</c>

00:44:16.470 --> 00:44:16.480 align:start position:0%
make sense? So that that should so so
 

00:44:16.480 --> 00:44:18.309 align:start position:0%
make sense? So that that should so so
yes<00:44:16.800><c> spending</c><00:44:17.119><c> a</c><00:44:17.280><c> lot</c><00:44:17.359><c> of</c><00:44:17.520><c> time</c><00:44:17.599><c> in</c><00:44:17.839><c> weight</c><00:44:18.160><c> is</c>

00:44:18.309 --> 00:44:18.319 align:start position:0%
yes spending a lot of time in weight is
 

00:44:18.319 --> 00:44:20.230 align:start position:0%
yes spending a lot of time in weight is
not<00:44:18.480><c> unusual</c><00:44:19.040><c> but</c><00:44:19.280><c> it</c><00:44:19.440><c> means</c><00:44:19.680><c> that</c><00:44:19.920><c> there's</c><00:44:20.079><c> a</c>

00:44:20.230 --> 00:44:20.240 align:start position:0%
not unusual but it means that there's a
 

00:44:20.240 --> 00:44:21.670 align:start position:0%
not unusual but it means that there's a
load<00:44:20.400><c> imbalance.</c><00:44:20.800><c> It</c><00:44:20.960><c> means</c><00:44:21.040><c> that</c><00:44:21.200><c> you</c><00:44:21.520><c> that</c>

00:44:21.670 --> 00:44:21.680 align:start position:0%
load imbalance. It means that you that
 

00:44:21.680 --> 00:44:23.910 align:start position:0%
load imbalance. It means that you that
you<00:44:22.079><c> there</c><00:44:22.240><c> is</c><00:44:22.880><c> you</c><00:44:23.119><c> you're</c><00:44:23.359><c> saying</c><00:44:23.599><c> I'm</c><00:44:23.760><c> going</c>

00:44:23.910 --> 00:44:23.920 align:start position:0%
you there is you you're saying I'm going
 

00:44:23.920 --> 00:44:25.109 align:start position:0%
you there is you you're saying I'm going
to<00:44:24.000><c> wait</c><00:44:24.079><c> for</c><00:44:24.240><c> some</c><00:44:24.400><c> data</c><00:44:24.640><c> to</c><00:44:24.720><c> come</c><00:44:24.880><c> in</c><00:44:25.040><c> but</c>

00:44:25.109 --> 00:44:25.119 align:start position:0%
to wait for some data to come in but
 

00:44:25.119 --> 00:44:27.829 align:start position:0%
to wait for some data to come in but
it's<00:44:25.280><c> not</c><00:44:25.440><c> been</c><00:44:25.599><c> sent</c><00:44:25.839><c> yet.</c><00:44:27.200><c> Yeah</c><00:44:27.440><c> that's</c><00:44:27.680><c> a</c>

00:44:27.829 --> 00:44:27.839 align:start position:0%
it's not been sent yet. Yeah that's a
 

00:44:27.839 --> 00:44:31.190 align:start position:0%
it's not been sent yet. Yeah that's a
good<00:44:28.000><c> point.</c><00:44:28.240><c> Yeah.</c><00:44:29.440><c> Um</c>

00:44:31.190 --> 00:44:31.200 align:start position:0%
good point. Yeah. Um
 

00:44:31.200 --> 00:44:33.510 align:start position:0%
good point. Yeah. Um
so<00:44:31.440><c> wait</c><00:44:31.839><c> any</c><00:44:32.079><c> is</c><00:44:32.319><c> say</c><00:44:32.640><c> I</c><00:44:32.800><c> have</c><00:44:32.960><c> got</c><00:44:33.119><c> a</c><00:44:33.280><c> lot</c><00:44:33.359><c> of</c>

00:44:33.510 --> 00:44:33.520 align:start position:0%
so wait any is say I have got a lot of
 

00:44:33.520 --> 00:44:36.150 align:start position:0%
so wait any is say I have got a lot of
outstanding<00:44:34.079><c> non-blocking</c><00:44:34.720><c> receives</c><00:44:35.920><c> please</c>

00:44:36.150 --> 00:44:36.160 align:start position:0%
outstanding non-blocking receives please
 

00:44:36.160 --> 00:44:38.630 align:start position:0%
outstanding non-blocking receives please
wait<00:44:36.400><c> until</c><00:44:37.040><c> one</c><00:44:37.359><c> of</c><00:44:37.520><c> them</c><00:44:38.000><c> has</c><00:44:38.400><c> been</c>

00:44:38.630 --> 00:44:38.640 align:start position:0%
wait until one of them has been
 

00:44:38.640 --> 00:44:41.990 align:start position:0%
wait until one of them has been
completed<00:44:39.520><c> which</c><00:44:39.760><c> is</c><00:44:39.920><c> a</c><00:44:40.240><c> which</c><00:44:40.480><c> is</c><00:44:40.640><c> a</c><00:44:41.040><c> yeah</c>

00:44:41.990 --> 00:44:42.000 align:start position:0%
completed which is a which is a yeah
 

00:44:42.000 --> 00:44:43.510 align:start position:0%
completed which is a which is a yeah
okay

00:44:43.510 --> 00:44:43.520 align:start position:0%
okay
 

00:44:43.520 --> 00:44:48.230 align:start position:0%
okay
so<00:44:44.240><c> um</c><00:44:44.960><c> I</c><00:44:45.200><c> would</c><00:44:45.359><c> this</c><00:44:45.520><c> is</c><00:44:45.680><c> one</c><00:44:45.839><c> of</c><00:44:45.920><c> my</c><00:44:46.560><c> um</c>

00:44:48.230 --> 00:44:48.240 align:start position:0%
so um I would this is one of my um
 

00:44:48.240 --> 00:44:51.030 align:start position:0%
so um I would this is one of my um
bug<00:44:48.560><c> bears</c><00:44:48.960><c> but</c><00:44:49.440><c> um</c>

00:44:51.030 --> 00:44:51.040 align:start position:0%
bug bears but um
 

00:44:51.040 --> 00:44:53.510 align:start position:0%
bug bears but um
I<00:44:51.359><c> just</c><00:44:51.440><c> stop</c><00:44:51.920><c> people</c><00:44:52.400><c> it</c><00:44:52.560><c> seems</c><00:44:52.800><c> to</c><00:44:52.880><c> be</c><00:44:53.280><c> people</c>

00:44:53.510 --> 00:44:53.520 align:start position:0%
I just stop people it seems to be people
 

00:44:53.520 --> 00:44:55.829 align:start position:0%
I just stop people it seems to be people
write<00:44:53.760><c> silent</c><00:44:54.160><c> programs</c><00:44:54.640><c> that</c><00:44:54.800><c> that</c><00:44:55.040><c> doesn't</c>

00:44:55.829 --> 00:44:55.839 align:start position:0%
write silent programs that that doesn't
 

00:44:55.839 --> 00:44:57.910 align:start position:0%
write silent programs that that doesn't
your<00:44:56.079><c> program</c><00:44:56.400><c> should</c><00:44:56.640><c> print</c><00:44:56.800><c> things</c><00:44:57.040><c> out</c><00:44:57.760><c> I</c>

00:44:57.910 --> 00:44:57.920 align:start position:0%
your program should print things out I
 

00:44:57.920 --> 00:45:00.150 align:start position:0%
your program should print things out I
don't<00:44:58.079><c> want</c><00:44:58.160><c> to</c><00:44:58.319><c> over</c><00:44:58.640><c> o</c><00:44:58.880><c> overe</c><00:44:59.440><c> this</c><00:44:59.680><c> thing</c>

00:45:00.150 --> 00:45:00.160 align:start position:0%
don't want to over o overe this thing
 

00:45:00.160 --> 00:45:02.470 align:start position:0%
don't want to over o overe this thing
but<00:45:00.400><c> you</c><00:45:00.560><c> know</c><00:45:00.800><c> your</c><00:45:01.119><c> program</c><00:45:01.599><c> should</c><00:45:02.240><c> you</c>

00:45:02.470 --> 00:45:02.480 align:start position:0%
but you know your program should you
 

00:45:02.480 --> 00:45:04.150 align:start position:0%
but you know your program should you
know<00:45:02.800><c> say</c><00:45:03.040><c> hi</c><00:45:03.280><c> I'm</c><00:45:03.440><c> running</c><00:45:03.599><c> on</c><00:45:03.760><c> so</c><00:45:03.839><c> many</c>

00:45:04.150 --> 00:45:04.160 align:start position:0%
know say hi I'm running on so many
 

00:45:04.160 --> 00:45:05.990 align:start position:0%
know say hi I'm running on so many
processes<00:45:05.119><c> should</c><00:45:05.359><c> say</c><00:45:05.520><c> whenever</c><00:45:05.839><c> you're</c>

00:45:05.990 --> 00:45:06.000 align:start position:0%
processes should say whenever you're
 

00:45:06.000 --> 00:45:08.150 align:start position:0%
processes should say whenever you're
doing<00:45:06.160><c> parallel</c><00:45:06.640><c> IO</c><00:45:07.040><c> it</c><00:45:07.119><c> should</c><00:45:07.280><c> say</c><00:45:07.520><c> you</c><00:45:07.680><c> know</c>

00:45:08.150 --> 00:45:08.160 align:start position:0%
doing parallel IO it should say you know
 

00:45:08.160 --> 00:45:09.910 align:start position:0%
doing parallel IO it should say you know
and<00:45:08.560><c> you</c><00:45:08.960><c> if</c><00:45:09.119><c> you've</c><00:45:09.200><c> got</c><00:45:09.359><c> some</c><00:45:09.520><c> iterative</c>

00:45:09.910 --> 00:45:09.920 align:start position:0%
and you if you've got some iterative
 

00:45:09.920 --> 00:45:11.750 align:start position:0%
and you if you've got some iterative
loop<00:45:10.240><c> every</c><00:45:10.560><c> few</c><00:45:10.720><c> hundred</c><00:45:10.960><c> iterations</c><00:45:11.520><c> it</c>

00:45:11.750 --> 00:45:11.760 align:start position:0%
loop every few hundred iterations it
 

00:45:11.760 --> 00:45:13.589 align:start position:0%
loop every few hundred iterations it
should<00:45:11.920><c> print</c><00:45:12.160><c> out</c><00:45:12.319><c> what</c><00:45:12.480><c> it's</c><00:45:12.720><c> doing</c><00:45:13.200><c> and</c><00:45:13.440><c> you</c>

00:45:13.589 --> 00:45:13.599 align:start position:0%
should print out what it's doing and you
 

00:45:13.599 --> 00:45:15.510 align:start position:0%
should print out what it's doing and you
know<00:45:14.000><c> if</c><00:45:14.319><c> someone</c><00:45:14.560><c> tells</c><00:45:14.720><c> you</c><00:45:14.960><c> my</c><00:45:15.119><c> program</c>

00:45:15.510 --> 00:45:15.520 align:start position:0%
know if someone tells you my program
 

00:45:15.520 --> 00:45:17.109 align:start position:0%
know if someone tells you my program
crashed<00:45:15.920><c> and</c><00:45:16.079><c> you</c><00:45:16.240><c> say</c><00:45:16.400><c> where</c><00:45:16.560><c> did</c><00:45:16.720><c> it</c><00:45:16.880><c> crash</c>

00:45:17.109 --> 00:45:17.119 align:start position:0%
crashed and you say where did it crash
 

00:45:17.119 --> 00:45:20.150 align:start position:0%
crashed and you say where did it crash
and<00:45:17.280><c> they</c><00:45:17.440><c> say</c><00:45:17.680><c> I</c><00:45:17.839><c> don't</c><00:45:18.079><c> know</c><00:45:18.880><c> you</c><00:45:19.040><c> know</c><00:45:19.920><c> even</c>

00:45:20.150 --> 00:45:20.160 align:start position:0%
and they say I don't know you know even
 

00:45:20.160 --> 00:45:22.309 align:start position:0%
and they say I don't know you know even
printing<00:45:20.560><c> high</c><00:45:20.960><c> running</c><00:45:21.200><c> on</c><00:45:21.680><c> you</c><00:45:22.000><c> know</c><00:45:22.160><c> the</c>

00:45:22.309 --> 00:45:22.319 align:start position:0%
printing high running on you know the
 

00:45:22.319 --> 00:45:24.390 align:start position:0%
printing high running on you know the
program<00:45:22.640><c> started</c><00:45:22.960><c> up</c><00:45:23.280><c> okay</c><00:45:23.520><c> so</c><00:45:23.920><c> so</c><00:45:24.160><c> just</c>

00:45:24.390 --> 00:45:24.400 align:start position:0%
program started up okay so so just
 

00:45:24.400 --> 00:45:27.589 align:start position:0%
program started up okay so so just
giving<00:45:24.880><c> general</c><00:45:25.920><c> information</c><00:45:26.480><c> as</c><00:45:26.720><c> to</c><00:45:26.960><c> where</c>

00:45:27.589 --> 00:45:27.599 align:start position:0%
giving general information as to where
 

00:45:27.599 --> 00:45:30.150 align:start position:0%
giving general information as to where
your<00:45:27.920><c> program</c><00:45:28.480><c> is</c><00:45:28.800><c> will</c><00:45:29.040><c> give</c><00:45:29.119><c> you</c><00:45:29.280><c> invaluable</c>

00:45:30.150 --> 00:45:30.160 align:start position:0%
your program is will give you invaluable
 

00:45:30.160 --> 00:45:33.190 align:start position:0%
your program is will give you invaluable
information<00:45:30.560><c> when</c><00:45:30.800><c> you</c><00:45:30.880><c> want</c><00:45:30.960><c> to</c><00:45:31.119><c> debug</c><00:45:31.520><c> it.</c>

00:45:33.190 --> 00:45:33.200 align:start position:0%
information when you want to debug it.
 

00:45:33.200 --> 00:45:36.470 align:start position:0%
information when you want to debug it.
Um<00:45:34.160><c> and</c><00:45:34.400><c> then</c><00:45:34.960><c> yeah</c><00:45:35.200><c> this</c><00:45:35.359><c> is</c><00:45:35.520><c> this</c><00:45:35.680><c> is</c><00:45:35.760><c> my</c><00:45:36.000><c> bug</c>

00:45:36.470 --> 00:45:36.480 align:start position:0%
Um and then yeah this is this is my bug
 

00:45:36.480 --> 00:45:38.870 align:start position:0%
Um and then yeah this is this is my bug
people<00:45:37.200><c> write</c><00:45:37.440><c> raw</c><00:45:37.680><c> numbers</c><00:45:37.920><c> to</c><00:45:38.160><c> the</c><00:45:38.319><c> screen</c>

00:45:38.870 --> 00:45:38.880 align:start position:0%
people write raw numbers to the screen
 

00:45:38.880 --> 00:45:40.790 align:start position:0%
people write raw numbers to the screen
you<00:45:39.119><c> have</c><00:45:39.280><c> to</c><00:45:39.440><c> say</c><00:45:39.599><c> what</c><00:45:39.839><c> they</c><00:45:40.000><c> are.</c><00:45:40.319><c> Okay</c><00:45:40.560><c> when</c>

00:45:40.790 --> 00:45:40.800 align:start position:0%
you have to say what they are. Okay when
 

00:45:40.800 --> 00:45:43.670 align:start position:0%
you have to say what they are. Okay when
people<00:45:41.040><c> people</c><00:45:41.359><c> print</c><00:45:42.000><c> you</c><00:45:42.160><c> know</c><00:45:42.400><c> 1</c><00:45:42.640><c> 13</c><00:45:42.960><c> 5.6</c>

00:45:43.670 --> 00:45:43.680 align:start position:0%
people people print you know 1 13 5.6
 

00:45:43.680 --> 00:45:45.589 align:start position:0%
people people print you know 1 13 5.6
what<00:45:43.839><c> is</c><00:45:44.000><c> that?</c><00:45:44.240><c> Here</c><00:45:44.800><c> you</c><00:45:45.040><c> want</c><00:45:45.119><c> to</c><00:45:45.280><c> print</c>

00:45:45.589 --> 00:45:45.599 align:start position:0%
what is that? Here you want to print
 

00:45:45.599 --> 00:45:47.349 align:start position:0%
what is that? Here you want to print
that's<00:45:45.839><c> the</c><00:45:46.079><c> rank</c><00:45:46.400><c> the</c><00:45:46.560><c> value</c><00:45:46.720><c> of</c><00:45:46.880><c> J</c><00:45:47.200><c> that's</c>

00:45:47.349 --> 00:45:47.359 align:start position:0%
that's the rank the value of J that's
 

00:45:47.359 --> 00:45:48.790 align:start position:0%
that's the rank the value of J that's
the<00:45:47.520><c> value</c><00:45:47.680><c> of</c><00:45:47.760><c> X.</c><00:45:48.079><c> Okay.</c><00:45:48.240><c> So</c><00:45:48.400><c> you</c><00:45:48.560><c> have</c><00:45:48.640><c> to</c>

00:45:48.790 --> 00:45:48.800 align:start position:0%
the value of X. Okay. So you have to
 

00:45:48.800 --> 00:45:51.270 align:start position:0%
the value of X. Okay. So you have to
annotate<00:45:49.280><c> your</c><00:45:49.440><c> outputs.</c><00:45:50.000><c> Okay</c><00:45:50.720><c> it</c><00:45:50.800><c> it</c><00:45:51.119><c> will</c>

00:45:51.270 --> 00:45:51.280 align:start position:0%
annotate your outputs. Okay it it will
 

00:45:51.280 --> 00:45:52.710 align:start position:0%
annotate your outputs. Okay it it will
save<00:45:51.440><c> you</c><00:45:51.599><c> huge</c><00:45:51.920><c> very</c><00:45:52.079><c> very</c><00:45:52.400><c> simple</c>

00:45:52.710 --> 00:45:52.720 align:start position:0%
save you huge very very simple
 

00:45:52.720 --> 00:45:54.230 align:start position:0%
save you huge very very simple
techniques<00:45:53.119><c> will</c><00:45:53.359><c> save</c><00:45:53.520><c> you</c><00:45:53.680><c> huge</c><00:45:53.920><c> amounts</c><00:45:54.079><c> of</c>

00:45:54.230 --> 00:45:54.240 align:start position:0%
techniques will save you huge amounts of
 

00:45:54.240 --> 00:45:56.710 align:start position:0%
techniques will save you huge amounts of
time<00:45:54.880><c> in</c><00:45:55.119><c> in</c><00:45:55.119><c> in</c><00:45:55.599><c> in</c><00:45:56.000><c> the</c><00:45:56.160><c> future.</c><00:45:56.400><c> I</c><00:45:56.640><c> don't</c>

00:45:56.710 --> 00:45:56.720 align:start position:0%
time in in in in the future. I don't
 

00:45:56.720 --> 00:45:58.150 align:start position:0%
time in in in in the future. I don't
understand<00:45:56.960><c> why</c><00:45:57.200><c> people</c><00:45:57.359><c> write</c><00:45:57.599><c> raw</c><00:45:57.920><c> numbers</c>

00:45:58.150 --> 00:45:58.160 align:start position:0%
understand why people write raw numbers
 

00:45:58.160 --> 00:46:01.829 align:start position:0%
understand why people write raw numbers
to<00:45:58.319><c> the</c><00:45:58.400><c> screen</c><00:45:58.560><c> without</c><00:45:58.880><c> any</c><00:45:59.119><c> text.</c><00:46:00.319><c> Um</c><00:46:01.359><c> so</c>

00:46:01.829 --> 00:46:01.839 align:start position:0%
to the screen without any text. Um so
 

00:46:01.839 --> 00:46:03.109 align:start position:0%
to the screen without any text. Um so
this<00:46:02.000><c> is</c><00:46:02.160><c> why</c><00:46:02.319><c> we</c><00:46:02.480><c> want</c><00:46:02.560><c> to</c><00:46:02.640><c> say</c><00:46:02.800><c> there's</c><00:46:02.960><c> a</c>

00:46:03.109 --> 00:46:03.119 align:start position:0%
this is why we want to say there's a
 

00:46:03.119 --> 00:46:04.950 align:start position:0%
this is why we want to say there's a
common<00:46:03.359><c> mistake</c><00:46:03.760><c> people</c><00:46:04.079><c> make</c><00:46:04.319><c> that</c><00:46:04.720><c> there's</c>

00:46:04.950 --> 00:46:04.960 align:start position:0%
common mistake people make that there's
 

00:46:04.960 --> 00:46:07.670 align:start position:0%
common mistake people make that there's
a<00:46:05.119><c> bug.</c><00:46:05.520><c> Okay</c><00:46:06.000><c> but</c><00:46:06.240><c> you</c><00:46:06.480><c> changed</c><00:46:06.720><c> something.</c>

00:46:07.670 --> 00:46:07.680 align:start position:0%
a bug. Okay but you changed something.
 

00:46:07.680 --> 00:46:10.790 align:start position:0%
a bug. Okay but you changed something.
You<00:46:08.000><c> switched</c><00:46:08.480><c> compiler</c><00:46:09.599><c> you</c><00:46:10.160><c> put</c><00:46:10.319><c> a</c><00:46:10.480><c> print</c>

00:46:10.790 --> 00:46:10.800 align:start position:0%
You switched compiler you put a print
 

00:46:10.800 --> 00:46:12.550 align:start position:0%
You switched compiler you put a print
statement<00:46:11.119><c> in</c><00:46:11.280><c> and</c><00:46:11.440><c> it</c><00:46:11.599><c> went</c><00:46:11.839><c> away.</c><00:46:12.160><c> Okay,</c><00:46:12.400><c> so</c>

00:46:12.550 --> 00:46:12.560 align:start position:0%
statement in and it went away. Okay, so
 

00:46:12.560 --> 00:46:13.510 align:start position:0%
statement in and it went away. Okay, so
there<00:46:12.640><c> was</c><00:46:12.720><c> a</c><00:46:12.880><c> bug</c><00:46:13.040><c> which</c><00:46:13.200><c> you</c><00:46:13.359><c> didn't</c>

00:46:13.510 --> 00:46:13.520 align:start position:0%
there was a bug which you didn't
 

00:46:13.520 --> 00:46:15.190 align:start position:0%
there was a bug which you didn't
understand<00:46:14.000><c> and</c><00:46:14.240><c> something</c><00:46:14.560><c> changed</c><00:46:14.880><c> as</c><00:46:15.040><c> I</c>

00:46:15.190 --> 00:46:15.200 align:start position:0%
understand and something changed as I
 

00:46:15.200 --> 00:46:17.109 align:start position:0%
understand and something changed as I
said<00:46:15.440><c> maybe</c><00:46:15.599><c> you</c><00:46:15.680><c> changed.</c><00:46:16.079><c> Oh,</c><00:46:16.240><c> I</c><00:46:16.400><c> used</c><00:46:16.560><c> GCC</c>

00:46:17.109 --> 00:46:17.119 align:start position:0%
said maybe you changed. Oh, I used GCC
 

00:46:17.119 --> 00:46:19.270 align:start position:0%
said maybe you changed. Oh, I used GCC
instead<00:46:17.359><c> of</c><00:46:17.520><c> ICC</c><00:46:17.920><c> and</c><00:46:18.079><c> it</c><00:46:18.240><c> went</c><00:46:18.400><c> away.</c><00:46:18.880><c> I</c><00:46:19.119><c> put</c>

00:46:19.270 --> 00:46:19.280 align:start position:0%
instead of ICC and it went away. I put
 

00:46:19.280 --> 00:46:21.030 align:start position:0%
instead of ICC and it went away. I put
another<00:46:19.599><c> print</c><00:46:19.839><c> in</c><00:46:20.000><c> and</c><00:46:20.160><c> it</c><00:46:20.319><c> disappeared.</c>

00:46:21.030 --> 00:46:21.040 align:start position:0%
another print in and it disappeared.
 

00:46:21.040 --> 00:46:23.750 align:start position:0%
another print in and it disappeared.
Okay,<00:46:22.160><c> and</c><00:46:22.319><c> you</c><00:46:22.480><c> and</c><00:46:22.720><c> it</c><00:46:22.880><c> now</c><00:46:23.119><c> works</c><00:46:23.359><c> but</c><00:46:23.520><c> you</c>

00:46:23.750 --> 00:46:23.760 align:start position:0%
Okay, and you and it now works but you
 

00:46:23.760 --> 00:46:26.470 align:start position:0%
Okay, and you and it now works but you
don't<00:46:23.839><c> know</c><00:46:24.000><c> why.</c><00:46:24.480><c> Okay,</c><00:46:25.440><c> all</c><00:46:25.680><c> is</c><00:46:25.920><c> okay.</c><00:46:26.240><c> No,</c>

00:46:26.470 --> 00:46:26.480 align:start position:0%
don't know why. Okay, all is okay. No,
 

00:46:26.480 --> 00:46:28.950 align:start position:0%
don't know why. Okay, all is okay. No,
it's<00:46:26.640><c> not.</c><00:46:26.960><c> Okay,</c><00:46:27.599><c> you</c><00:46:27.920><c> have</c><00:46:28.000><c> a</c><00:46:28.160><c> bug</c><00:46:28.480><c> there</c><00:46:28.800><c> and</c>

00:46:28.950 --> 00:46:28.960 align:start position:0%
it's not. Okay, you have a bug there and
 

00:46:28.960 --> 00:46:31.510 align:start position:0%
it's not. Okay, you have a bug there and
just<00:46:29.200><c> by</c><00:46:29.599><c> oh</c><00:46:29.839><c> I</c><00:46:30.160><c> I</c><00:46:30.400><c> changed</c><00:46:30.720><c> the</c><00:46:30.960><c> compiler</c><00:46:31.359><c> and</c>

00:46:31.510 --> 00:46:31.520 align:start position:0%
just by oh I I changed the compiler and
 

00:46:31.520 --> 00:46:33.270 align:start position:0%
just by oh I I changed the compiler and
it<00:46:31.680><c> it</c><00:46:31.839><c> went</c><00:46:32.000><c> away.</c><00:46:32.319><c> Well,</c><00:46:32.640><c> no.</c><00:46:32.880><c> That</c><00:46:33.119><c> means</c>

00:46:33.270 --> 00:46:33.280 align:start position:0%
it it went away. Well, no. That means
 

00:46:33.280 --> 00:46:35.910 align:start position:0%
it it went away. Well, no. That means
you've<00:46:33.440><c> got</c><00:46:33.599><c> a</c><00:46:33.760><c> problem.</c><00:46:34.400><c> You</c><00:46:34.640><c> have</c><00:46:34.880><c> to</c><00:46:35.040><c> find</c>

00:46:35.910 --> 00:46:35.920 align:start position:0%
you've got a problem. You have to find
 

00:46:35.920 --> 00:46:37.670 align:start position:0%
you've got a problem. You have to find
there<00:46:36.160><c> is</c><00:46:36.319><c> a</c><00:46:36.480><c> bug.</c><00:46:36.800><c> You</c><00:46:36.960><c> must</c><00:46:37.119><c> find</c><00:46:37.280><c> it.</c><00:46:37.520><c> If</c>

00:46:37.670 --> 00:46:37.680 align:start position:0%
there is a bug. You must find it. If
 

00:46:37.680 --> 00:46:39.030 align:start position:0%
there is a bug. You must find it. If
not,<00:46:37.839><c> it</c><00:46:37.920><c> will</c><00:46:38.000><c> come</c><00:46:38.319><c> late</c><00:46:38.480><c> and</c><00:46:38.640><c> bite</c><00:46:38.880><c> you</c>

00:46:39.030 --> 00:46:39.040 align:start position:0%
not, it will come late and bite you
 

00:46:39.040 --> 00:46:42.230 align:start position:0%
not, it will come late and bite you
hard.<00:46:39.440><c> Okay,</c><00:46:40.000><c> so</c><00:46:40.240><c> you</c><00:46:40.400><c> know</c><00:46:41.599><c> sidest</c><00:46:42.000><c> stepping</c>

00:46:42.230 --> 00:46:42.240 align:start position:0%
hard. Okay, so you know sidest stepping
 

00:46:42.240 --> 00:46:44.470 align:start position:0%
hard. Okay, so you know sidest stepping
a<00:46:42.400><c> bug</c><00:46:42.640><c> is</c><00:46:42.880><c> not</c><00:46:43.280><c> a</c><00:46:43.520><c> good</c><00:46:43.760><c> thing</c><00:46:43.839><c> to</c><00:46:44.079><c> do.</c><00:46:44.319><c> Okay,</c>

00:46:44.470 --> 00:46:44.480 align:start position:0%
a bug is not a good thing to do. Okay,
 

00:46:44.480 --> 00:46:46.230 align:start position:0%
a bug is not a good thing to do. Okay,
it's<00:46:44.720><c> useful</c><00:46:45.040><c> to</c><00:46:45.200><c> know</c><00:46:45.359><c> that</c><00:46:45.680><c> that</c><00:46:45.839><c> it</c><00:46:45.920><c> might</c>

00:46:46.230 --> 00:46:46.240 align:start position:0%
it's useful to know that that it might
 

00:46:46.240 --> 00:46:47.750 align:start position:0%
it's useful to know that that it might
the<00:46:46.400><c> bug</c><00:46:46.560><c> appears</c><00:46:46.960><c> in</c><00:46:47.040><c> Intel</c><00:46:47.359><c> compiler</c><00:46:47.680><c> and</c>

00:46:47.750 --> 00:46:47.760 align:start position:0%
the bug appears in Intel compiler and
 

00:46:47.760 --> 00:46:49.109 align:start position:0%
the bug appears in Intel compiler and
not<00:46:47.920><c> the</c><00:46:48.000><c> canoe</c><00:46:48.240><c> compiler.</c><00:46:48.640><c> That's</c><00:46:48.800><c> useful</c>

00:46:49.109 --> 00:46:49.119 align:start position:0%
not the canoe compiler. That's useful
 

00:46:49.119 --> 00:46:51.510 align:start position:0%
not the canoe compiler. That's useful
information,<00:46:49.760><c> but</c><00:46:50.079><c> that</c><00:46:50.480><c> does</c><00:46:50.720><c> not</c><00:46:50.960><c> say</c><00:46:51.280><c> that</c>

00:46:51.510 --> 00:46:51.520 align:start position:0%
information, but that does not say that
 

00:46:51.520 --> 00:46:52.870 align:start position:0%
information, but that does not say that
means<00:46:51.760><c> I</c><00:46:51.920><c> should</c><00:46:52.079><c> use</c><00:46:52.160><c> the</c><00:46:52.319><c> Intel</c><00:46:52.560><c> compiler</c>

00:46:52.870 --> 00:46:52.880 align:start position:0%
means I should use the Intel compiler
 

00:46:52.880 --> 00:46:54.630 align:start position:0%
means I should use the Intel compiler
with<00:46:53.040><c> the</c><00:46:53.119><c> GNU</c><00:46:53.359><c> compiler.</c><00:46:53.920><c> It</c><00:46:54.160><c> says</c><00:46:54.319><c> that</c><00:46:54.480><c> you</c>

00:46:54.630 --> 00:46:54.640 align:start position:0%
with the GNU compiler. It says that you
 

00:46:54.640 --> 00:46:55.990 align:start position:0%
with the GNU compiler. It says that you
should<00:46:54.720><c> go</c><00:46:55.040><c> you</c><00:46:55.200><c> should</c><00:46:55.359><c> try</c><00:46:55.440><c> and</c><00:46:55.680><c> find</c><00:46:55.839><c> the</c>

00:46:55.990 --> 00:46:56.000 align:start position:0%
should go you should try and find the
 

00:46:56.000 --> 00:46:57.990 align:start position:0%
should go you should try and find the
bug.<00:46:56.319><c> Okay.</c><00:46:56.880><c> And</c><00:46:57.040><c> I</c><00:46:57.200><c> said</c><00:46:57.359><c> debugging</c><00:46:57.760><c> is</c><00:46:57.839><c> an</c>

00:46:57.990 --> 00:46:58.000 align:start position:0%
bug. Okay. And I said debugging is an
 

00:46:58.000 --> 00:47:00.150 align:start position:0%
bug. Okay. And I said debugging is an
experimental<00:46:58.560><c> science.</c><00:46:59.520><c> You</c><00:46:59.680><c> start</c><00:46:59.839><c> with</c><00:47:00.000><c> a</c>

00:47:00.150 --> 00:47:00.160 align:start position:0%
experimental science. You start with a
 

00:47:00.160 --> 00:47:02.230 align:start position:0%
experimental science. You start with a
serial<00:47:00.560><c> code.</c><00:47:00.880><c> You</c><00:47:01.040><c> start</c><00:47:01.200><c> with</c><00:47:01.440><c> the</c><00:47:01.599><c> power</c><00:47:02.160><c> of</c>

00:47:02.230 --> 00:47:02.240 align:start position:0%
serial code. You start with the power of
 

00:47:02.240 --> 00:47:03.990 align:start position:0%
serial code. You start with the power of
one<00:47:02.480><c> processor.</c><00:47:02.960><c> You</c><00:47:03.119><c> do</c><00:47:03.280><c> it</c><00:47:03.359><c> on</c><00:47:03.520><c> a</c><00:47:03.760><c> small</c>

00:47:03.990 --> 00:47:04.000 align:start position:0%
one processor. You do it on a small
 

00:47:04.000 --> 00:47:06.550 align:start position:0%
one processor. You do it on a small
process<00:47:04.400><c> count.</c><00:47:05.040><c> And</c><00:47:05.359><c> so</c><00:47:05.760><c> for</c><00:47:06.000><c> all</c><00:47:06.160><c> this</c><00:47:06.319><c> to</c>

00:47:06.550 --> 00:47:06.560 align:start position:0%
process count. And so for all this to
 

00:47:06.560 --> 00:47:08.870 align:start position:0%
process count. And so for all this to
work,<00:47:06.800><c> you</c><00:47:07.040><c> have</c><00:47:07.119><c> to</c><00:47:07.280><c> have</c><00:47:07.440><c> some</c><00:47:08.480><c> definition</c>

00:47:08.870 --> 00:47:08.880 align:start position:0%
work, you have to have some definition
 

00:47:08.880 --> 00:47:11.109 align:start position:0%
work, you have to have some definition
of<00:47:09.040><c> your</c><00:47:09.280><c> program</c><00:47:09.599><c> being</c><00:47:09.920><c> correct,</c><00:47:10.640><c> which</c><00:47:10.880><c> for</c>

00:47:11.109 --> 00:47:11.119 align:start position:0%
of your program being correct, which for
 

00:47:11.119 --> 00:47:13.030 align:start position:0%
of your program being correct, which for
numerical<00:47:12.000><c> code</c><00:47:12.319><c> using</c><00:47:12.560><c> floating</c><00:47:12.800><c> point</c>

00:47:13.030 --> 00:47:13.040 align:start position:0%
numerical code using floating point
 

00:47:13.040 --> 00:47:14.309 align:start position:0%
numerical code using floating point
numbers<00:47:13.359><c> can</c><00:47:13.520><c> be</c><00:47:13.599><c> a</c><00:47:13.680><c> slightly</c><00:47:13.920><c> subtle</c>

00:47:14.309 --> 00:47:14.319 align:start position:0%
numbers can be a slightly subtle
 

00:47:14.319 --> 00:47:16.950 align:start position:0%
numbers can be a slightly subtle
question.<00:47:15.200><c> But</c><00:47:15.359><c> you</c><00:47:15.520><c> know</c><00:47:15.680><c> it</c><00:47:16.240><c> you</c><00:47:16.560><c> need</c><00:47:16.720><c> to</c>

00:47:16.950 --> 00:47:16.960 align:start position:0%
question. But you know it you need to
 

00:47:16.960 --> 00:47:19.109 align:start position:0%
question. But you know it you need to
verify<00:47:17.599><c> continually</c><00:47:18.160><c> verify</c><00:47:18.640><c> both</c><00:47:18.880><c> the</c>

00:47:19.109 --> 00:47:19.119 align:start position:0%
verify continually verify both the
 

00:47:19.119 --> 00:47:20.550 align:start position:0%
verify continually verify both the
performance<00:47:19.440><c> and</c><00:47:19.680><c> correctness</c><00:47:20.079><c> of</c><00:47:20.240><c> your</c><00:47:20.400><c> code</c>

00:47:20.550 --> 00:47:20.560 align:start position:0%
performance and correctness of your code
 

00:47:20.560 --> 00:47:23.030 align:start position:0%
performance and correctness of your code
on<00:47:20.720><c> a</c><00:47:20.880><c> range</c><00:47:21.040><c> of</c><00:47:21.200><c> process</c><00:47:21.520><c> counts</c><00:47:22.240><c> because</c><00:47:22.720><c> you</c>

00:47:23.030 --> 00:47:23.040 align:start position:0%
on a range of process counts because you
 

00:47:23.040 --> 00:47:24.710 align:start position:0%
on a range of process counts because you
need<00:47:23.119><c> to</c><00:47:23.280><c> pick</c><00:47:23.440><c> up</c><00:47:23.599><c> the</c><00:47:23.760><c> bugs</c><00:47:24.000><c> when</c><00:47:24.160><c> they</c><00:47:24.400><c> first</c>

00:47:24.710 --> 00:47:24.720 align:start position:0%
need to pick up the bugs when they first
 

00:47:24.720 --> 00:47:26.870 align:start position:0%
need to pick up the bugs when they first
come<00:47:24.880><c> in.</c><00:47:25.280><c> Okay,</c><00:47:25.760><c> if</c><00:47:25.920><c> you</c><00:47:26.079><c> introduce</c><00:47:26.400><c> a</c><00:47:26.560><c> bug,</c>

00:47:26.870 --> 00:47:26.880 align:start position:0%
come in. Okay, if you introduce a bug,
 

00:47:26.880 --> 00:47:28.309 align:start position:0%
come in. Okay, if you introduce a bug,
you<00:47:26.960><c> want</c><00:47:27.119><c> it</c><00:47:27.280><c> to</c><00:47:27.359><c> be</c><00:47:27.440><c> picked</c><00:47:27.680><c> up</c><00:47:27.839><c> immediately.</c>

00:47:28.309 --> 00:47:28.319 align:start position:0%
you want it to be picked up immediately.
 

00:47:28.319 --> 00:47:29.430 align:start position:0%
you want it to be picked up immediately.
Now,<00:47:28.480><c> if</c><00:47:28.640><c> you're</c><00:47:28.720><c> a</c><00:47:28.880><c> modern</c><00:47:29.119><c> software</c>

00:47:29.430 --> 00:47:29.440 align:start position:0%
Now, if you're a modern software
 

00:47:29.440 --> 00:47:30.790 align:start position:0%
Now, if you're a modern software
developer,<00:47:29.760><c> you'll</c><00:47:30.000><c> have</c><00:47:30.079><c> a</c><00:47:30.240><c> huge</c><00:47:30.400><c> suite</c><00:47:30.640><c> of</c>

00:47:30.790 --> 00:47:30.800 align:start position:0%
developer, you'll have a huge suite of
 

00:47:30.800 --> 00:47:32.309 align:start position:0%
developer, you'll have a huge suite of
regression<00:47:31.200><c> test</c><00:47:31.440><c> that</c><00:47:31.599><c> run</c><00:47:31.839><c> automatically</c>

00:47:32.309 --> 00:47:32.319 align:start position:0%
regression test that run automatically
 

00:47:32.319 --> 00:47:34.630 align:start position:0%
regression test that run automatically
overnight<00:47:33.119><c> through</c><00:47:33.440><c> some</c><00:47:33.839><c> um</c><00:47:34.160><c> continuous</c>

00:47:34.630 --> 00:47:34.640 align:start position:0%
overnight through some um continuous
 

00:47:34.640 --> 00:47:37.589 align:start position:0%
overnight through some um continuous
integration<00:47:35.200><c> system.</c><00:47:35.920><c> Well,</c><00:47:37.040><c> yeah,</c><00:47:37.440><c> maybe</c>

00:47:37.589 --> 00:47:37.599 align:start position:0%
integration system. Well, yeah, maybe
 

00:47:37.599 --> 00:47:39.510 align:start position:0%
integration system. Well, yeah, maybe
you<00:47:37.760><c> do,</c><00:47:38.000><c> maybe</c><00:47:38.160><c> you</c><00:47:38.240><c> don't,</c><00:47:38.400><c> but</c><00:47:38.560><c> but</c><00:47:38.960><c> you</c><00:47:39.359><c> but</c>

00:47:39.510 --> 00:47:39.520 align:start position:0%
you do, maybe you don't, but but you but
 

00:47:39.520 --> 00:47:40.710 align:start position:0%
you do, maybe you don't, but but you but
you<00:47:39.680><c> it</c><00:47:39.839><c> should</c><00:47:39.920><c> be</c><00:47:40.079><c> a</c><00:47:40.240><c> way</c><00:47:40.400><c> you</c><00:47:40.560><c> should</c>

00:47:40.710 --> 00:47:40.720 align:start position:0%
you it should be a way you should
 

00:47:40.720 --> 00:47:42.630 align:start position:0%
you it should be a way you should
achieve<00:47:41.040><c> you</c><00:47:41.280><c> should</c><00:47:41.359><c> achieve</c><00:47:41.839><c> that</c><00:47:42.400><c> that</c>

00:47:42.630 --> 00:47:42.640 align:start position:0%
achieve you should achieve that that
 

00:47:42.640 --> 00:47:43.990 align:start position:0%
achieve you should achieve that that
will<00:47:42.720><c> be</c><00:47:42.800><c> the</c><00:47:43.040><c> ultimate</c><00:47:43.280><c> aim.</c><00:47:43.520><c> But</c><00:47:43.680><c> just</c><00:47:43.760><c> just</c>

00:47:43.990 --> 00:47:44.000 align:start position:0%
will be the ultimate aim. But just just
 

00:47:44.000 --> 00:47:46.390 align:start position:0%
will be the ultimate aim. But just just
running<00:47:44.319><c> by</c><00:47:44.480><c> hand</c><00:47:44.720><c> is</c><00:47:45.119><c> is</c><00:47:45.440><c> often</c><00:47:45.839><c> better</c><00:47:46.160><c> than</c>

00:47:46.390 --> 00:47:46.400 align:start position:0%
running by hand is is often better than
 

00:47:46.400 --> 00:47:48.630 align:start position:0%
running by hand is is often better than
better<00:47:46.720><c> than</c><00:47:46.880><c> nothing.</c>

00:47:48.630 --> 00:47:48.640 align:start position:0%
better than nothing.
 

00:47:48.640 --> 00:47:50.550 align:start position:0%
better than nothing.
Um<00:47:49.280><c> I</c><00:47:49.520><c> have</c><00:47:49.599><c> a</c><00:47:49.760><c> whole</c><00:47:49.920><c> bunch</c><00:47:50.079><c> of</c><00:47:50.160><c> things</c><00:47:50.400><c> about</c>

00:47:50.550 --> 00:47:50.560 align:start position:0%
Um I have a whole bunch of things about
 

00:47:50.560 --> 00:47:52.309 align:start position:0%
Um I have a whole bunch of things about
whether<00:47:50.880><c> whether</c><00:47:51.280><c> code</c><00:47:51.440><c> is</c><00:47:51.599><c> working.</c><00:47:51.839><c> I</c><00:47:52.079><c> don't</c>

00:47:52.309 --> 00:47:52.319 align:start position:0%
whether whether code is working. I don't
 

00:47:52.319 --> 00:47:54.630 align:start position:0%
whether whether code is working. I don't
really<00:47:52.560><c> want</c><00:47:52.720><c> to</c><00:47:52.880><c> go</c><00:47:53.040><c> into</c><00:47:53.200><c> this</c><00:47:53.440><c> in</c><00:47:53.760><c> detail</c>

00:47:54.630 --> 00:47:54.640 align:start position:0%
really want to go into this in detail
 

00:47:54.640 --> 00:47:56.790 align:start position:0%
really want to go into this in detail
but<00:47:54.960><c> you</c><00:47:55.119><c> know</c>

00:47:56.790 --> 00:47:56.800 align:start position:0%
but you know
 

00:47:56.800 --> 00:47:58.950 align:start position:0%
but you know
the<00:47:57.119><c> big</c><00:47:57.359><c> problem</c><00:47:57.680><c> in</c><00:47:57.839><c> in</c><00:47:58.160><c> parallel</c><00:47:58.560><c> programs</c>

00:47:58.950 --> 00:47:58.960 align:start position:0%
the big problem in in parallel programs
 

00:47:58.960 --> 00:48:01.030 align:start position:0%
the big problem in in parallel programs
is<00:47:59.280><c> it</c><00:47:59.440><c> is</c><00:47:59.680><c> very</c><00:47:59.920><c> unlikely</c><00:48:00.400><c> that</c><00:48:00.560><c> the</c><00:48:00.720><c> output</c>

00:48:01.030 --> 00:48:01.040 align:start position:0%
is it is very unlikely that the output
 

00:48:01.040 --> 00:48:02.870 align:start position:0%
is it is very unlikely that the output
will<00:48:01.200><c> be</c><00:48:01.520><c> will</c><00:48:01.680><c> be</c><00:48:01.839><c> this</c><00:48:02.000><c> will</c><00:48:02.160><c> be</c><00:48:02.400><c> identical</c>

00:48:02.870 --> 00:48:02.880 align:start position:0%
will be will be this will be identical
 

00:48:02.880 --> 00:48:04.950 align:start position:0%
will be will be this will be identical
different<00:48:03.119><c> number</c><00:48:03.280><c> of</c><00:48:03.440><c> processes.</c><00:48:04.160><c> Okay.</c>

00:48:04.950 --> 00:48:04.960 align:start position:0%
different number of processes. Okay.
 

00:48:04.960 --> 00:48:06.950 align:start position:0%
different number of processes. Okay.
Because<00:48:05.280><c> when</c><00:48:05.520><c> you</c><00:48:05.680><c> run</c><00:48:06.000><c> a</c><00:48:06.319><c> program</c><00:48:06.720><c> on</c>

00:48:06.950 --> 00:48:06.960 align:start position:0%
Because when you run a program on
 

00:48:06.960 --> 00:48:08.710 align:start position:0%
Because when you run a program on
different<00:48:07.200><c> number</c><00:48:07.359><c> of</c><00:48:07.599><c> processes</c><00:48:08.480><c> the</c>

00:48:08.710 --> 00:48:08.720 align:start position:0%
different number of processes the
 

00:48:08.720 --> 00:48:09.910 align:start position:0%
different number of processes the
calculations<00:48:09.280><c> are</c><00:48:09.440><c> happening</c><00:48:09.599><c> in</c><00:48:09.760><c> a</c>

00:48:09.910 --> 00:48:09.920 align:start position:0%
calculations are happening in a
 

00:48:09.920 --> 00:48:13.030 align:start position:0%
calculations are happening in a
different<00:48:10.160><c> order.</c><00:48:11.440><c> Okay.</c><00:48:12.160><c> Floating</c><00:48:12.560><c> point</c>

00:48:13.030 --> 00:48:13.040 align:start position:0%
different order. Okay. Floating point
 

00:48:13.040 --> 00:48:16.710 align:start position:0%
different order. Okay. Floating point
operations<00:48:13.680><c> are</c><00:48:13.920><c> not</c><00:48:14.560><c> um</c><00:48:15.119><c> associative.</c>

00:48:16.710 --> 00:48:16.720 align:start position:0%
operations are not um associative.
 

00:48:16.720 --> 00:48:21.109 align:start position:0%
operations are not um associative.
a<00:48:17.040><c> plus</c><00:48:17.280><c> a</c><00:48:17.760><c> *</c><00:48:18.000><c> b</c><00:48:18.480><c> *</c><00:48:18.640><c> c</c><00:48:19.119><c> a</c><00:48:19.280><c> +</c><00:48:19.599><c> b</c><00:48:20.160><c> +</c><00:48:20.480><c> c</c><00:48:20.720><c> is</c><00:48:20.880><c> not</c><00:48:21.040><c> the</c>

00:48:21.109 --> 00:48:21.119 align:start position:0%
a plus a * b * c a + b + c is not the
 

00:48:21.119 --> 00:48:24.309 align:start position:0%
a plus a * b * c a + b + c is not the
same<00:48:21.200><c> as</c><00:48:21.440><c> a</c><00:48:21.599><c> plus</c><00:48:22.160><c> b</c><00:48:22.400><c> +</c><00:48:22.720><c> c.</c><00:48:23.200><c> mathematically</c>

00:48:24.309 --> 00:48:24.319 align:start position:0%
same as a plus b + c. mathematically
 

00:48:24.319 --> 00:48:26.710 align:start position:0%
same as a plus b + c. mathematically
addition<00:48:24.720><c> is</c><00:48:24.960><c> associative</c><00:48:26.160><c> in</c><00:48:26.319><c> finite</c>

00:48:26.710 --> 00:48:26.720 align:start position:0%
addition is associative in finite
 

00:48:26.720 --> 00:48:29.510 align:start position:0%
addition is associative in finite
precision<00:48:27.119><c> is</c><00:48:27.280><c> not.</c><00:48:28.000><c> So</c><00:48:28.319><c> it</c><00:48:28.640><c> is</c><00:48:28.800><c> important</c><00:48:29.200><c> to</c>

00:48:29.510 --> 00:48:29.520 align:start position:0%
precision is not. So it is important to
 

00:48:29.520 --> 00:48:33.270 align:start position:0%
precision is not. So it is important to
have<00:48:30.240><c> um</c><00:48:31.599><c> some</c>

00:48:33.270 --> 00:48:33.280 align:start position:0%
have um some
 

00:48:33.280 --> 00:48:34.870 align:start position:0%
have um some
verification<00:48:33.920><c> results</c><00:48:34.160><c> that</c><00:48:34.319><c> you</c><00:48:34.480><c> trust</c><00:48:34.720><c> but</c>

00:48:34.870 --> 00:48:34.880 align:start position:0%
verification results that you trust but
 

00:48:34.880 --> 00:48:36.470 align:start position:0%
verification results that you trust but
it<00:48:35.040><c> is</c><00:48:35.119><c> quite</c><00:48:35.280><c> a</c><00:48:35.359><c> subtle</c><00:48:35.760><c> question</c><00:48:36.000><c> but</c><00:48:36.240><c> you</c>

00:48:36.470 --> 00:48:36.480 align:start position:0%
it is quite a subtle question but you
 

00:48:36.480 --> 00:48:39.030 align:start position:0%
it is quite a subtle question but you
have<00:48:36.640><c> to</c><00:48:36.720><c> you</c><00:48:36.960><c> have</c><00:48:37.119><c> to</c><00:48:37.280><c> accept</c><00:48:37.760><c> that</c><00:48:38.480><c> it's</c>

00:48:39.030 --> 00:48:39.040 align:start position:0%
have to you have to accept that it's
 

00:48:39.040 --> 00:48:41.589 align:start position:0%
have to you have to accept that it's
very<00:48:39.359><c> very</c><00:48:39.760><c> difficult</c><00:48:40.559><c> to</c><00:48:40.880><c> write</c><00:48:41.040><c> a</c><00:48:41.280><c> program</c>

00:48:41.589 --> 00:48:41.599 align:start position:0%
very very difficult to write a program
 

00:48:41.599 --> 00:48:44.150 align:start position:0%
very very difficult to write a program
which<00:48:41.839><c> gives</c><00:48:42.240><c> identical</c><00:48:43.359><c> with</c><00:48:43.599><c> floatingoint</c>

00:48:44.150 --> 00:48:44.160 align:start position:0%
which gives identical with floatingoint
 

00:48:44.160 --> 00:48:46.390 align:start position:0%
which gives identical with floatingoint
numbers<00:48:44.720><c> that</c><00:48:44.960><c> you</c><00:48:45.119><c> get</c><00:48:45.520><c> identical</c><00:48:46.079><c> output</c>

00:48:46.390 --> 00:48:46.400 align:start position:0%
numbers that you get identical output
 

00:48:46.400 --> 00:48:47.829 align:start position:0%
numbers that you get identical output
for<00:48:46.559><c> different</c><00:48:46.800><c> numbers</c><00:48:46.960><c> of</c><00:48:47.200><c> processes.</c><00:48:47.680><c> It</c>

00:48:47.829 --> 00:48:47.839 align:start position:0%
for different numbers of processes. It
 

00:48:47.839 --> 00:48:50.230 align:start position:0%
for different numbers of processes. It
is<00:48:48.000><c> possible</c><00:48:48.880><c> but</c><00:48:49.280><c> probably</c><00:48:49.680><c> the</c><00:48:49.920><c> performance</c>

00:48:50.230 --> 00:48:50.240 align:start position:0%
is possible but probably the performance
 

00:48:50.240 --> 00:48:52.630 align:start position:0%
is possible but probably the performance
would<00:48:50.480><c> be</c><00:48:50.640><c> terrible.</c><00:48:51.200><c> So</c><00:48:51.599><c> it's</c><00:48:51.920><c> a</c><00:48:52.000><c> bit</c><00:48:52.160><c> of</c><00:48:52.240><c> this</c>

00:48:52.630 --> 00:48:52.640 align:start position:0%
would be terrible. So it's a bit of this
 

00:48:52.640 --> 00:48:55.510 align:start position:0%
would be terrible. So it's a bit of this
slightly<00:48:52.960><c> off</c><00:48:53.119><c> topic</c><00:48:53.520><c> here.</c><00:48:54.640><c> um</c>

00:48:55.510 --> 00:48:55.520 align:start position:0%
slightly off topic here. um
 

00:48:55.520 --> 00:48:58.790 align:start position:0%
slightly off topic here. um
optimization.<00:48:56.480><c> Yeah,</c><00:48:56.800><c> as</c><00:48:57.040><c> you</c><00:48:57.200><c> go</c><00:48:57.359><c> along,</c><00:48:58.559><c> run</c>

00:48:58.790 --> 00:48:58.800 align:start position:0%
optimization. Yeah, as you go along, run
 

00:48:58.800 --> 00:49:00.549 align:start position:0%
optimization. Yeah, as you go along, run
your<00:48:58.960><c> code</c><00:48:59.119><c> number</c><00:48:59.440><c> input</c><00:48:59.680><c> date.</c><00:48:59.920><c> So,</c><00:49:00.160><c> so</c><00:49:00.319><c> you</c>

00:49:00.549 --> 00:49:00.559 align:start position:0%
your code number input date. So, so you
 

00:49:00.559 --> 00:49:02.309 align:start position:0%
your code number input date. So, so you
should<00:49:00.720><c> you</c><00:49:00.880><c> should</c><00:49:01.119><c> debug</c><00:49:01.520><c> your</c><00:49:02.000><c> you</c><00:49:02.160><c> should</c>

00:49:02.309 --> 00:49:02.319 align:start position:0%
should you should debug your you should
 

00:49:02.319 --> 00:49:04.390 align:start position:0%
should you should debug your you should
verify<00:49:02.720><c> your</c><00:49:02.960><c> code</c><00:49:03.119><c> is</c><00:49:03.359><c> correct</c><00:49:03.760><c> regularly</c><00:49:04.160><c> as</c>

00:49:04.390 --> 00:49:04.400 align:start position:0%
verify your code is correct regularly as
 

00:49:04.400 --> 00:49:05.990 align:start position:0%
verify your code is correct regularly as
you<00:49:04.480><c> develop</c><00:49:04.800><c> it.</c><00:49:05.119><c> You</c><00:49:05.280><c> should</c><00:49:05.440><c> also</c><00:49:05.599><c> verify</c>

00:49:05.990 --> 00:49:06.000 align:start position:0%
you develop it. You should also verify
 

00:49:06.000 --> 00:49:08.230 align:start position:0%
you develop it. You should also verify
that<00:49:06.079><c> the</c><00:49:06.319><c> code</c><00:49:06.720><c> is</c><00:49:07.119><c> is</c><00:49:07.520><c> is</c><00:49:07.839><c> running</c>

00:49:08.230 --> 00:49:08.240 align:start position:0%
that the code is is is running
 

00:49:08.240 --> 00:49:09.910 align:start position:0%
that the code is is is running
efficiently.<00:49:09.200><c> You</c><00:49:09.359><c> don't</c><00:49:09.520><c> want</c><00:49:09.599><c> to</c><00:49:09.760><c> do</c>

00:49:09.910 --> 00:49:09.920 align:start position:0%
efficiently. You don't want to do
 

00:49:09.920 --> 00:49:11.190 align:start position:0%
efficiently. You don't want to do
something<00:49:10.319><c> which</c><00:49:10.559><c> cripples</c><00:49:10.960><c> the</c>

00:49:11.190 --> 00:49:11.200 align:start position:0%
something which cripples the
 

00:49:11.200 --> 00:49:12.870 align:start position:0%
something which cripples the
performance.<00:49:11.680><c> So,</c><00:49:11.839><c> you</c><00:49:12.000><c> should</c><00:49:12.400><c> keep</c><00:49:12.640><c> running</c>

00:49:12.870 --> 00:49:12.880 align:start position:0%
performance. So, you should keep running
 

00:49:12.880 --> 00:49:14.470 align:start position:0%
performance. So, you should keep running
your<00:49:13.040><c> code</c><00:49:13.200><c> on</c><00:49:13.359><c> a</c><00:49:13.599><c> number</c><00:49:13.680><c> of</c><00:49:13.839><c> input</c><00:49:14.079><c> data</c><00:49:14.480><c> with</c>

00:49:14.470 --> 00:49:14.480 align:start position:0%
your code on a number of input data with
 

00:49:14.480 --> 00:49:16.309 align:start position:0%
your code on a number of input data with
a<00:49:14.640><c> range</c><00:49:14.800><c> of</c><00:49:14.880><c> NPI</c><00:49:15.359><c> processes</c><00:49:15.839><c> as</c><00:49:16.079><c> you</c><00:49:16.240><c> go</c>

00:49:16.309 --> 00:49:16.319 align:start position:0%
a range of NPI processes as you go
 

00:49:16.319 --> 00:49:19.670 align:start position:0%
a range of NPI processes as you go
along.<00:49:17.200><c> And</c><00:49:17.359><c> then</c><00:49:17.520><c> if</c><00:49:17.680><c> the</c><00:49:17.839><c> scaling</c><00:49:18.160><c> is</c><00:49:18.400><c> poor,</c>

00:49:19.670 --> 00:49:19.680 align:start position:0%
along. And then if the scaling is poor,
 

00:49:19.680 --> 00:49:20.870 align:start position:0%
along. And then if the scaling is poor,
you<00:49:19.839><c> need</c><00:49:20.000><c> to</c><00:49:20.079><c> find</c><00:49:20.240><c> out</c><00:49:20.319><c> what</c><00:49:20.559><c> parallel</c>

00:49:20.870 --> 00:49:20.880 align:start position:0%
you need to find out what parallel
 

00:49:20.880 --> 00:49:22.549 align:start position:0%
you need to find out what parallel
routines<00:49:21.200><c> are</c><00:49:21.359><c> the</c><00:49:21.440><c> bottlenecks.</c><00:49:22.079><c> And</c><00:49:22.319><c> again,</c>

00:49:22.549 --> 00:49:22.559 align:start position:0%
routines are the bottlenecks. And again,
 

00:49:22.559 --> 00:49:23.990 align:start position:0%
routines are the bottlenecks. And again,
this<00:49:22.720><c> is</c><00:49:22.880><c> much</c><00:49:23.119><c> easier</c><00:49:23.440><c> if</c><00:49:23.599><c> you</c><00:49:23.760><c> have</c><00:49:23.839><c> a</c>

00:49:23.990 --> 00:49:24.000 align:start position:0%
this is much easier if you have a
 

00:49:24.000 --> 00:49:26.150 align:start position:0%
this is much easier if you have a
separate<00:49:24.240><c> commerce</c><00:49:24.720><c> library.</c><00:49:25.200><c> Okay,</c><00:49:25.839><c> if</c><00:49:26.000><c> you</c>

00:49:26.150 --> 00:49:26.160 align:start position:0%
separate commerce library. Okay, if you
 

00:49:26.160 --> 00:49:28.870 align:start position:0%
separate commerce library. Okay, if you
run<00:49:26.319><c> a</c><00:49:26.559><c> profiler</c><00:49:27.119><c> and</c><00:49:27.280><c> it</c><00:49:27.520><c> says</c><00:49:28.079><c> um</c><00:49:28.559><c> you're</c>

00:49:28.870 --> 00:49:28.880 align:start position:0%
run a profiler and it says um you're
 

00:49:28.880 --> 00:49:31.829 align:start position:0%
run a profiler and it says um you're
spending<00:49:30.000><c> mark</c><00:49:30.319><c> here</c><00:49:30.720><c> for</c><00:49:30.800><c> example,</c><00:49:31.440><c> you're</c>

00:49:31.829 --> 00:49:31.839 align:start position:0%
spending mark here for example, you're
 

00:49:31.839 --> 00:49:36.150 align:start position:0%
spending mark here for example, you're
spending<00:49:32.720><c> um</c><00:49:33.760><c> 57%</c><00:49:34.559><c> of</c><00:49:34.640><c> your</c><00:49:34.800><c> time</c><00:49:34.960><c> in</c><00:49:35.119><c> NPI</c><00:49:35.839><c> any</c>

00:49:36.150 --> 00:49:36.160 align:start position:0%
spending um 57% of your time in NPI any
 

00:49:36.160 --> 00:49:37.910 align:start position:0%
spending um 57% of your time in NPI any
well<00:49:36.319><c> if</c><00:49:36.480><c> you</c><00:49:36.559><c> call</c><00:49:36.720><c> NPI</c><00:49:37.200><c> weight</c><00:49:37.359><c> any</c><00:49:37.680><c> lots</c><00:49:37.839><c> of</c>

00:49:37.910 --> 00:49:37.920 align:start position:0%
well if you call NPI weight any lots of
 

00:49:37.920 --> 00:49:39.510 align:start position:0%
well if you call NPI weight any lots of
times<00:49:38.079><c> you</c><00:49:38.240><c> don't</c><00:49:38.319><c> know</c><00:49:38.400><c> where</c><00:49:38.640><c> that</c><00:49:38.800><c> is.</c><00:49:39.280><c> If</c>

00:49:39.510 --> 00:49:39.520 align:start position:0%
times you don't know where that is. If
 

00:49:39.520 --> 00:49:41.829 align:start position:0%
times you don't know where that is. If
the<00:49:39.680><c> profiler</c><00:49:40.160><c> says</c><00:49:40.480><c> you're</c><00:49:40.640><c> spending</c><00:49:40.960><c> 57%</c>

00:49:41.829 --> 00:49:41.839 align:start position:0%
the profiler says you're spending 57%
 

00:49:41.839 --> 00:49:44.390 align:start position:0%
the profiler says you're spending 57%
57%<00:49:42.559><c> of</c><00:49:42.640><c> your</c><00:49:42.800><c> time</c><00:49:42.960><c> in</c><00:49:43.119><c> weight</c><00:49:43.359><c> 10</c><00:49:43.839><c> and</c><00:49:44.079><c> by</c><00:49:44.240><c> the</c>

00:49:44.390 --> 00:49:44.400 align:start position:0%
57% of your time in weight 10 and by the
 

00:49:44.400 --> 00:49:46.790 align:start position:0%
57% of your time in weight 10 and by the
way<00:49:44.640><c> 50%</c><00:49:45.280><c> of</c><00:49:45.440><c> your</c><00:49:45.680><c> time</c><00:49:45.839><c> in</c><00:49:46.000><c> a</c><00:49:46.240><c> code</c><00:49:46.480><c> in</c><00:49:46.640><c> a</c>

00:49:46.790 --> 00:49:46.800 align:start position:0%
way 50% of your time in a code in a
 

00:49:46.800 --> 00:49:49.829 align:start position:0%
way 50% of your time in a code in a
routine<00:49:47.200><c> called</c><00:49:47.599><c> NPI</c><00:49:48.079><c> halo</c><00:49:48.559><c> swap</c><00:49:49.359><c> then</c><00:49:49.599><c> you</c>

00:49:49.829 --> 00:49:49.839 align:start position:0%
routine called NPI halo swap then you
 

00:49:49.839 --> 00:49:51.349 align:start position:0%
routine called NPI halo swap then you
know<00:49:49.920><c> that</c><00:49:50.160><c> it's</c><00:49:50.319><c> the</c><00:49:50.480><c> halo</c><00:49:50.800><c> swaps</c><00:49:51.119><c> that</c><00:49:51.200><c> are</c>

00:49:51.349 --> 00:49:51.359 align:start position:0%
know that it's the halo swaps that are
 

00:49:51.359 --> 00:49:53.589 align:start position:0%
know that it's the halo swaps that are
doing<00:49:51.520><c> it.</c><00:49:52.079><c> So</c><00:49:52.319><c> knowing</c><00:49:52.559><c> how</c><00:49:52.800><c> much</c><00:49:53.040><c> time</c><00:49:53.280><c> your</c>

00:49:53.589 --> 00:49:53.599 align:start position:0%
doing it. So knowing how much time your
 

00:49:53.599 --> 00:49:55.589 align:start position:0%
doing it. So knowing how much time your
program<00:49:53.920><c> takes</c><00:49:54.160><c> in</c><00:49:54.400><c> each</c><00:49:54.559><c> NPI</c><00:49:55.040><c> call</c><00:49:55.440><c> not</c>

00:49:55.589 --> 00:49:55.599 align:start position:0%
program takes in each NPI call not
 

00:49:55.599 --> 00:49:57.510 align:start position:0%
program takes in each NPI call not
necessarily<00:49:56.160><c> useful</c><00:49:56.480><c> information.</c><00:49:57.359><c> You</c>

00:49:57.510 --> 00:49:57.520 align:start position:0%
necessarily useful information. You
 

00:49:57.520 --> 00:49:58.870 align:start position:0%
necessarily useful information. You
don't<00:49:57.599><c> know</c><00:49:57.680><c> where</c><00:49:57.920><c> it's</c><00:49:58.079><c> being</c><00:49:58.240><c> called</c><00:49:58.559><c> from.</c>

00:49:58.870 --> 00:49:58.880 align:start position:0%
don't know where it's being called from.
 

00:49:58.880 --> 00:50:01.510 align:start position:0%
don't know where it's being called from.
So<00:49:59.119><c> again</c><00:50:00.079><c> having</c><00:50:00.400><c> your</c><00:50:00.800><c> communications</c>

00:50:01.510 --> 00:50:01.520 align:start position:0%
So again having your communications
 

00:50:01.520 --> 00:50:03.589 align:start position:0%
So again having your communications
library<00:50:02.319><c> communications</c><00:50:02.960><c> in</c><00:50:03.119><c> a</c><00:50:03.280><c> separate</c>

00:50:03.589 --> 00:50:03.599 align:start position:0%
library communications in a separate
 

00:50:03.599 --> 00:50:06.150 align:start position:0%
library communications in a separate
library<00:50:04.319><c> makes</c><00:50:04.640><c> both</c><00:50:04.960><c> debugging</c><00:50:05.520><c> and</c>

00:50:06.150 --> 00:50:06.160 align:start position:0%
library makes both debugging and
 

00:50:06.160 --> 00:50:09.109 align:start position:0%
library makes both debugging and
performance<00:50:06.640><c> optimization</c><00:50:07.359><c> easier.</c><00:50:08.400><c> Um</c><00:50:08.880><c> it's</c>

00:50:09.109 --> 00:50:09.119 align:start position:0%
performance optimization easier. Um it's
 

00:50:09.119 --> 00:50:10.470 align:start position:0%
performance optimization easier. Um it's
very<00:50:09.359><c> easy</c><00:50:09.520><c> to</c><00:50:09.680><c> think</c><00:50:09.839><c> that</c><00:50:10.000><c> it's</c><00:50:10.240><c> your</c>

00:50:10.470 --> 00:50:10.480 align:start position:0%
very easy to think that it's your
 

00:50:10.480 --> 00:50:11.829 align:start position:0%
very easy to think that it's your
parallel<00:50:10.800><c> performance.</c><00:50:11.200><c> Sometimes</c><00:50:11.520><c> you</c><00:50:11.680><c> do</c>

00:50:11.829 --> 00:50:11.839 align:start position:0%
parallel performance. Sometimes you do
 

00:50:11.839 --> 00:50:13.109 align:start position:0%
parallel performance. Sometimes you do
language<00:50:12.160><c> which</c><00:50:12.400><c> cripples</c><00:50:12.640><c> the</c><00:50:12.800><c> serial</c>

00:50:13.109 --> 00:50:13.119 align:start position:0%
language which cripples the serial
 

00:50:13.119 --> 00:50:14.230 align:start position:0%
language which cripples the serial
performance<00:50:13.440><c> and</c><00:50:13.599><c> you</c><00:50:13.680><c> have</c><00:50:13.760><c> to</c><00:50:13.839><c> work</c><00:50:14.000><c> on</c><00:50:14.079><c> the</c>

00:50:14.230 --> 00:50:14.240 align:start position:0%
performance and you have to work on the
 

00:50:14.240 --> 00:50:16.950 align:start position:0%
performance and you have to work on the
serial<00:50:14.559><c> code.</c><00:50:14.880><c> Okay.</c>

00:50:16.950 --> 00:50:16.960 align:start position:0%
serial code. Okay.
 

00:50:16.960 --> 00:50:19.829 align:start position:0%
serial code. Okay.
Um<00:50:17.440><c> I</c><00:50:17.760><c> will</c><00:50:17.920><c> cover</c><00:50:18.160><c> for</c><00:50:18.640><c> erase</c><00:50:18.880><c> syntax</c><00:50:19.359><c> here.</c>

00:50:19.829 --> 00:50:19.839 align:start position:0%
Um I will cover for erase syntax here.
 

00:50:19.839 --> 00:50:24.630 align:start position:0%
Um I will cover for erase syntax here.
It's<00:50:20.000><c> a</c><00:50:20.160><c> bit</c><00:50:20.319><c> subtle.</c><00:50:20.880><c> Um</c><00:50:22.240><c> so</c><00:50:22.960><c> um</c>

00:50:24.630 --> 00:50:24.640 align:start position:0%
It's a bit subtle. Um so um
 

00:50:24.640 --> 00:50:29.030 align:start position:0%
It's a bit subtle. Um so um
I<00:50:24.960><c> said</c><00:50:25.119><c> that</c><00:50:25.359><c> for</c><00:50:25.599><c> nonontiguous</c><00:50:26.960><c> data</c><00:50:28.319><c> uh</c><00:50:28.720><c> you</c>

00:50:29.030 --> 00:50:29.040 align:start position:0%
I said that for nonontiguous data uh you
 

00:50:29.040 --> 00:50:32.630 align:start position:0%
I said that for nonontiguous data uh you
should<00:50:29.520><c> use</c><00:50:29.680><c> a</c><00:50:29.920><c> vector.</c><00:50:30.640><c> Okay.</c><00:50:31.680><c> So</c><00:50:31.839><c> NPI</c><00:50:32.319><c> drive</c>

00:50:32.630 --> 00:50:32.640 align:start position:0%
should use a vector. Okay. So NPI drive
 

00:50:32.640 --> 00:50:34.790 align:start position:0%
should use a vector. Okay. So NPI drive
types<00:50:33.200><c> enable</c><00:50:33.599><c> strider</c><00:50:34.000><c> data</c><00:50:34.160><c> to</c><00:50:34.319><c> be</c><00:50:34.400><c> sent</c><00:50:34.559><c> and</c>

00:50:34.790 --> 00:50:34.800 align:start position:0%
types enable strider data to be sent and
 

00:50:34.800 --> 00:50:35.990 align:start position:0%
types enable strider data to be sent and
received.<00:50:35.280><c> You</c><00:50:35.440><c> don't</c><00:50:35.599><c> need</c><00:50:35.680><c> there's</c><00:50:35.920><c> no</c>

00:50:35.990 --> 00:50:36.000 align:start position:0%
received. You don't need there's no
 

00:50:36.000 --> 00:50:38.790 align:start position:0%
received. You don't need there's no
explicit<00:50:36.400><c> copy</c><00:50:36.640><c> and</c><00:50:36.800><c> not</c><00:50:36.960><c> copy</c><00:50:37.280><c> out</c><00:50:37.440><c> required</c>

00:50:38.790 --> 00:50:38.800 align:start position:0%
explicit copy and not copy out required
 

00:50:38.800 --> 00:50:41.030 align:start position:0%
explicit copy and not copy out required
um<00:50:39.200><c> for</c><00:50:39.440><c> for</c><00:50:39.839><c> a</c><00:50:40.000><c> for</c><00:50:40.400><c> program</c><00:50:40.640><c> might</c><00:50:40.800><c> say</c><00:50:40.880><c> well</c>

00:50:41.030 --> 00:50:41.040 align:start position:0%
um for for a for program might say well
 

00:50:41.040 --> 00:50:42.790 align:start position:0%
um for for a for program might say well
why<00:50:41.200><c> not</c><00:50:41.280><c> use</c><00:50:41.440><c> for</c><00:50:41.760><c> array</c><00:50:42.079><c> syntax</c><00:50:42.480><c> and</c><00:50:42.559><c> you</c><00:50:42.720><c> can</c>

00:50:42.790 --> 00:50:42.800 align:start position:0%
why not use for array syntax and you can
 

00:50:42.800 --> 00:50:45.510 align:start position:0%
why not use for array syntax and you can
I<00:50:43.040><c> can</c><00:50:43.119><c> use</c><00:50:43.200><c> for</c><00:50:43.680><c> array</c><00:50:43.920><c> syntax</c><00:50:44.400><c> to</c><00:50:44.800><c> select</c>

00:50:45.510 --> 00:50:45.520 align:start position:0%
I can use for array syntax to select
 

00:50:45.520 --> 00:50:48.309 align:start position:0%
I can use for array syntax to select
non-ontiguous<00:50:46.480><c> data</c><00:50:47.440><c> there</c><00:50:47.680><c> are</c><00:50:47.839><c> subtleties</c>

00:50:48.309 --> 00:50:48.319 align:start position:0%
non-ontiguous data there are subtleties
 

00:50:48.319 --> 00:50:50.230 align:start position:0%
non-ontiguous data there are subtleties
for<00:50:48.480><c> non-blocking</c><00:50:49.119><c> operations</c><00:50:49.760><c> which</c><00:50:50.000><c> I'm</c>

00:50:50.230 --> 00:50:50.240 align:start position:0%
for non-blocking operations which I'm
 

00:50:50.240 --> 00:50:52.950 align:start position:0%
for non-blocking operations which I'm
going<00:50:50.319><c> to</c><00:50:50.480><c> cover</c><00:50:50.720><c> here</c>

00:50:52.950 --> 00:50:52.960 align:start position:0%
going to cover here
 

00:50:52.960 --> 00:50:54.950 align:start position:0%
going to cover here
so

00:50:54.950 --> 00:50:54.960 align:start position:0%
so
 

00:50:54.960 --> 00:50:58.069 align:start position:0%
so
if<00:50:55.200><c> I'm</c><00:50:55.359><c> a</c><00:50:55.520><c> four</c><00:50:56.000><c> program</c><00:50:56.400><c> and</c><00:50:56.559><c> I</c><00:50:56.800><c> did</c><00:50:57.040><c> this</c>

00:50:58.069 --> 00:50:58.079 align:start position:0%
if I'm a four program and I did this
 

00:50:58.079 --> 00:51:01.270 align:start position:0%
if I'm a four program and I did this
allocate<00:50:58.640><c> buff</c><00:50:59.119><c> npis</c>

00:51:01.270 --> 00:51:01.280 align:start position:0%
allocate buff npis
 

00:51:01.280 --> 00:51:04.150 align:start position:0%
allocate buff npis
or<00:51:01.520><c> I</c><00:51:01.680><c> send</c><00:51:02.000><c> buff</c><00:51:02.880><c> and</c><00:51:03.040><c> then</c><00:51:03.200><c> I</c><00:51:03.359><c> deallocate</c><00:51:03.839><c> it</c>

00:51:04.150 --> 00:51:04.160 align:start position:0%
or I send buff and then I deallocate it
 

00:51:04.160 --> 00:51:06.150 align:start position:0%
or I send buff and then I deallocate it
what's<00:51:04.400><c> wrong</c><00:51:04.559><c> with</c><00:51:04.800><c> that</c><00:51:05.280><c> why</c><00:51:05.440><c> is</c><00:51:05.599><c> that</c><00:51:05.839><c> code</c>

00:51:06.150 --> 00:51:06.160 align:start position:0%
what's wrong with that why is that code
 

00:51:06.160 --> 00:51:11.510 align:start position:0%
what's wrong with that why is that code
incorrect?

00:51:11.510 --> 00:51:11.520 align:start position:0%
 
 

00:51:11.520 --> 00:51:13.430 align:start position:0%
 
So<00:51:11.680><c> I'm</c><00:51:11.839><c> allocating</c><00:51:12.240><c> a</c><00:51:12.400><c> buffer</c><00:51:12.800><c> telling</c><00:51:12.960><c> NPI</c>

00:51:13.430 --> 00:51:13.440 align:start position:0%
So I'm allocating a buffer telling NPI
 

00:51:13.440 --> 00:51:14.870 align:start position:0%
So I'm allocating a buffer telling NPI
to<00:51:13.520><c> send</c><00:51:13.680><c> it</c><00:51:13.920><c> send</c><00:51:14.079><c> it</c><00:51:14.160><c> in</c><00:51:14.319><c> a</c><00:51:14.400><c> non-blocking</c>

00:51:14.870 --> 00:51:14.880 align:start position:0%
to send it send it in a non-blocking
 

00:51:14.880 --> 00:51:16.630 align:start position:0%
to send it send it in a non-blocking
way.<00:51:15.119><c> So</c><00:51:15.200><c> I'm</c><00:51:15.280><c> telling</c><00:51:16.000><c> please</c><00:51:16.240><c> send</c><00:51:16.400><c> this</c>

00:51:16.630 --> 00:51:16.640 align:start position:0%
way. So I'm telling please send this
 

00:51:16.640 --> 00:51:19.910 align:start position:0%
way. So I'm telling please send this
buffer<00:51:17.040><c> sometime</c><00:51:17.440><c> in</c><00:51:17.599><c> the</c><00:51:17.760><c> future.</c><00:51:18.319><c> Okay.</c><00:51:19.760><c> And</c>

00:51:19.910 --> 00:51:19.920 align:start position:0%
buffer sometime in the future. Okay. And
 

00:51:19.920 --> 00:51:21.430 align:start position:0%
buffer sometime in the future. Okay. And
I'll<00:51:20.240><c> come</c><00:51:20.319><c> back</c><00:51:20.480><c> and</c><00:51:20.640><c> check</c><00:51:20.880><c> later</c><00:51:21.040><c> if</c><00:51:21.280><c> it's</c>

00:51:21.430 --> 00:51:21.440 align:start position:0%
I'll come back and check later if it's
 

00:51:21.440 --> 00:51:23.349 align:start position:0%
I'll come back and check later if it's
been<00:51:21.680><c> sent</c><00:51:22.000><c> and</c><00:51:22.319><c> immediately</c><00:51:22.720><c> deallocating</c>

00:51:23.349 --> 00:51:23.359 align:start position:0%
been sent and immediately deallocating
 

00:51:23.359 --> 00:51:27.270 align:start position:0%
been sent and immediately deallocating
the<00:51:23.599><c> buffer.</c><00:51:24.480><c> Why</c><00:51:24.720><c> is</c><00:51:24.880><c> that</c><00:51:25.119><c> a</c><00:51:25.520><c> problem?</c>

00:51:27.270 --> 00:51:27.280 align:start position:0%
the buffer. Why is that a problem?
 

00:51:27.280 --> 00:51:29.589 align:start position:0%
the buffer. Why is that a problem?
Yes,<00:51:27.839><c> you</c><00:51:28.079><c> have</c><00:51:28.240><c> you</c><00:51:28.480><c> can</c><00:51:28.800><c> you</c><00:51:29.119><c> you</c><00:51:29.280><c> cannot</c>

00:51:29.589 --> 00:51:29.599 align:start position:0%
Yes, you have you can you you cannot
 

00:51:29.599 --> 00:51:31.270 align:start position:0%
Yes, you have you can you you cannot
deallocate<00:51:30.160><c> before</c><00:51:30.480><c> because</c><00:51:30.880><c> because</c><00:51:31.040><c> what</c>

00:51:31.270 --> 00:51:31.280 align:start position:0%
deallocate before because because what
 

00:51:31.280 --> 00:51:33.109 align:start position:0%
deallocate before because because what
happens<00:51:31.599><c> later</c><00:51:31.760><c> on</c><00:51:32.000><c> NPI</c><00:51:32.400><c> will</c><00:51:32.559><c> say</c><00:51:32.720><c> I</c><00:51:32.880><c> want</c><00:51:32.960><c> to</c>

00:51:33.109 --> 00:51:33.119 align:start position:0%
happens later on NPI will say I want to
 

00:51:33.119 --> 00:51:34.710 align:start position:0%
happens later on NPI will say I want to
send<00:51:33.359><c> the</c><00:51:33.520><c> data</c><00:51:33.760><c> now</c><00:51:34.000><c> and</c><00:51:34.240><c> it</c><00:51:34.400><c> will</c><00:51:34.480><c> find</c><00:51:34.559><c> the</c>

00:51:34.710 --> 00:51:34.720 align:start position:0%
send the data now and it will find the
 

00:51:34.720 --> 00:51:36.309 align:start position:0%
send the data now and it will find the
buffer<00:51:34.960><c> isn't</c><00:51:35.200><c> there.</c><00:51:35.440><c> It's</c><00:51:35.599><c> it's</c><00:51:35.839><c> a</c><00:51:36.000><c> null</c><00:51:36.160><c> and</c>

00:51:36.309 --> 00:51:36.319 align:start position:0%
buffer isn't there. It's it's a null and
 

00:51:36.319 --> 00:51:38.549 align:start position:0%
buffer isn't there. It's it's a null and
you<00:51:36.480><c> might</c><00:51:36.559><c> get</c><00:51:36.720><c> a</c><00:51:36.880><c> crash.</c><00:51:37.280><c> Okay,</c><00:51:37.920><c> so</c><00:51:38.160><c> that's</c>

00:51:38.549 --> 00:51:38.559 align:start position:0%
you might get a crash. Okay, so that's
 

00:51:38.559 --> 00:51:40.470 align:start position:0%
you might get a crash. Okay, so that's
hopefully<00:51:39.200><c> relatively</c><00:51:39.760><c> obvious</c><00:51:40.079><c> that's</c>

00:51:40.470 --> 00:51:40.480 align:start position:0%
hopefully relatively obvious that's
 

00:51:40.480 --> 00:51:42.710 align:start position:0%
hopefully relatively obvious that's
wrong<00:51:41.119><c> unfortunately.</c><00:51:42.240><c> So</c><00:51:42.319><c> non-block</c>

00:51:42.710 --> 00:51:42.720 align:start position:0%
wrong unfortunately. So non-block
 

00:51:42.720 --> 00:51:43.990 align:start position:0%
wrong unfortunately. So non-block
instead<00:51:43.119><c> may</c><00:51:43.280><c> still</c><00:51:43.359><c> be</c><00:51:43.440><c> ongoing</c><00:51:43.839><c> at</c>

00:51:43.990 --> 00:51:44.000 align:start position:0%
instead may still be ongoing at
 

00:51:44.000 --> 00:51:45.750 align:start position:0%
instead may still be ongoing at
allocation.<00:51:44.640><c> The</c><00:51:44.800><c> code</c><00:51:45.119><c> could</c><00:51:45.280><c> crash</c><00:51:45.520><c> or</c><00:51:45.599><c> give</c>

00:51:45.750 --> 00:51:45.760 align:start position:0%
allocation. The code could crash or give
 

00:51:45.760 --> 00:51:47.670 align:start position:0%
allocation. The code could crash or give
unpredictable<00:51:46.240><c> behavior.</c><00:51:47.040><c> It's</c><00:51:47.200><c> only</c><00:51:47.440><c> safe</c>

00:51:47.670 --> 00:51:47.680 align:start position:0%
unpredictable behavior. It's only safe
 

00:51:47.680 --> 00:51:49.510 align:start position:0%
unpredictable behavior. It's only safe
to<00:51:47.920><c> deallocate</c><00:51:48.559><c> after</c><00:51:48.800><c> the</c><00:51:48.880><c> matching</c><00:51:49.280><c> weight</c>

00:51:49.510 --> 00:51:49.520 align:start position:0%
to deallocate after the matching weight
 

00:51:49.520 --> 00:51:50.790 align:start position:0%
to deallocate after the matching weight
which<00:51:49.760><c> is</c><00:51:49.839><c> the</c><00:51:50.000><c> same</c><00:51:50.079><c> thing</c><00:51:50.240><c> as</c><00:51:50.400><c> saying</c><00:51:50.559><c> the</c>

00:51:50.790 --> 00:51:50.800 align:start position:0%
which is the same thing as saying the
 

00:51:50.800 --> 00:51:53.030 align:start position:0%
which is the same thing as saying the
receive<00:51:51.680><c> Ricky</c><00:51:52.319><c> saying</c><00:51:52.480><c> that</c><00:51:52.640><c> receive</c><00:51:52.960><c> has</c>

00:51:53.030 --> 00:51:53.040 align:start position:0%
receive Ricky saying that receive has
 

00:51:53.040 --> 00:51:54.390 align:start position:0%
receive Ricky saying that receive has
been<00:51:53.200><c> posted.</c><00:51:53.520><c> If</c><00:51:53.680><c> you</c><00:51:53.760><c> wait</c><00:51:54.000><c> on</c><00:51:54.160><c> this</c>

00:51:54.390 --> 00:51:54.400 align:start position:0%
been posted. If you wait on this
 

00:51:54.400 --> 00:51:55.670 align:start position:0%
been posted. If you wait on this
communication<00:51:54.880><c> and</c><00:51:55.040><c> and</c><00:51:55.200><c> it's</c><00:51:55.359><c> it's</c>

00:51:55.670 --> 00:51:55.680 align:start position:0%
communication and and it's it's
 

00:51:55.680 --> 00:51:57.430 align:start position:0%
communication and and it's it's
completed<00:51:56.240><c> that</c><00:51:56.480><c> means</c><00:51:56.640><c> the</c><00:51:56.880><c> receiver</c><00:51:57.280><c> has</c>

00:51:57.430 --> 00:51:57.440 align:start position:0%
completed that means the receiver has
 

00:51:57.440 --> 00:51:59.829 align:start position:0%
completed that means the receiver has
been<00:51:57.680><c> cooked</c><00:51:58.640><c> and</c><00:51:58.800><c> you</c><00:51:58.960><c> get</c><00:51:59.200><c> identical</c><00:51:59.599><c> issues</c>

00:51:59.829 --> 00:51:59.839 align:start position:0%
been cooked and you get identical issues
 

00:51:59.839 --> 00:52:02.950 align:start position:0%
been cooked and you get identical issues
in<00:52:00.000><c> C</c><00:52:00.240><c> using</c><00:52:00.400><c> mal</c><00:52:00.800><c> control.</c><00:52:01.680><c> However,</c><00:52:02.640><c> because</c>

00:52:02.950 --> 00:52:02.960 align:start position:0%
in C using mal control. However, because
 

00:52:02.960 --> 00:52:04.549 align:start position:0%
in C using mal control. However, because
for<00:52:03.280><c> channel</c><00:52:03.520><c> has</c><00:52:03.760><c> quite</c><00:52:04.000><c> sophisticated</c>

00:52:04.549 --> 00:52:04.559 align:start position:0%
for channel has quite sophisticated
 

00:52:04.559 --> 00:52:07.190 align:start position:0%
for channel has quite sophisticated
array<00:52:04.880><c> handling</c><00:52:05.760><c> this</c><00:52:06.000><c> can</c><00:52:06.160><c> happen</c><00:52:06.400><c> in</c><00:52:06.640><c> a</c><00:52:06.800><c> in</c><00:52:06.960><c> a</c>

00:52:07.190 --> 00:52:07.200 align:start position:0%
array handling this can happen in a in a
 

00:52:07.200 --> 00:52:09.589 align:start position:0%
array handling this can happen in a in a
non-obvious<00:52:07.920><c> way.</c><00:52:08.480><c> And</c><00:52:08.640><c> so</c><00:52:08.800><c> the</c><00:52:09.119><c> problem</c><00:52:09.359><c> here</c>

00:52:09.589 --> 00:52:09.599 align:start position:0%
non-obvious way. And so the problem here
 

00:52:09.599 --> 00:52:14.150 align:start position:0%
non-obvious way. And so the problem here
is<00:52:10.720><c> I</c><00:52:10.960><c> do</c><00:52:11.200><c> real</c><00:52:11.520><c> dimension</c><00:52:12.160><c> mn</c><00:52:12.720><c> array</c><00:52:13.680><c> and</c><00:52:13.920><c> I</c>

00:52:14.150 --> 00:52:14.160 align:start position:0%
is I do real dimension mn array and I
 

00:52:14.160 --> 00:52:17.349 align:start position:0%
is I do real dimension mn array and I
say<00:52:14.400><c> I</c><00:52:14.640><c> want</c><00:52:14.720><c> to</c><00:52:14.960><c> send</c><00:52:15.200><c> this</c><00:52:15.760><c> second</c><00:52:16.160><c> index</c><00:52:17.200><c> uh</c>

00:52:17.349 --> 00:52:17.359 align:start position:0%
say I want to send this second index uh
 

00:52:17.359 --> 00:52:19.270 align:start position:0%
say I want to send this second index uh
which<00:52:17.520><c> is</c><00:52:17.599><c> non-ontiguous</c><00:52:18.319><c> in</c><00:52:18.480><c> for</c><00:52:18.960><c> what</c><00:52:19.119><c> I</c>

00:52:19.270 --> 00:52:19.280 align:start position:0%
which is non-ontiguous in for what I
 

00:52:19.280 --> 00:52:20.870 align:start position:0%
which is non-ontiguous in for what I
will<00:52:19.359><c> do</c><00:52:19.520><c> is</c><00:52:19.680><c> I</c><00:52:19.839><c> will</c><00:52:20.160><c> I</c><00:52:20.400><c> will</c><00:52:20.480><c> just</c><00:52:20.640><c> do</c><00:52:20.720><c> an</c>

00:52:20.870 --> 00:52:20.880 align:start position:0%
will do is I will I will just do an
 

00:52:20.880 --> 00:52:23.750 align:start position:0%
will do is I will I will just do an
array<00:52:21.119><c> syntax</c><00:52:21.680><c> one</c><00:52:21.920><c> to</c><00:52:22.079><c> n.</c><00:52:22.400><c> Okay.</c>

00:52:23.750 --> 00:52:23.760 align:start position:0%
array syntax one to n. Okay.
 

00:52:23.760 --> 00:52:25.589 align:start position:0%
array syntax one to n. Okay.
Now<00:52:24.000><c> this</c><00:52:24.240><c> looks</c><00:52:24.559><c> okay</c><00:52:24.800><c> but</c><00:52:25.040><c> probably</c><00:52:25.359><c> what</c>

00:52:25.589 --> 00:52:25.599 align:start position:0%
Now this looks okay but probably what
 

00:52:25.599 --> 00:52:28.710 align:start position:0%
Now this looks okay but probably what
the<00:52:25.760><c> compiler</c><00:52:26.240><c> does</c><00:52:26.400><c> is</c><00:52:26.880><c> under</c><00:52:27.200><c> the</c><00:52:27.359><c> hood</c><00:52:28.240><c> it</c>

00:52:28.710 --> 00:52:28.720 align:start position:0%
the compiler does is under the hood it
 

00:52:28.720 --> 00:52:30.870 align:start position:0%
the compiler does is under the hood it
when<00:52:28.960><c> it</c><00:52:29.200><c> sees</c><00:52:29.440><c> this</c><00:52:29.760><c> before</c><00:52:30.160><c> what</c><00:52:30.400><c> it</c><00:52:30.559><c> does</c><00:52:30.720><c> is</c>

00:52:30.870 --> 00:52:30.880 align:start position:0%
when it sees this before what it does is
 

00:52:30.880 --> 00:52:33.670 align:start position:0%
when it sees this before what it does is
it<00:52:31.119><c> does</c><00:52:31.200><c> a</c><00:52:31.440><c> copy</c><00:52:31.760><c> in</c><00:52:32.480><c> call</c><00:52:32.720><c> the</c><00:52:32.960><c> function</c><00:52:33.280><c> copy</c>

00:52:33.670 --> 00:52:33.680 align:start position:0%
it does a copy in call the function copy
 

00:52:33.680 --> 00:52:37.430 align:start position:0%
it does a copy in call the function copy
out.<00:52:34.000><c> Okay.</c>

00:52:37.430 --> 00:52:37.440 align:start position:0%
 
 

00:52:37.440 --> 00:52:41.270 align:start position:0%
 
So,<00:52:38.559><c> unfortunately,</c><00:52:39.520><c> at</c><00:52:39.520><c> least</c><00:52:40.000><c> in</c><00:52:40.240><c> the</c><00:52:40.800><c> older</c>

00:52:41.270 --> 00:52:41.280 align:start position:0%
So, unfortunately, at least in the older
 

00:52:41.280 --> 00:52:43.349 align:start position:0%
So, unfortunately, at least in the older
for<00:52:41.680><c> interfaces,</c>

00:52:43.349 --> 00:52:43.359 align:start position:0%
for interfaces,
 

00:52:43.359 --> 00:52:45.589 align:start position:0%
for interfaces,
the<00:52:43.599><c> compiler</c><00:52:44.160><c> did</c><00:52:44.400><c> not</c><00:52:44.640><c> know</c><00:52:45.040><c> that</c><00:52:45.359><c> this</c>

00:52:45.589 --> 00:52:45.599 align:start position:0%
the compiler did not know that this
 

00:52:45.599 --> 00:52:50.470 align:start position:0%
the compiler did not know that this
function<00:52:46.000><c> NPI</c><00:52:46.480><c> extend</c><00:52:47.200><c> had</c><00:52:47.839><c> um</c><00:52:48.079><c> long-term</c><00:52:49.440><c> um</c>

00:52:50.470 --> 00:52:50.480 align:start position:0%
function NPI extend had um long-term um
 

00:52:50.480 --> 00:52:52.309 align:start position:0%
function NPI extend had um long-term um
effects<00:52:51.200><c> that</c><00:52:51.359><c> the</c><00:52:51.599><c> compiler</c><00:52:51.839><c> is</c><00:52:52.000><c> assuming</c>

00:52:52.309 --> 00:52:52.319 align:start position:0%
effects that the compiler is assuming
 

00:52:52.319 --> 00:52:54.549 align:start position:0%
effects that the compiler is assuming
that<00:52:52.559><c> once</c><00:52:52.800><c> this</c><00:52:53.280><c> this</c><00:52:53.680><c> function</c><00:52:54.000><c> returns</c><00:52:54.400><c> to</c>

00:52:54.549 --> 00:52:54.559 align:start position:0%
that once this this function returns to
 

00:52:54.559 --> 00:52:56.549 align:start position:0%
that once this this function returns to
the<00:52:54.720><c> main</c><00:52:54.960><c> program,</c><00:52:55.920><c> everything</c><00:52:56.240><c> is</c>

00:52:56.549 --> 00:52:56.559 align:start position:0%
the main program, everything is
 

00:52:56.559 --> 00:53:00.150 align:start position:0%
the main program, everything is
completed.<00:52:57.520><c> And</c><00:52:57.760><c> so,</c><00:52:58.240><c> copy</c><00:52:58.640><c> in</c><00:52:59.359><c> call</c><00:52:59.680><c> function</c>

00:53:00.150 --> 00:53:00.160 align:start position:0%
completed. And so, copy in call function
 

00:53:00.160 --> 00:53:01.990 align:start position:0%
completed. And so, copy in call function
copy<00:53:00.480><c> back</c><00:53:00.640><c> out</c><00:53:00.960><c> perfectly</c><00:53:01.280><c> legitimate.</c><00:53:01.839><c> The</c>

00:53:01.990 --> 00:53:02.000 align:start position:0%
copy back out perfectly legitimate. The
 

00:53:02.000 --> 00:53:03.990 align:start position:0%
copy back out perfectly legitimate. The
problem<00:53:02.160><c> is</c><00:53:02.400><c> we</c><00:53:02.559><c> know</c><00:53:02.720><c> that</c><00:53:02.880><c> this</c><00:53:03.040><c> has</c><00:53:03.599><c> this</c><00:53:03.839><c> is</c>

00:53:03.990 --> 00:53:04.000 align:start position:0%
problem is we know that this has this is
 

00:53:04.000 --> 00:53:05.910 align:start position:0%
problem is we know that this has this is
carrying<00:53:04.240><c> on</c><00:53:04.400><c> after</c><00:53:04.720><c> the</c><00:53:04.880><c> call</c><00:53:05.200><c> returns</c><00:53:05.760><c> and</c>

00:53:05.910 --> 00:53:05.920 align:start position:0%
carrying on after the call returns and
 

00:53:05.920 --> 00:53:08.870 align:start position:0%
carrying on after the call returns and
so<00:53:06.079><c> if</c><00:53:06.240><c> the</c><00:53:06.400><c> compiler</c><00:53:06.800><c> does</c><00:53:07.040><c> this</c><00:53:08.240><c> then</c><00:53:08.640><c> you've</c>

00:53:08.870 --> 00:53:08.880 align:start position:0%
so if the compiler does this then you've
 

00:53:08.880 --> 00:53:11.829 align:start position:0%
so if the compiler does this then you've
got<00:53:09.040><c> a</c><00:53:09.280><c> problem.</c><00:53:10.160><c> So</c><00:53:10.480><c> mo</c><00:53:10.880><c> more</c><00:53:11.119><c> modern</c><00:53:11.520><c> m</c><00:53:11.680><c> if</c>

00:53:11.829 --> 00:53:11.839 align:start position:0%
got a problem. So mo more modern m if
 

00:53:11.839 --> 00:53:14.230 align:start position:0%
got a problem. So mo more modern m if
you<00:53:12.000><c> use</c><00:53:12.160><c> the</c><00:53:12.319><c> forran</c><00:53:12.960><c> 2008</c><00:53:13.520><c> interface</c><00:53:14.000><c> you're</c>

00:53:14.230 --> 00:53:14.240 align:start position:0%
you use the forran 2008 interface you're
 

00:53:14.240 --> 00:53:16.230 align:start position:0%
you use the forran 2008 interface you're
probably<00:53:14.559><c> safe</c><00:53:14.880><c> here.</c><00:53:15.760><c> If</c><00:53:15.920><c> you</c><00:53:16.000><c> use</c><00:53:16.160><c> the</c>

00:53:16.230 --> 00:53:16.240 align:start position:0%
probably safe here. If you use the
 

00:53:16.240 --> 00:53:19.510 align:start position:0%
probably safe here. If you use the
forran<00:53:16.800><c> 90</c><00:53:17.040><c> interface</c><00:53:17.760><c> you're</c><00:53:18.079><c> probably</c><00:53:18.400><c> not.</c>

00:53:19.510 --> 00:53:19.520 align:start position:0%
forran 90 interface you're probably not.
 

00:53:19.520 --> 00:53:23.190 align:start position:0%
forran 90 interface you're probably not.
Um<00:53:20.079><c> so</c><00:53:21.440><c> um</c><00:53:21.760><c> it</c><00:53:22.000><c> is</c><00:53:22.160><c> a</c><00:53:22.319><c> subtlety.</c><00:53:22.800><c> So</c><00:53:22.880><c> you</c><00:53:23.040><c> have</c>

00:53:23.190 --> 00:53:23.200 align:start position:0%
Um so um it is a subtlety. So you have
 

00:53:23.200 --> 00:53:26.150 align:start position:0%
Um so um it is a subtlety. So you have
to<00:53:23.280><c> be</c><00:53:23.440><c> careful</c><00:53:23.839><c> if</c><00:53:24.079><c> you</c><00:53:24.160><c> use</c><00:53:24.480><c> array</c><00:53:24.960><c> syntax.</c>

00:53:26.150 --> 00:53:26.160 align:start position:0%
to be careful if you use array syntax.
 

00:53:26.160 --> 00:53:28.390 align:start position:0%
to be careful if you use array syntax.
Um<00:53:27.040><c> so</c><00:53:27.359><c> it's</c><00:53:27.680><c> only</c><00:53:27.920><c> an</c><00:53:28.000><c> issue</c><00:53:28.240><c> for</c>

00:53:28.390 --> 00:53:28.400 align:start position:0%
Um so it's only an issue for
 

00:53:28.400 --> 00:53:30.150 align:start position:0%
Um so it's only an issue for
non-blocking<00:53:28.960><c> operations.</c><00:53:29.520><c> Okay,</c><00:53:29.920><c> for</c>

00:53:30.150 --> 00:53:30.160 align:start position:0%
non-blocking operations. Okay, for
 

00:53:30.160 --> 00:53:31.670 align:start position:0%
non-blocking operations. Okay, for
blocking<00:53:30.640><c> operations,</c><00:53:31.200><c> this</c><00:53:31.440><c> would</c><00:53:31.599><c> be</c>

00:53:31.670 --> 00:53:31.680 align:start position:0%
blocking operations, this would be
 

00:53:31.680 --> 00:53:34.309 align:start position:0%
blocking operations, this would be
absolutely<00:53:32.160><c> fine</c><00:53:33.119><c> because</c><00:53:33.839><c> when</c><00:53:34.079><c> this</c>

00:53:34.309 --> 00:53:34.319 align:start position:0%
absolutely fine because when this
 

00:53:34.319 --> 00:53:35.990 align:start position:0%
absolutely fine because when this
routine<00:53:34.640><c> is</c><00:53:34.880><c> returned,</c><00:53:35.280><c> we</c><00:53:35.520><c> would</c><00:53:35.680><c> know</c><00:53:35.839><c> that</c>

00:53:35.990 --> 00:53:36.000 align:start position:0%
routine is returned, we would know that
 

00:53:36.000 --> 00:53:38.150 align:start position:0%
routine is returned, we would know that
it<00:53:36.240><c> had</c><00:53:36.400><c> completed</c><00:53:36.880><c> and</c><00:53:37.200><c> used</c><00:53:37.599><c> and</c><00:53:37.839><c> finished</c>

00:53:38.150 --> 00:53:38.160 align:start position:0%
it had completed and used and finished
 

00:53:38.160 --> 00:53:39.670 align:start position:0%
it had completed and used and finished
all<00:53:38.319><c> its</c><00:53:38.559><c> arguments</c><00:53:39.280><c> just</c><00:53:39.520><c> because</c>

00:53:39.670 --> 00:53:39.680 align:start position:0%
all its arguments just because
 

00:53:39.680 --> 00:53:41.910 align:start position:0%
all its arguments just because
non-blocking<00:53:40.319><c> operations</c><00:53:40.800><c> are</c><00:53:41.520><c> what</c><00:53:41.760><c> you</c>

00:53:41.910 --> 00:53:41.920 align:start position:0%
non-blocking operations are what you
 

00:53:41.920 --> 00:53:43.510 align:start position:0%
non-blocking operations are what you
might<00:53:42.079><c> call</c><00:53:42.240><c> asynchronous.</c><00:53:43.040><c> They</c><00:53:43.280><c> carry</c><00:53:43.440><c> on</c>

00:53:43.510 --> 00:53:43.520 align:start position:0%
might call asynchronous. They carry on
 

00:53:43.520 --> 00:53:45.670 align:start position:0%
might call asynchronous. They carry on
in<00:53:43.760><c> the</c><00:53:43.839><c> background.</c><00:53:44.160><c> You</c><00:53:44.400><c> get</c><00:53:44.480><c> this</c><00:53:44.720><c> problem.</c>

00:53:45.670 --> 00:53:45.680 align:start position:0%
in the background. You get this problem.
 

00:53:45.680 --> 00:53:49.190 align:start position:0%
in the background. You get this problem.
Um<00:53:46.079><c> so</c><00:53:46.640><c> um</c><00:53:46.720><c> the</c><00:53:46.960><c> advice</c><00:53:47.280><c> is</c><00:53:48.160><c> um</c><00:53:48.400><c> avoid</c><00:53:48.800><c> array</c>

00:53:49.190 --> 00:53:49.200 align:start position:0%
Um so um the advice is um avoid array
 

00:53:49.200 --> 00:53:53.670 align:start position:0%
Um so um the advice is um avoid array
syntax<00:53:50.319><c> and</c><00:53:50.640><c> use</c><00:53:51.200><c> um</c><00:53:51.839><c> uh</c><00:53:52.000><c> use</c><00:53:52.240><c> vectors.</c>

00:53:53.670 --> 00:53:53.680 align:start position:0%
syntax and use um uh use vectors.
 

00:53:53.680 --> 00:53:57.750 align:start position:0%
syntax and use um uh use vectors.
However,<00:53:54.480><c> this</c><00:53:55.280><c> has</c><00:53:55.599><c> been</c><00:53:56.000><c> solved</c><00:53:57.200><c> for</c><00:53:57.440><c> more</c>

00:53:57.750 --> 00:53:57.760 align:start position:0%
However, this has been solved for more
 

00:53:57.760 --> 00:53:59.349 align:start position:0%
However, this has been solved for more
modern

00:53:59.349 --> 00:53:59.359 align:start position:0%
modern
 

00:53:59.359 --> 00:54:01.990 align:start position:0%
modern
um<00:53:59.599><c> interfaces</c><00:54:00.160><c> where</c><00:54:00.480><c> forran</c><00:54:01.119><c> now</c><00:54:01.520><c> can</c><00:54:01.760><c> be</c>

00:54:01.990 --> 00:54:02.000 align:start position:0%
um interfaces where forran now can be
 

00:54:02.000 --> 00:54:04.069 align:start position:0%
um interfaces where forran now can be
told<00:54:02.319><c> that</c><00:54:02.480><c> operations</c><00:54:03.119><c> have</c><00:54:03.359><c> non</c><00:54:03.760><c> have</c>

00:54:04.069 --> 00:54:04.079 align:start position:0%
told that operations have non have
 

00:54:04.079 --> 00:54:06.309 align:start position:0%
told that operations have non have
long-term<00:54:04.640><c> effects</c><00:54:05.599><c> through</c><00:54:05.839><c> the</c><00:54:06.000><c> I</c><00:54:06.160><c> think</c>

00:54:06.309 --> 00:54:06.319 align:start position:0%
long-term effects through the I think
 

00:54:06.319 --> 00:54:08.950 align:start position:0%
long-term effects through the I think
it's<00:54:06.480><c> the</c><00:54:07.119><c> is</c><00:54:07.280><c> it</c><00:54:07.440><c> asynchronous?</c><00:54:08.400><c> Um</c><00:54:08.640><c> I</c><00:54:08.880><c> can't</c>

00:54:08.950 --> 00:54:08.960 align:start position:0%
it's the is it asynchronous? Um I can't
 

00:54:08.960 --> 00:54:11.670 align:start position:0%
it's the is it asynchronous? Um I can't
remember<00:54:09.119><c> what</c><00:54:09.280><c> the</c><00:54:09.359><c> attribute</c><00:54:09.760><c> is.</c><00:54:10.400><c> Um</c><00:54:10.800><c> so</c><00:54:11.520><c> if</c>

00:54:11.670 --> 00:54:11.680 align:start position:0%
remember what the attribute is. Um so if
 

00:54:11.680 --> 00:54:15.270 align:start position:0%
remember what the attribute is. Um so if
you<00:54:11.920><c> if</c><00:54:12.480><c> if</c><00:54:12.720><c> you</c><00:54:13.440><c> there</c><00:54:13.680><c> is</c><00:54:13.920><c> a</c><00:54:14.160><c> v</c><00:54:14.400><c> there</c><00:54:14.640><c> is</c><00:54:14.800><c> a</c><00:54:14.960><c> a</c>

00:54:15.270 --> 00:54:15.280 align:start position:0%
you if if you there is a v there is a a
 

00:54:15.280 --> 00:54:17.829 align:start position:0%
you if if you there is a v there is a a
variable<00:54:15.680><c> called</c><00:54:15.839><c> npi</c><00:54:16.319><c> subarray</c><00:54:16.960><c> supported</c>

00:54:17.829 --> 00:54:17.839 align:start position:0%
variable called npi subarray supported
 

00:54:17.839 --> 00:54:20.710 align:start position:0%
variable called npi subarray supported
which<00:54:18.079><c> which</c><00:54:18.559><c> tells</c><00:54:18.800><c> you</c><00:54:19.119><c> so</c><00:54:19.359><c> if</c><00:54:19.680><c> npi</c><00:54:20.160><c> subarray</c>

00:54:20.710 --> 00:54:20.720 align:start position:0%
which which tells you so if npi subarray
 

00:54:20.720 --> 00:54:24.230 align:start position:0%
which which tells you so if npi subarray
supported<00:54:21.200><c> is</c><00:54:21.440><c> true</c><00:54:22.160><c> then</c><00:54:22.480><c> this</c><00:54:22.800><c> code</c><00:54:23.839><c> will</c>

00:54:24.230 --> 00:54:24.240 align:start position:0%
supported is true then this code will
 

00:54:24.240 --> 00:54:27.750 align:start position:0%
supported is true then this code will
work<00:54:25.440><c> because</c><00:54:25.839><c> the</c><00:54:26.160><c> library</c><00:54:26.559><c> or</c><00:54:26.720><c> the</c><00:54:27.440><c> note</c>

00:54:27.750 --> 00:54:27.760 align:start position:0%
work because the library or the note
 

00:54:27.760 --> 00:54:31.030 align:start position:0%
work because the library or the note
does<00:54:28.000><c> the</c><00:54:28.240><c> right</c><00:54:28.480><c> thing</c><00:54:28.880><c> okay</c><00:54:29.200><c> it</c><00:54:29.440><c> it</c><00:54:29.680><c> it</c><00:54:30.800><c> makes</c>

00:54:31.030 --> 00:54:31.040 align:start position:0%
does the right thing okay it it it makes
 

00:54:31.040 --> 00:54:34.710 align:start position:0%
does the right thing okay it it it makes
sure<00:54:31.200><c> that</c><00:54:31.440><c> the</c><00:54:31.760><c> data</c><00:54:32.079><c> is</c><00:54:32.640><c> persistent</c><00:54:33.680><c> until</c>

00:54:34.710 --> 00:54:34.720 align:start position:0%
sure that the data is persistent until
 

00:54:34.720 --> 00:54:36.549 align:start position:0%
sure that the data is persistent until
the<00:54:34.960><c> operation</c><00:54:35.440><c> has</c><00:54:35.599><c> been</c><00:54:35.760><c> waited</c><00:54:36.079><c> on</c><00:54:36.319><c> is</c>

00:54:36.549 --> 00:54:36.559 align:start position:0%
the operation has been waited on is
 

00:54:36.559 --> 00:54:39.109 align:start position:0%
the operation has been waited on is
completed<00:54:37.520><c> so</c><00:54:38.000><c> it</c><00:54:38.160><c> is</c><00:54:38.319><c> a</c><00:54:38.480><c> slightly</c><00:54:38.800><c> subtle</c>

00:54:39.109 --> 00:54:39.119 align:start position:0%
completed so it is a slightly subtle
 

00:54:39.119 --> 00:54:40.790 align:start position:0%
completed so it is a slightly subtle
point<00:54:39.440><c> but</c><00:54:39.680><c> I</c><00:54:39.920><c> have</c><00:54:40.079><c> seen</c><00:54:40.400><c> problems</c><00:54:40.640><c> with</c>

00:54:40.790 --> 00:54:40.800 align:start position:0%
point but I have seen problems with
 

00:54:40.800 --> 00:54:44.150 align:start position:0%
point but I have seen problems with
this.<00:54:41.359><c> Um,</c><00:54:42.480><c> and</c><00:54:42.720><c> so</c><00:54:42.880><c> I've</c><00:54:43.119><c> I</c><00:54:43.440><c> wrote</c><00:54:43.599><c> a</c><00:54:43.680><c> simple</c><00:54:43.920><c> a</c>

00:54:44.150 --> 00:54:44.160 align:start position:0%
this. Um, and so I've I wrote a simple a
 

00:54:44.160 --> 00:54:45.990 align:start position:0%
this. Um, and so I've I wrote a simple a
little<00:54:44.559><c> test</c><00:54:44.800><c> code</c><00:54:45.040><c> for</c><00:54:45.200><c> this.</c><00:54:45.599><c> But</c><00:54:45.680><c> there</c><00:54:45.839><c> is</c>

00:54:45.990 --> 00:54:46.000 align:start position:0%
little test code for this. But there is
 

00:54:46.000 --> 00:54:49.990 align:start position:0%
little test code for this. But there is
now<00:54:46.720><c> if</c><00:54:47.520><c> you</c><00:54:47.599><c> if</c><00:54:47.920><c> you</c><00:54:48.000><c> use</c><00:54:48.160><c> the</c><00:54:48.319><c> for</c><00:54:48.880><c> 2008</c><00:54:49.520><c> space</c>

00:54:49.990 --> 00:54:50.000 align:start position:0%
now if you if you use the for 2008 space
 

00:54:50.000 --> 00:54:52.549 align:start position:0%
now if you if you use the for 2008 space
then<00:54:50.640><c> typically</c><00:54:51.040><c> this</c><00:54:51.280><c> this</c><00:54:51.359><c> this</c><00:54:51.920><c> is</c><00:54:52.079><c> not</c><00:54:52.319><c> a</c>

00:54:52.549 --> 00:54:52.559 align:start position:0%
then typically this this this is not a
 

00:54:52.559 --> 00:54:54.390 align:start position:0%
then typically this this this is not a
problem.<00:54:53.280><c> But</c><00:54:53.359><c> if</c><00:54:53.520><c> you're</c><00:54:53.680><c> paranoid,</c><00:54:54.240><c> you</c>

00:54:54.390 --> 00:54:54.400 align:start position:0%
problem. But if you're paranoid, you
 

00:54:54.400 --> 00:54:56.390 align:start position:0%
problem. But if you're paranoid, you
should<00:54:54.559><c> check</c><00:54:54.880><c> by</c><00:54:55.119><c> checking</c><00:54:55.440><c> is</c><00:54:55.760><c> is</c><00:54:56.000><c> Mi</c>

00:54:56.390 --> 00:54:56.400 align:start position:0%
should check by checking is is Mi
 

00:54:56.400 --> 00:55:02.069 align:start position:0%
should check by checking is is Mi
subarray<00:54:56.960><c> supported</c><00:54:57.920><c> uh</c><00:54:58.160><c> true</c><00:54:58.400><c> or</c><00:54:58.640><c> not.</c>

00:55:02.069 --> 00:55:02.079 align:start position:0%
 
 

00:55:02.079 --> 00:55:04.309 align:start position:0%
 
Um<00:55:02.559><c> there's</c><00:55:02.800><c> a</c><00:55:03.040><c> lot</c><00:55:03.119><c> here</c><00:55:03.359><c> about</c><00:55:03.839><c> allocation</c>

00:55:04.309 --> 00:55:04.319 align:start position:0%
Um there's a lot here about allocation
 

00:55:04.319 --> 00:55:09.190 align:start position:0%
Um there's a lot here about allocation
issues<00:55:04.720><c> with</c><00:55:04.960><c> C.</c><00:55:05.440><c> Um,</c><00:55:06.880><c> I</c><00:55:07.280><c> don't</c><00:55:08.720><c> want</c><00:55:08.880><c> to</c><00:55:09.040><c> go</c>

00:55:09.190 --> 00:55:09.200 align:start position:0%
issues with C. Um, I don't want to go
 

00:55:09.200 --> 00:55:11.589 align:start position:0%
issues with C. Um, I don't want to go
into<00:55:09.440><c> this</c><00:55:09.760><c> in</c><00:55:09.920><c> in</c><00:55:10.160><c> a</c><00:55:10.319><c> huge</c><00:55:10.559><c> amount</c><00:55:10.880><c> of</c><00:55:11.040><c> of</c><00:55:11.040><c> of</c>

00:55:11.589 --> 00:55:11.599 align:start position:0%
into this in in a huge amount of of of
 

00:55:11.599 --> 00:55:13.589 align:start position:0%
into this in in a huge amount of of of
of of<00:55:12.079><c> of</c>

00:55:13.589 --> 00:55:13.599 align:start position:0%
of of of
 

00:55:13.599 --> 00:55:15.670 align:start position:0%
of of of
detail,<00:55:14.240><c> but</c><00:55:14.480><c> the</c><00:55:14.640><c> problem</c><00:55:14.800><c> with</c><00:55:15.040><c> C</c><00:55:15.280><c> is</c><00:55:15.520><c> that</c>

00:55:15.670 --> 00:55:15.680 align:start position:0%
detail, but the problem with C is that
 

00:55:15.680 --> 00:55:17.270 align:start position:0%
detail, but the problem with C is that
if<00:55:15.760><c> you</c><00:55:15.920><c> do</c><00:55:16.000><c> multi-dimensional</c><00:55:16.720><c> arrays</c><00:55:17.119><c> and</c>

00:55:17.270 --> 00:55:17.280 align:start position:0%
if you do multi-dimensional arrays and
 

00:55:17.280 --> 00:55:19.109 align:start position:0%
if you do multi-dimensional arrays and
you<00:55:17.440><c> do</c><00:55:17.520><c> pointers</c><00:55:17.920><c> to</c><00:55:18.160><c> pointers,</c><00:55:18.640><c> which</c><00:55:18.800><c> is</c><00:55:18.960><c> a</c>

00:55:19.109 --> 00:55:19.119 align:start position:0%
you do pointers to pointers, which is a
 

00:55:19.119 --> 00:55:21.109 align:start position:0%
you do pointers to pointers, which is a
standard<00:55:19.440><c> way</c><00:55:19.520><c> of</c><00:55:19.760><c> doing</c><00:55:20.000><c> things,</c><00:55:20.559><c> then</c><00:55:20.800><c> your</c>

00:55:21.109 --> 00:55:21.119 align:start position:0%
standard way of doing things, then your
 

00:55:21.119 --> 00:55:23.190 align:start position:0%
standard way of doing things, then your
data<00:55:21.359><c> is</c><00:55:21.599><c> not</c><00:55:21.839><c> contiguous.</c><00:55:22.880><c> You</c><00:55:23.040><c> have</c>

00:55:23.190 --> 00:55:23.200 align:start position:0%
data is not contiguous. You have
 

00:55:23.200 --> 00:55:25.829 align:start position:0%
data is not contiguous. You have
fragmented<00:55:24.000><c> data</c><00:55:24.960><c> and</c><00:55:25.200><c> that's</c><00:55:25.359><c> the</c><00:55:25.599><c> problem.</c>

00:55:25.829 --> 00:55:25.839 align:start position:0%
fragmented data and that's the problem.
 

00:55:25.839 --> 00:55:29.270 align:start position:0%
fragmented data and that's the problem.
both<00:55:26.559><c> that</c><00:55:26.800><c> means</c><00:55:26.960><c> that</c><00:55:27.119><c> it's</c><00:55:27.280><c> it's</c><00:55:27.359><c> it's</c>

00:55:29.270 --> 00:55:29.280 align:start position:0%
both that means that it's it's it's
 

00:55:29.280 --> 00:55:32.069 align:start position:0%
both that means that it's it's it's
if<00:55:29.440><c> you</c><00:55:29.599><c> if</c><00:55:29.760><c> if</c><00:55:29.839><c> if</c><00:55:30.319><c> you</c><00:55:30.960><c> if</c><00:55:31.200><c> you</c><00:55:31.359><c> allocate</c><00:55:31.920><c> two</c>

00:55:32.069 --> 00:55:32.079 align:start position:0%
if you if if if you if you allocate two
 

00:55:32.079 --> 00:55:33.910 align:start position:0%
if you if if if you if you allocate two
dimensional<00:55:32.480><c> arrays</c><00:55:32.800><c> in</c><00:55:32.960><c> C</c><00:55:33.359><c> by</c><00:55:33.599><c> first</c>

00:55:33.910 --> 00:55:33.920 align:start position:0%
dimensional arrays in C by first
 

00:55:33.920 --> 00:55:36.470 align:start position:0%
dimensional arrays in C by first
allocating<00:55:34.400><c> a</c><00:55:34.640><c> bunch</c><00:55:34.800><c> of</c><00:55:34.880><c> of</c><00:55:35.440><c> pointers</c><00:55:35.839><c> to</c><00:55:36.000><c> the</c>

00:55:36.470 --> 00:55:36.480 align:start position:0%
allocating a bunch of of pointers to the
 

00:55:36.480 --> 00:55:38.069 align:start position:0%
allocating a bunch of of pointers to the
to<00:55:36.720><c> the</c><00:55:37.040><c> rows</c><00:55:37.200><c> if</c><00:55:37.359><c> you</c><00:55:37.440><c> want</c><00:55:37.520><c> to</c><00:55:37.680><c> call</c><00:55:37.760><c> it</c><00:55:37.920><c> that</c>

00:55:38.069 --> 00:55:38.079 align:start position:0%
to the rows if you want to call it that
 

00:55:38.079 --> 00:55:39.510 align:start position:0%
to the rows if you want to call it that
and<00:55:38.240><c> then</c><00:55:38.319><c> then</c><00:55:38.559><c> allocating</c><00:55:39.040><c> the</c><00:55:39.359><c> rows</c>

00:55:39.510 --> 00:55:39.520 align:start position:0%
and then then allocating the rows
 

00:55:39.520 --> 00:55:42.390 align:start position:0%
and then then allocating the rows
themselves<00:55:40.160><c> you</c><00:55:40.400><c> get</c><00:55:40.559><c> fragmented</c><00:55:41.280><c> data</c><00:55:42.160><c> and</c>

00:55:42.390 --> 00:55:42.400 align:start position:0%
themselves you get fragmented data and
 

00:55:42.400 --> 00:55:44.710 align:start position:0%
themselves you get fragmented data and
that<00:55:42.720><c> gives</c><00:55:42.880><c> you</c><00:55:43.200><c> problems.</c><00:55:44.079><c> What</c><00:55:44.240><c> you</c><00:55:44.480><c> really</c>

00:55:44.710 --> 00:55:44.720 align:start position:0%
that gives you problems. What you really
 

00:55:44.720 --> 00:55:46.390 align:start position:0%
that gives you problems. What you really
want<00:55:44.960><c> is</c><00:55:45.200><c> you</c><00:55:45.359><c> want</c><00:55:45.520><c> to</c><00:55:45.680><c> have</c><00:55:45.839><c> so</c><00:55:46.000><c> if</c><00:55:46.160><c> you</c><00:55:46.240><c> have</c>

00:55:46.390 --> 00:55:46.400 align:start position:0%
want is you want to have so if you have
 

00:55:46.400 --> 00:55:47.430 align:start position:0%
want is you want to have so if you have
pointers<00:55:46.720><c> to</c><00:55:46.880><c> pointers</c><00:55:47.200><c> in</c><00:55:47.280><c> your</c>

00:55:47.430 --> 00:55:47.440 align:start position:0%
pointers to pointers in your
 

00:55:47.440 --> 00:55:49.030 align:start position:0%
pointers to pointers in your
multi-dimensional<00:55:48.160><c> C</c><00:55:48.319><c> arrays</c><00:55:48.720><c> you</c><00:55:48.880><c> really</c>

00:55:49.030 --> 00:55:49.040 align:start position:0%
multi-dimensional C arrays you really
 

00:55:49.040 --> 00:55:50.069 align:start position:0%
multi-dimensional C arrays you really
want<00:55:49.119><c> to</c><00:55:49.200><c> make</c><00:55:49.359><c> sure</c><00:55:49.520><c> your</c><00:55:49.680><c> data</c><00:55:49.920><c> is</c>

00:55:50.069 --> 00:55:50.079 align:start position:0%
want to make sure your data is
 

00:55:50.079 --> 00:55:51.910 align:start position:0%
want to make sure your data is
contiguous<00:55:50.559><c> and</c><00:55:50.720><c> by</c><00:55:50.880><c> default</c><00:55:51.200><c> that</c><00:55:51.440><c> won't</c><00:55:51.680><c> be</c>

00:55:51.910 --> 00:55:51.920 align:start position:0%
contiguous and by default that won't be
 

00:55:51.920 --> 00:55:55.910 align:start position:0%
contiguous and by default that won't be
true.<00:55:52.880><c> I</c><00:55:53.440><c> um</c><00:55:54.559><c> so</c><00:55:54.799><c> this</c><00:55:54.960><c> is</c><00:55:55.119><c> showing</c><00:55:55.359><c> if</c><00:55:55.599><c> if</c><00:55:55.839><c> you</c>

00:55:55.910 --> 00:55:55.920 align:start position:0%
true. I um so this is showing if if you
 

00:55:55.920 --> 00:55:58.230 align:start position:0%
true. I um so this is showing if if you
do<00:55:56.160><c> two</c><00:55:56.319><c> dimensional</c><00:55:56.640><c> arrays</c><00:55:56.960><c> like</c><00:55:57.200><c> this</c><00:55:58.000><c> you</c>

00:55:58.230 --> 00:55:58.240 align:start position:0%
do two dimensional arrays like this you
 

00:55:58.240 --> 00:56:01.829 align:start position:0%
do two dimensional arrays like this you
basically<00:55:59.280><c> you</c><00:55:59.520><c> have</c><00:55:59.599><c> a</c><00:56:00.240><c> in</c><00:56:00.559><c> double</c><00:56:00.799><c> star</c><00:56:01.200><c> x</c>

00:56:01.829 --> 00:56:01.839 align:start position:0%
basically you have a in double star x
 

00:56:01.839 --> 00:56:04.710 align:start position:0%
basically you have a in double star x
and<00:56:02.160><c> you</c><00:56:02.880><c> you</c><00:56:03.119><c> maloc</c><00:56:03.760><c> some</c><00:56:04.000><c> pointers</c><00:56:04.400><c> and</c><00:56:04.559><c> then</c>

00:56:04.710 --> 00:56:04.720 align:start position:0%
and you you maloc some pointers and then
 

00:56:04.720 --> 00:56:06.950 align:start position:0%
and you you maloc some pointers and then
you<00:56:04.880><c> individually</c><00:56:05.440><c> maloclock</c><00:56:06.000><c> the</c><00:56:06.400><c> you</c><00:56:06.640><c> might</c>

00:56:06.950 --> 00:56:06.960 align:start position:0%
you individually maloclock the you might
 

00:56:06.960 --> 00:56:09.030 align:start position:0%
you individually maloclock the you might
the<00:56:07.359><c> rows</c><00:56:07.599><c> if</c><00:56:07.760><c> you're</c><00:56:07.920><c> thinking</c><00:56:08.160><c> of</c><00:56:08.400><c> a</c><00:56:08.640><c> matrix</c>

00:56:09.030 --> 00:56:09.040 align:start position:0%
the rows if you're thinking of a matrix
 

00:56:09.040 --> 00:56:12.230 align:start position:0%
the rows if you're thinking of a matrix
here<00:56:09.760><c> then</c><00:56:10.480><c> x</c><00:56:10.880><c> points</c><00:56:11.280><c> some</c><00:56:11.440><c> pointers</c><00:56:11.920><c> which</c>

00:56:12.230 --> 00:56:12.240 align:start position:0%
here then x points some pointers which
 

00:56:12.240 --> 00:56:13.910 align:start position:0%
here then x points some pointers which
point<00:56:12.480><c> to</c><00:56:12.640><c> the</c><00:56:12.720><c> data</c><00:56:13.040><c> but</c><00:56:13.119><c> the</c><00:56:13.280><c> data</c><00:56:13.520><c> is</c><00:56:13.680><c> all</c>

00:56:13.910 --> 00:56:13.920 align:start position:0%
point to the data but the data is all
 

00:56:13.920 --> 00:56:16.069 align:start position:0%
point to the data but the data is all
over<00:56:14.079><c> the</c><00:56:14.240><c> place</c><00:56:14.400><c> in</c><00:56:14.640><c> memory</c><00:56:15.520><c> and</c><00:56:15.680><c> that</c><00:56:15.920><c> means</c>

00:56:16.069 --> 00:56:16.079 align:start position:0%
over the place in memory and that means
 

00:56:16.079 --> 00:56:18.309 align:start position:0%
over the place in memory and that means
that<00:56:16.319><c> I</c><00:56:16.559><c> you</c><00:56:16.720><c> know</c><00:56:16.799><c> there's</c><00:56:17.119><c> no</c><00:56:17.760><c> relationship</c>

00:56:18.309 --> 00:56:18.319 align:start position:0%
that I you know there's no relationship
 

00:56:18.319 --> 00:56:20.549 align:start position:0%
that I you know there's no relationship
between<00:56:18.720><c> this</c><00:56:19.040><c> element</c><00:56:19.359><c> this</c><00:56:19.599><c> element</c><00:56:20.319><c> this</c>

00:56:20.549 --> 00:56:20.559 align:start position:0%
between this element this element this
 

00:56:20.559 --> 00:56:22.069 align:start position:0%
between this element this element this
element<00:56:20.799><c> and</c><00:56:20.960><c> this</c><00:56:21.119><c> element</c><00:56:21.440><c> I</c><00:56:21.599><c> can't</c><00:56:21.760><c> use</c><00:56:21.920><c> a</c>

00:56:22.069 --> 00:56:22.079 align:start position:0%
element and this element I can't use a
 

00:56:22.079 --> 00:56:23.990 align:start position:0%
element and this element I can't use a
vector<00:56:22.400><c> to</c><00:56:22.640><c> send</c><00:56:22.880><c> that</c><00:56:23.119><c> data</c><00:56:23.440><c> because</c><00:56:23.680><c> I</c><00:56:23.920><c> don't</c>

00:56:23.990 --> 00:56:24.000 align:start position:0%
vector to send that data because I don't
 

00:56:24.000 --> 00:56:27.510 align:start position:0%
vector to send that data because I don't
know<00:56:24.079><c> where</c><00:56:24.319><c> it</c><00:56:24.400><c> is</c><00:56:24.559><c> in</c><00:56:24.799><c> memory.</c><00:56:25.599><c> Um</c><00:56:26.559><c> so</c><00:56:27.200><c> again</c>

00:56:27.510 --> 00:56:27.520 align:start position:0%
know where it is in memory. Um so again
 

00:56:27.520 --> 00:56:30.549 align:start position:0%
know where it is in memory. Um so again
there<00:56:27.680><c> is</c><00:56:28.400><c> I</c><00:56:28.720><c> I'll</c><00:56:29.119><c> I'll</c><00:56:30.160><c> provide</c><00:56:30.400><c> the</c>

00:56:30.549 --> 00:56:30.559 align:start position:0%
there is I I'll I'll provide the
 

00:56:30.559 --> 00:56:31.910 align:start position:0%
there is I I'll I'll provide the
routine.<00:56:30.880><c> There</c><00:56:31.040><c> isn't</c><00:56:31.200><c> a</c><00:56:31.359><c> routine.</c><00:56:31.760><c> There's</c>

00:56:31.910 --> 00:56:31.920 align:start position:0%
routine. There isn't a routine. There's
 

00:56:31.920 --> 00:56:33.510 align:start position:0%
routine. There isn't a routine. There's
a<00:56:32.079><c> way</c><00:56:32.160><c> of</c><00:56:32.319><c> doing</c><00:56:32.480><c> this</c><00:56:32.640><c> which</c><00:56:32.960><c> solves</c><00:56:33.200><c> the</c>

00:56:33.510 --> 00:56:33.520 align:start position:0%
a way of doing this which solves the
 

00:56:33.520 --> 00:56:35.990 align:start position:0%
a way of doing this which solves the
problem.<00:56:34.079><c> The</c><00:56:34.319><c> problem</c><00:56:34.640><c> is</c><00:56:35.280><c> you</c><00:56:35.599><c> still</c><00:56:35.760><c> have</c>

00:56:35.990 --> 00:56:36.000 align:start position:0%
problem. The problem is you still have
 

00:56:36.000 --> 00:56:38.150 align:start position:0%
problem. The problem is you still have
pointers<00:56:36.400><c> to</c><00:56:36.640><c> pointers</c><00:56:37.280><c> but</c><00:56:37.440><c> you</c><00:56:37.599><c> do</c><00:56:37.760><c> a</c><00:56:37.920><c> single</c>

00:56:38.150 --> 00:56:38.160 align:start position:0%
pointers to pointers but you do a single
 

00:56:38.160 --> 00:56:40.150 align:start position:0%
pointers to pointers but you do a single
maloc<00:56:38.640><c> for</c><00:56:38.799><c> the</c><00:56:38.960><c> data</c><00:56:39.200><c> and</c><00:56:39.440><c> fudge</c><00:56:39.839><c> up</c><00:56:40.000><c> the</c>

00:56:40.150 --> 00:56:40.160 align:start position:0%
maloc for the data and fudge up the
 

00:56:40.160 --> 00:56:42.710 align:start position:0%
maloc for the data and fudge up the
pointers<00:56:40.559><c> by</c><00:56:40.880><c> hand.</c><00:56:41.680><c> And</c><00:56:41.920><c> I</c><00:56:42.079><c> I</c><00:56:42.480><c> have</c><00:56:42.559><c> an</c>

00:56:42.710 --> 00:56:42.720 align:start position:0%
pointers by hand. And I I have an
 

00:56:42.720 --> 00:56:43.829 align:start position:0%
pointers by hand. And I I have an
example<00:56:42.960><c> which</c><00:56:43.119><c> I</c><00:56:43.359><c> actually</c><00:56:43.599><c> don't</c><00:56:43.760><c> think</c>

00:56:43.829 --> 00:56:43.839 align:start position:0%
example which I actually don't think
 

00:56:43.839 --> 00:56:45.349 align:start position:0%
example which I actually don't think
I've<00:56:44.000><c> put</c><00:56:44.160><c> on</c><00:56:44.319><c> the</c><00:56:44.480><c> website</c><00:56:44.960><c> called</c><00:56:45.119><c> array</c>

00:56:45.349 --> 00:56:45.359 align:start position:0%
I've put on the website called array
 

00:56:45.359 --> 00:56:47.510 align:start position:0%
I've put on the website called array
maloc<00:56:45.760><c> 2D</c><00:56:46.079><c> which</c><00:56:46.240><c> shows</c><00:56:46.400><c> you</c><00:56:46.559><c> how</c><00:56:46.640><c> to</c><00:56:46.799><c> do</c><00:56:46.960><c> this.</c>

00:56:47.510 --> 00:56:47.520 align:start position:0%
maloc 2D which shows you how to do this.
 

00:56:47.520 --> 00:56:48.950 align:start position:0%
maloc 2D which shows you how to do this.
But<00:56:47.680><c> if</c><00:56:47.920><c> you</c><00:56:48.000><c> are</c><00:56:48.160><c> going</c><00:56:48.319><c> to</c><00:56:48.400><c> use</c><00:56:48.559><c> dynamic</c>

00:56:48.950 --> 00:56:48.960 align:start position:0%
But if you are going to use dynamic
 

00:56:48.960 --> 00:56:51.349 align:start position:0%
But if you are going to use dynamic
array<00:56:49.280><c> allocation</c><00:56:49.680><c> in</c><00:56:49.920><c> C</c><00:56:50.079><c> with</c><00:56:50.240><c> Malot,</c><00:56:51.119><c> you</c>

00:56:51.349 --> 00:56:51.359 align:start position:0%
array allocation in C with Malot, you
 

00:56:51.359 --> 00:56:53.030 align:start position:0%
array allocation in C with Malot, you
have<00:56:51.520><c> to</c><00:56:51.599><c> be</c><00:56:51.760><c> careful.</c><00:56:52.000><c> You</c><00:56:52.160><c> don't</c><00:56:52.720><c> you</c><00:56:52.880><c> don't</c>

00:56:53.030 --> 00:56:53.040 align:start position:0%
have to be careful. You don't you don't
 

00:56:53.040 --> 00:56:55.589 align:start position:0%
have to be careful. You don't you don't
do<00:56:53.200><c> the</c><00:56:53.359><c> naive</c><00:56:53.760><c> thing</c><00:56:54.000><c> of</c><00:56:54.799><c> allocate</c><00:56:55.200><c> lots</c><00:56:55.520><c> of</c>

00:56:55.589 --> 00:56:55.599 align:start position:0%
do the naive thing of allocate lots of
 

00:56:55.599 --> 00:56:58.549 align:start position:0%
do the naive thing of allocate lots of
pointers<00:56:56.000><c> then</c><00:56:56.160><c> individually</c><00:56:57.040><c> allocate</c><00:56:58.240><c> um</c>

00:56:58.549 --> 00:56:58.559 align:start position:0%
pointers then individually allocate um
 

00:56:58.559 --> 00:57:00.710 align:start position:0%
pointers then individually allocate um
the<00:56:58.799><c> data</c><00:56:59.119><c> associated</c><00:56:59.599><c> with</c><00:56:59.839><c> those</c><00:57:00.000><c> pointers</c>

00:57:00.710 --> 00:57:00.720 align:start position:0%
the data associated with those pointers
 

00:57:00.720 --> 00:57:02.230 align:start position:0%
the data associated with those pointers
because<00:57:01.040><c> it</c><00:57:01.280><c> means</c><00:57:01.440><c> that</c><00:57:01.599><c> your</c><00:57:01.839><c> data</c><00:57:02.079><c> is</c>

00:57:02.230 --> 00:57:02.240 align:start position:0%
because it means that your data is
 

00:57:02.240 --> 00:57:04.230 align:start position:0%
because it means that your data is
fragmented<00:57:02.799><c> and</c><00:57:02.960><c> your</c><00:57:03.119><c> subsequent</c><00:57:03.520><c> NPI</c><00:57:04.000><c> calls</c>

00:57:04.230 --> 00:57:04.240 align:start position:0%
fragmented and your subsequent NPI calls
 

00:57:04.240 --> 00:57:05.670 align:start position:0%
fragmented and your subsequent NPI calls
will<00:57:04.480><c> be</c><00:57:04.640><c> slowed</c><00:57:04.960><c> because</c><00:57:05.119><c> you</c><00:57:05.280><c> won't</c><00:57:05.440><c> be</c><00:57:05.520><c> able</c>

00:57:05.670 --> 00:57:05.680 align:start position:0%
will be slowed because you won't be able
 

00:57:05.680 --> 00:57:07.670 align:start position:0%
will be slowed because you won't be able
to<00:57:05.760><c> use</c><00:57:06.000><c> vectors</c><00:57:06.799><c> or</c><00:57:07.040><c> you</c><00:57:07.200><c> won't</c><00:57:07.359><c> be</c><00:57:07.440><c> able</c><00:57:07.599><c> to</c>

00:57:07.670 --> 00:57:07.680 align:start position:0%
to use vectors or you won't be able to
 

00:57:07.680 --> 00:57:09.510 align:start position:0%
to use vectors or you won't be able to
broadcast<00:57:08.160><c> the</c><00:57:08.319><c> array</c><00:57:08.559><c> as</c><00:57:08.720><c> a</c><00:57:08.880><c> SQL</c><00:57:09.119><c> entity</c>

00:57:09.510 --> 00:57:09.520 align:start position:0%
broadcast the array as a SQL entity
 

00:57:09.520 --> 00:57:11.750 align:start position:0%
broadcast the array as a SQL entity
because<00:57:09.760><c> it</c><00:57:09.920><c> is</c><00:57:10.160><c> fragmented</c><00:57:10.720><c> in</c><00:57:10.960><c> memory</c><00:57:11.599><c> and</c>

00:57:11.750 --> 00:57:11.760 align:start position:0%
because it is fragmented in memory and
 

00:57:11.760 --> 00:57:13.510 align:start position:0%
because it is fragmented in memory and
so<00:57:11.920><c> you</c><00:57:12.079><c> should</c><00:57:12.240><c> use</c><00:57:12.400><c> more</c><00:57:12.640><c> clever</c><00:57:13.119><c> dynamic</c>

00:57:13.510 --> 00:57:13.520 align:start position:0%
so you should use more clever dynamic
 

00:57:13.520 --> 00:57:15.430 align:start position:0%
so you should use more clever dynamic
array<00:57:13.760><c> allocation</c><00:57:14.240><c> tricks</c><00:57:14.559><c> to</c><00:57:14.720><c> do</c><00:57:14.880><c> that</c><00:57:15.040><c> and</c><00:57:15.280><c> I</c>

00:57:15.430 --> 00:57:15.440 align:start position:0%
array allocation tricks to do that and I
 

00:57:15.440 --> 00:57:17.990 align:start position:0%
array allocation tricks to do that and I
have<00:57:15.520><c> an</c><00:57:15.760><c> example</c><00:57:16.079><c> there.</c><00:57:16.960><c> Um</c><00:57:17.359><c> and</c><00:57:17.599><c> this</c><00:57:17.839><c> is</c>

00:57:17.990 --> 00:57:18.000 align:start position:0%
have an example there. Um and this is
 

00:57:18.000 --> 00:57:19.430 align:start position:0%
have an example there. Um and this is
stuff<00:57:18.160><c> which</c><00:57:18.400><c> is</c><00:57:18.559><c> not</c><00:57:18.720><c> relevant.</c><00:57:19.200><c> This</c><00:57:19.359><c> is</c>

00:57:19.430 --> 00:57:19.440 align:start position:0%
stuff which is not relevant. This is
 

00:57:19.440 --> 00:57:21.910 align:start position:0%
stuff which is not relevant. This is
really<00:57:19.680><c> just</c>

00:57:21.910 --> 00:57:21.920 align:start position:0%
really just
 

00:57:21.920 --> 00:57:27.990 align:start position:0%
really just
um<00:57:23.359><c> um</c><00:57:24.319><c> so</c><00:57:24.880><c> yeah</c><00:57:25.359><c> so</c><00:57:26.160><c> in</c><00:57:26.480><c> C</c><00:57:26.960><c> fixed</c><00:57:27.359><c> size</c><00:57:27.599><c> arrays</c>

00:57:27.990 --> 00:57:28.000 align:start position:0%
um um so yeah so in C fixed size arrays
 

00:57:28.000 --> 00:57:30.390 align:start position:0%
um um so yeah so in C fixed size arrays
hash<00:57:28.319><c> to</c><00:57:28.400><c> find</c><00:57:28.559><c> are</c><00:57:28.720><c> simple</c><00:57:28.880><c> and</c><00:57:29.040><c> easy</c><00:57:29.280><c> to</c><00:57:29.520><c> use</c>

00:57:30.390 --> 00:57:30.400 align:start position:0%
hash to find are simple and easy to use
 

00:57:30.400 --> 00:57:32.870 align:start position:0%
hash to find are simple and easy to use
but<00:57:30.720><c> you</c><00:57:30.880><c> need</c><00:57:30.960><c> to</c><00:57:31.119><c> recompile.</c><00:57:32.319><c> Dynamically</c>

00:57:32.870 --> 00:57:32.880 align:start position:0%
but you need to recompile. Dynamically
 

00:57:32.880 --> 00:57:35.190 align:start position:0%
but you need to recompile. Dynamically
allocated<00:57:33.280><c> melodies</c><00:57:33.839><c> are</c><00:57:34.000><c> more</c><00:57:34.240><c> complex.</c>

00:57:35.190 --> 00:57:35.200 align:start position:0%
allocated melodies are more complex.
 

00:57:35.200 --> 00:57:38.390 align:start position:0%
allocated melodies are more complex.
They<00:57:35.440><c> come</c><00:57:35.520><c> from</c><00:57:35.680><c> the</c><00:57:35.839><c> heap.</c><00:57:36.799><c> Um</c><00:57:37.920><c> variable</c>

00:57:38.390 --> 00:57:38.400 align:start position:0%
They come from the heap. Um variable
 

00:57:38.400 --> 00:57:40.150 align:start position:0%
They come from the heap. Um variable
length<00:57:38.640><c> arrays</c>

00:57:40.150 --> 00:57:40.160 align:start position:0%
length arrays
 

00:57:40.160 --> 00:57:42.069 align:start position:0%
length arrays
are<00:57:40.319><c> frowned</c><00:57:40.720><c> on</c><00:57:40.880><c> by</c><00:57:41.119><c> purists.</c><00:57:41.760><c> This</c><00:57:41.839><c> is</c><00:57:41.920><c> where</c>

00:57:42.069 --> 00:57:42.079 align:start position:0%
are frowned on by purists. This is where
 

00:57:42.079 --> 00:57:45.430 align:start position:0%
are frowned on by purists. This is where
you<00:57:42.240><c> do</c><00:57:42.400><c> int</c><00:57:42.720><c> x</c><00:57:43.040><c> n</c><00:57:43.359><c> where</c><00:57:43.599><c> n</c><00:57:44.160><c> a</c><00:57:44.480><c> variable</c><00:57:44.960><c> not</c><00:57:45.119><c> a</c>

00:57:45.430 --> 00:57:45.440 align:start position:0%
you do int x n where n a variable not a
 

00:57:45.440 --> 00:57:47.109 align:start position:0%
you do int x n where n a variable not a
constant.<00:57:46.000><c> The</c><00:57:46.160><c> main</c><00:57:46.400><c> problem</c><00:57:46.559><c> is</c><00:57:46.720><c> they</c><00:57:46.880><c> come</c>

00:57:47.109 --> 00:57:47.119 align:start position:0%
constant. The main problem is they come
 

00:57:47.119 --> 00:57:48.710 align:start position:0%
constant. The main problem is they come
whoops<00:57:47.599><c> sorry</c><00:57:48.079><c> there's</c><00:57:48.319><c> something</c><00:57:48.400><c> in</c><00:57:48.559><c> front</c>

00:57:48.710 --> 00:57:48.720 align:start position:0%
whoops sorry there's something in front
 

00:57:48.720 --> 00:57:50.230 align:start position:0%
whoops sorry there's something in front
of<00:57:48.799><c> you.</c><00:57:48.960><c> The</c><00:57:49.119><c> main</c><00:57:49.359><c> problem</c><00:57:49.839><c> is</c><00:57:49.920><c> they</c><00:57:50.160><c> come</c>

00:57:50.230 --> 00:57:50.240 align:start position:0%
of you. The main problem is they come
 

00:57:50.240 --> 00:57:52.309 align:start position:0%
of you. The main problem is they come
from<00:57:50.400><c> the</c><00:57:50.559><c> stack</c><00:57:50.799><c> which</c><00:57:50.960><c> is</c><00:57:51.119><c> limited</c><00:57:51.520><c> size.</c><00:57:51.920><c> So</c>

00:57:52.309 --> 00:57:52.319 align:start position:0%
from the stack which is limited size. So
 

00:57:52.319 --> 00:57:54.390 align:start position:0%
from the stack which is limited size. So
so<00:57:52.720><c> you</c><00:57:52.799><c> know</c><00:57:52.960><c> if</c><00:57:53.119><c> you</c><00:57:53.280><c> want</c><00:57:53.359><c> to</c><00:57:53.599><c> do</c><00:57:53.920><c> dynamic</c>

00:57:54.390 --> 00:57:54.400 align:start position:0%
so you know if you want to do dynamic
 

00:57:54.400 --> 00:57:56.789 align:start position:0%
so you know if you want to do dynamic
array<00:57:54.720><c> allocation</c><00:57:55.200><c> at</c><00:57:55.440><c> runtime</c><00:57:56.400><c> you</c><00:57:56.640><c> probably</c>

00:57:56.789 --> 00:57:56.799 align:start position:0%
array allocation at runtime you probably
 

00:57:56.799 --> 00:58:00.710 align:start position:0%
array allocation at runtime you probably
want<00:57:56.880><c> to</c><00:57:57.040><c> use</c><00:57:57.119><c> some</c><00:57:57.599><c> version</c><00:57:57.760><c> of</c><00:57:57.920><c> maloc</c><00:57:59.040><c> not</c>

00:58:00.710 --> 00:58:00.720 align:start position:0%
want to use some version of maloc not
 

00:58:00.720 --> 00:58:03.829 align:start position:0%
want to use some version of maloc not
um<00:58:01.520><c> but</c><00:58:01.920><c> because</c><00:58:02.079><c> they</c><00:58:02.319><c> run</c><00:58:02.960><c> so</c><00:58:03.200><c> so</c><00:58:03.599><c> I'm</c>

00:58:03.829 --> 00:58:03.839 align:start position:0%
um but because they run so so I'm
 

00:58:03.839 --> 00:58:05.190 align:start position:0%
um but because they run so so I'm
basically<00:58:04.160><c> saying</c><00:58:04.319><c> that</c><00:58:04.480><c> in</c><00:58:04.720><c> C</c><00:58:04.960><c> if</c><00:58:05.040><c> you're</c>

00:58:05.190 --> 00:58:05.200 align:start position:0%
basically saying that in C if you're
 

00:58:05.200 --> 00:58:06.630 align:start position:0%
basically saying that in C if you're
going<00:58:05.280><c> to</c><00:58:05.440><c> allocate</c><00:58:05.920><c> large</c><00:58:06.160><c> amounts</c><00:58:06.480><c> of</c>

00:58:06.630 --> 00:58:06.640 align:start position:0%
going to allocate large amounts of
 

00:58:06.640 --> 00:58:09.349 align:start position:0%
going to allocate large amounts of
memory<00:58:07.680><c> uh</c><00:58:08.079><c> for</c><00:58:08.240><c> for</c><00:58:08.400><c> your</c><00:58:08.559><c> major</c><00:58:08.880><c> arrays</c><00:58:09.200><c> you</c>

00:58:09.349 --> 00:58:09.359 align:start position:0%
memory uh for for your major arrays you
 

00:58:09.359 --> 00:58:11.589 align:start position:0%
memory uh for for your major arrays you
need<00:58:09.440><c> to</c><00:58:09.599><c> be</c><00:58:09.680><c> clever</c><00:58:10.480><c> and</c><00:58:10.799><c> don't</c><00:58:10.960><c> do</c><00:58:11.200><c> pointers</c>

00:58:11.589 --> 00:58:11.599 align:start position:0%
need to be clever and don't do pointers
 

00:58:11.599 --> 00:58:13.109 align:start position:0%
need to be clever and don't do pointers
to<00:58:11.760><c> pointers</c><00:58:12.000><c> to</c><00:58:12.160><c> pointers.</c><00:58:12.640><c> Make</c><00:58:12.799><c> sure</c><00:58:12.880><c> your</c>

00:58:13.109 --> 00:58:13.119 align:start position:0%
to pointers to pointers. Make sure your
 

00:58:13.119 --> 00:58:14.789 align:start position:0%
to pointers to pointers. Make sure your
data<00:58:13.359><c> is</c><00:58:13.520><c> actually</c><00:58:13.760><c> a</c><00:58:14.000><c> single</c><00:58:14.240><c> contiguous</c>

00:58:14.789 --> 00:58:14.799 align:start position:0%
data is actually a single contiguous
 

00:58:14.799 --> 00:58:17.270 align:start position:0%
data is actually a single contiguous
block.

00:58:17.270 --> 00:58:17.280 align:start position:0%
block.
 

00:58:17.280 --> 00:58:19.990 align:start position:0%
block.
Um<00:58:17.599><c> a</c><00:58:17.839><c> final</c><00:58:18.160><c> one</c><00:58:18.400><c> here</c><00:58:18.640><c> which</c><00:58:18.880><c> is</c><00:58:19.119><c> I'll</c><00:58:19.440><c> just</c>

00:58:19.990 --> 00:58:20.000 align:start position:0%
Um a final one here which is I'll just
 

00:58:20.000 --> 00:58:27.030 align:start position:0%
Um a final one here which is I'll just
um<00:58:21.280><c> slightly</c><00:58:21.680><c> more</c><00:58:23.119><c> um</c><00:58:24.319><c> in</c><00:58:24.559><c> in</c>

00:58:27.030 --> 00:58:27.040 align:start position:0%
um slightly more um in in
 

00:58:27.040 --> 00:58:31.910 align:start position:0%
um slightly more um in in
NPI<00:58:28.160><c> um</c><00:58:29.280><c> um</c><00:58:30.640><c> message</c><00:58:30.960><c> matching</c><00:58:31.359><c> is</c><00:58:31.599><c> quite</c>

00:58:31.910 --> 00:58:31.920 align:start position:0%
NPI um um message matching is quite
 

00:58:31.920 --> 00:58:35.910 align:start position:0%
NPI um um message matching is quite
quite<00:58:32.240><c> quite</c><00:58:32.720><c> subtle.</c><00:58:33.599><c> um</c><00:58:34.160><c> and</c><00:58:34.319><c> and</c>

00:58:35.910 --> 00:58:35.920 align:start position:0%
quite quite subtle. um and and
 

00:58:35.920 --> 00:58:38.630 align:start position:0%
quite quite subtle. um and and
what<00:58:36.160><c> it</c><00:58:36.400><c> if</c><00:58:36.640><c> if</c><00:58:36.880><c> I'm</c><00:58:37.119><c> if</c><00:58:37.359><c> I'm</c><00:58:37.839><c> um</c><00:58:37.920><c> if</c><00:58:38.160><c> I'm</c>

00:58:38.630 --> 00:58:38.640 align:start position:0%
what it if if I'm if I'm um if I'm
 

00:58:38.640 --> 00:58:41.109 align:start position:0%
what it if if I'm if I'm um if I'm
imagine<00:58:39.040><c> I'm</c><00:58:39.280><c> sending</c><00:58:39.520><c> an</c><00:58:39.680><c> NPI</c><00:58:40.160><c> vector</c><00:58:40.880><c> which</c>

00:58:41.109 --> 00:58:41.119 align:start position:0%
imagine I'm sending an NPI vector which
 

00:58:41.119 --> 00:58:43.829 align:start position:0%
imagine I'm sending an NPI vector which
might<00:58:41.359><c> be</c><00:58:41.599><c> a</c><00:58:41.839><c> set</c><00:58:42.079><c> of</c><00:58:42.240><c> three</c><00:58:43.119><c> which</c><00:58:43.280><c> might</c><00:58:43.440><c> be</c>

00:58:43.829 --> 00:58:43.839 align:start position:0%
might be a set of three which might be
 

00:58:43.839 --> 00:58:45.589 align:start position:0%
might be a set of three which might be
remember<00:58:44.079><c> a</c><00:58:44.319><c> vector</c><00:58:45.040><c> it</c><00:58:45.200><c> can</c><00:58:45.359><c> be</c><00:58:45.440><c> a</c>

00:58:45.589 --> 00:58:45.599 align:start position:0%
remember a vector it can be a
 

00:58:45.599 --> 00:58:47.430 align:start position:0%
remember a vector it can be a
non-ontiguous<00:58:46.319><c> block</c><00:58:46.559><c> of</c><00:58:46.720><c> memory</c><00:58:47.040><c> it</c><00:58:47.200><c> has</c>

00:58:47.430 --> 00:58:47.440 align:start position:0%
non-ontiguous block of memory it has
 

00:58:47.440 --> 00:58:49.829 align:start position:0%
non-ontiguous block of memory it has
blocks<00:58:47.760><c> and</c><00:58:48.000><c> gaps</c><00:58:48.319><c> in</c><00:58:48.480><c> it.</c><00:58:49.040><c> So</c><00:58:49.200><c> if</c><00:58:49.359><c> I</c><00:58:49.520><c> send</c><00:58:49.680><c> an</c>

00:58:49.829 --> 00:58:49.839 align:start position:0%
blocks and gaps in it. So if I send an
 

00:58:49.839 --> 00:58:52.549 align:start position:0%
blocks and gaps in it. So if I send an
NPI<00:58:50.400><c> vector</c><00:58:50.799><c> which</c><00:58:50.960><c> is</c><00:58:51.200><c> for</c><00:58:51.280><c> example</c><00:58:51.920><c> a</c><00:58:52.319><c> block</c>

00:58:52.549 --> 00:58:52.559 align:start position:0%
NPI vector which is for example a block
 

00:58:52.559 --> 00:58:55.510 align:start position:0%
NPI vector which is for example a block
of<00:58:52.720><c> three</c><00:58:52.960><c> and</c><00:58:53.040><c> a</c><00:58:53.200><c> gap</c><00:58:53.520><c> and</c><00:58:53.599><c> a</c><00:58:53.760><c> block</c><00:58:53.920><c> of</c><00:58:54.160><c> three</c>

00:58:55.510 --> 00:58:55.520 align:start position:0%
of three and a gap and a block of three
 

00:58:55.520 --> 00:58:58.230 align:start position:0%
of three and a gap and a block of three
what<00:58:55.839><c> actually</c><00:58:56.160><c> NPI</c><00:58:56.799><c> does</c><00:58:57.119><c> is</c><00:58:57.680><c> at</c><00:58:57.760><c> least</c>

00:58:58.230 --> 00:58:58.240 align:start position:0%
what actually NPI does is at least
 

00:58:58.240 --> 00:59:00.309 align:start position:0%
what actually NPI does is at least
logically<00:58:58.720><c> is</c><00:58:58.960><c> it</c><00:58:59.119><c> packs</c><00:58:59.440><c> that</c><00:58:59.680><c> data</c><00:58:59.920><c> into</c><00:59:00.160><c> a</c>

00:59:00.309 --> 00:59:00.319 align:start position:0%
logically is it packs that data into a
 

00:59:00.319 --> 00:59:02.870 align:start position:0%
logically is it packs that data into a
single<00:59:00.559><c> block</c><00:59:00.799><c> of</c><00:59:01.040><c> six</c><00:59:02.160><c> and</c><00:59:02.400><c> then</c><00:59:02.559><c> on</c><00:59:02.720><c> the</c>

00:59:02.870 --> 00:59:02.880 align:start position:0%
single block of six and then on the
 

00:59:02.880 --> 00:59:05.109 align:start position:0%
single block of six and then on the
receive<00:59:03.359><c> side</c>

00:59:05.109 --> 00:59:05.119 align:start position:0%
receive side
 

00:59:05.119 --> 00:59:07.750 align:start position:0%
receive side
so<00:59:05.280><c> if</c><00:59:05.520><c> I</c><00:59:05.760><c> send</c><00:59:06.079><c> a</c><00:59:06.240><c> vector</c><00:59:06.799><c> okay</c><00:59:07.040><c> I</c><00:59:07.280><c> send</c><00:59:07.520><c> one</c>

00:59:07.750 --> 00:59:07.760 align:start position:0%
so if I send a vector okay I send one
 

00:59:07.760 --> 00:59:10.069 align:start position:0%
so if I send a vector okay I send one
vector<00:59:08.240><c> here</c><00:59:08.799><c> I</c><00:59:09.040><c> don't</c><00:59:09.200><c> need</c><00:59:09.359><c> to</c><00:59:09.520><c> receive</c><00:59:09.839><c> one</c>

00:59:10.069 --> 00:59:10.079 align:start position:0%
vector here I don't need to receive one
 

00:59:10.079 --> 00:59:12.470 align:start position:0%
vector here I don't need to receive one
vector<00:59:10.720><c> as</c><00:59:10.960><c> long</c><00:59:11.040><c> as</c><00:59:11.200><c> the</c><00:59:11.359><c> receive</c><00:59:11.920><c> receives</c>

00:59:12.470 --> 00:59:12.480 align:start position:0%
vector as long as the receive receives
 

00:59:12.480 --> 00:59:16.309 align:start position:0%
vector as long as the receive receives
here<00:59:12.720><c> say</c><00:59:13.040><c> six</c><00:59:13.280><c> integers</c><00:59:14.240><c> that</c><00:59:14.480><c> is</c><00:59:14.720><c> fine</c><00:59:15.760><c> so</c>

00:59:16.309 --> 00:59:16.319 align:start position:0%
here say six integers that is fine so
 

00:59:16.319 --> 00:59:18.390 align:start position:0%
here say six integers that is fine so
message<00:59:16.720><c> matching</c><00:59:17.040><c> is</c><00:59:17.200><c> slightly</c><00:59:17.839><c> subtle</c><00:59:18.160><c> in</c>

00:59:18.390 --> 00:59:18.400 align:start position:0%
message matching is slightly subtle in
 

00:59:18.400 --> 00:59:21.270 align:start position:0%
message matching is slightly subtle in
MP<00:59:18.480><c> API</c><00:59:19.200><c> that</c><00:59:19.359><c> allows</c><00:59:19.599><c> you</c><00:59:19.680><c> to</c><00:59:19.760><c> do</c><00:59:19.920><c> nice</c><00:59:20.160><c> tricks</c>

00:59:21.270 --> 00:59:21.280 align:start position:0%
MP API that allows you to do nice tricks
 

00:59:21.280 --> 00:59:24.470 align:start position:0%
MP API that allows you to do nice tricks
that<00:59:21.520><c> if</c><00:59:21.760><c> I</c><00:59:22.000><c> send</c><00:59:22.319><c> this</c><00:59:22.640><c> data</c><00:59:23.599><c> in</c><00:59:23.920><c> flight</c><00:59:24.319><c> the</c>

00:59:24.470 --> 00:59:24.480 align:start position:0%
that if I send this data in flight the
 

00:59:24.480 --> 00:59:27.270 align:start position:0%
that if I send this data in flight the
message<00:59:24.720><c> is</c><00:59:24.960><c> just</c><00:59:25.200><c> six</c><00:59:26.240><c> um</c><00:59:26.799><c> let's</c><00:59:26.960><c> say</c><00:59:27.040><c> they're</c>

00:59:27.270 --> 00:59:27.280 align:start position:0%
message is just six um let's say they're
 

00:59:27.280 --> 00:59:29.589 align:start position:0%
message is just six um let's say they're
integers<00:59:27.680><c> six</c><00:59:27.920><c> integers</c><00:59:28.720><c> and</c><00:59:28.880><c> I</c><00:59:29.119><c> can</c><00:59:29.280><c> receive</c>

00:59:29.589 --> 00:59:29.599 align:start position:0%
integers six integers and I can receive
 

00:59:29.599 --> 00:59:31.829 align:start position:0%
integers six integers and I can receive
that<00:59:29.920><c> in</c><00:59:30.160><c> the</c><00:59:30.319><c> same</c><00:59:30.559><c> pattern</c><00:59:31.280><c> I</c><00:59:31.440><c> can</c><00:59:31.599><c> receive</c>

00:59:31.829 --> 00:59:31.839 align:start position:0%
that in the same pattern I can receive
 

00:59:31.839 --> 00:59:33.670 align:start position:0%
that in the same pattern I can receive
in<00:59:32.000><c> a</c><00:59:32.160><c> contiguous</c><00:59:32.640><c> pattern</c><00:59:33.040><c> I</c><00:59:33.200><c> could</c><00:59:33.359><c> receive</c>

00:59:33.670 --> 00:59:33.680 align:start position:0%
in a contiguous pattern I could receive
 

00:59:33.680 --> 00:59:37.910 align:start position:0%
in a contiguous pattern I could receive
it<00:59:33.920><c> as</c><00:59:34.720><c> a</c><00:59:34.960><c> different</c><00:59:35.200><c> vector</c><00:59:36.079><c> as</c><00:59:36.400><c> long</c><00:59:36.640><c> as</c><00:59:37.680><c> I</c>

00:59:37.910 --> 00:59:37.920 align:start position:0%
it as a different vector as long as I
 

00:59:37.920 --> 00:59:39.990 align:start position:0%
it as a different vector as long as I
send<00:59:38.240><c> six</c><00:59:38.559><c> integers</c><00:59:39.040><c> and</c><00:59:39.200><c> I</c><00:59:39.440><c> receive</c><00:59:39.760><c> six</c>

00:59:39.990 --> 00:59:40.000 align:start position:0%
send six integers and I receive six
 

00:59:40.000 --> 00:59:41.990 align:start position:0%
send six integers and I receive six
integers<00:59:40.640><c> those</c><00:59:40.880><c> messages</c><00:59:41.359><c> will</c><00:59:41.599><c> match</c>

00:59:41.990 --> 00:59:42.000 align:start position:0%
integers those messages will match
 

00:59:42.000 --> 00:59:44.150 align:start position:0%
integers those messages will match
that's<00:59:43.040><c> they're</c><00:59:43.359><c> compatible</c><00:59:43.760><c> with</c><00:59:43.920><c> each</c>

00:59:44.150 --> 00:59:44.160 align:start position:0%
that's they're compatible with each
 

00:59:44.160 --> 00:59:46.870 align:start position:0%
that's they're compatible with each
other<00:59:44.960><c> that</c><00:59:45.200><c> the</c><00:59:45.440><c> spacing</c><00:59:45.920><c> the</c><00:59:46.079><c> pattern</c><00:59:46.720><c> the</c>

00:59:46.870 --> 00:59:46.880 align:start position:0%
other that the spacing the pattern the
 

00:59:46.880 --> 00:59:48.789 align:start position:0%
other that the spacing the pattern the
gaps<00:59:47.200><c> in</c><00:59:47.359><c> them</c><00:59:47.599><c> don't</c><00:59:47.839><c> matter</c><00:59:48.400><c> And</c><00:59:48.559><c> this</c>

00:59:48.789 --> 00:59:48.799 align:start position:0%
gaps in them don't matter And this
 

00:59:48.799 --> 00:59:50.630 align:start position:0%
gaps in them don't matter And this
allows<00:59:49.040><c> you</c><00:59:49.119><c> to</c><00:59:49.280><c> do</c><00:59:49.440><c> nice</c><00:59:49.760><c> tricks.</c><00:59:50.319><c> And</c><00:59:50.480><c> this</c>

00:59:50.630 --> 00:59:50.640 align:start position:0%
allows you to do nice tricks. And this
 

00:59:50.640 --> 00:59:53.109 align:start position:0%
allows you to do nice tricks. And this
allows<00:59:50.880><c> you</c><00:59:51.040><c> to</c><00:59:51.200><c> avoid</c><00:59:51.920><c> hand</c><00:59:52.319><c> copying.</c><00:59:52.799><c> Often</c>

00:59:53.109 --> 00:59:53.119 align:start position:0%
allows you to avoid hand copying. Often
 

00:59:53.119 --> 00:59:55.750 align:start position:0%
allows you to avoid hand copying. Often
people<00:59:53.440><c> copy</c><00:59:53.760><c> data,</c><00:59:54.240><c> send</c><00:59:54.480><c> it</c><00:59:54.960><c> and</c><00:59:55.119><c> and</c><00:59:55.599><c> I'm</c>

00:59:55.750 --> 00:59:55.760 align:start position:0%
people copy data, send it and and I'm
 

00:59:55.760 --> 00:59:57.670 align:start position:0%
people copy data, send it and and I'm
sorry,<00:59:56.240><c> they</c><00:59:56.559><c> pack</c><00:59:56.880><c> data,</c><00:59:57.280><c> send</c><00:59:57.359><c> it</c><00:59:57.520><c> and</c>

00:59:57.670 --> 00:59:57.680 align:start position:0%
sorry, they pack data, send it and
 

00:59:57.680 --> 00:59:59.589 align:start position:0%
sorry, they pack data, send it and
unpack<00:59:58.000><c> it</c><00:59:58.160><c> at</c><00:59:58.319><c> the</c><00:59:58.400><c> receive</c><00:59:58.799><c> side.</c><00:59:59.359><c> This</c>

00:59:59.589 --> 00:59:59.599 align:start position:0%
unpack it at the receive side. This
 

00:59:59.599 --> 01:00:01.589 align:start position:0%
unpack it at the receive side. This
trick<00:59:59.839><c> allows</c><01:00:00.079><c> you</c><01:00:00.240><c> often</c><01:00:00.559><c> to</c><01:00:00.720><c> avoid</c><01:00:01.119><c> that</c>

01:00:01.589 --> 01:00:01.599 align:start position:0%
trick allows you often to avoid that
 

01:00:01.599 --> 01:00:06.230 align:start position:0%
trick allows you often to avoid that
because<01:00:02.000><c> for</c><01:00:02.160><c> example,</c><01:00:03.280><c> if</c><01:00:03.680><c> I</c><01:00:04.079><c> have</c><01:00:04.720><c> um</c><01:00:05.440><c> data</c>

01:00:06.230 --> 01:00:06.240 align:start position:0%
because for example, if I have um data
 

01:00:06.240 --> 01:00:08.549 align:start position:0%
because for example, if I have um data
which<01:00:06.480><c> I've</c><01:00:06.640><c> read</c><01:00:06.799><c> in</c><01:00:07.040><c> from</c><01:00:07.200><c> memory</c><01:00:08.079><c> which</c><01:00:08.319><c> is</c>

01:00:08.549 --> 01:00:08.559 align:start position:0%
which I've read in from memory which is
 

01:00:08.559 --> 01:00:11.430 align:start position:0%
which I've read in from memory which is
contiguous,<01:00:09.520><c> but</c><01:00:09.680><c> I</c><01:00:09.920><c> want</c><01:00:10.000><c> to</c><01:00:10.240><c> send</c><01:00:10.480><c> it</c><01:00:10.880><c> to</c><01:00:11.119><c> a</c>

01:00:11.430 --> 01:00:11.440 align:start position:0%
contiguous, but I want to send it to a
 

01:00:11.440 --> 01:00:13.349 align:start position:0%
contiguous, but I want to send it to a
lot<01:00:11.520><c> of</c><01:00:11.680><c> processes</c><01:00:12.319><c> where</c><01:00:12.640><c> they</c><01:00:12.880><c> want</c><01:00:12.960><c> it</c><01:00:13.200><c> to</c>

01:00:13.349 --> 01:00:13.359 align:start position:0%
lot of processes where they want it to
 

01:00:13.359 --> 01:00:16.870 align:start position:0%
lot of processes where they want it to
be<01:00:13.839><c> the</c><01:00:14.240><c> interior.</c><01:00:15.440><c> If</c><01:00:15.680><c> I</c><01:00:16.000><c> often</c><01:00:16.319><c> the</c><01:00:16.480><c> data</c><01:00:16.720><c> I</c>

01:00:16.870 --> 01:00:16.880 align:start position:0%
be the interior. If I often the data I
 

01:00:16.880 --> 01:00:19.750 align:start position:0%
be the interior. If I often the data I
read<01:00:17.119><c> in</c><01:00:17.359><c> from</c><01:00:17.520><c> disk</c><01:00:18.000><c> is</c><01:00:18.319><c> just</c><01:00:18.559><c> data</c><01:00:19.359><c> but</c><01:00:19.599><c> the</c>

01:00:19.750 --> 01:00:19.760 align:start position:0%
read in from disk is just data but the
 

01:00:19.760 --> 01:00:22.150 align:start position:0%
read in from disk is just data but the
arrays<01:00:20.079><c> I</c><01:00:20.319><c> have</c><01:00:20.400><c> in</c><01:00:20.640><c> memory</c><01:00:21.280><c> have</c><01:00:21.520><c> halos</c><01:00:22.000><c> on</c>

01:00:22.150 --> 01:00:22.160 align:start position:0%
arrays I have in memory have halos on
 

01:00:22.160 --> 01:00:24.789 align:start position:0%
arrays I have in memory have halos on
them.<01:00:22.640><c> How</c><01:00:22.799><c> do</c><01:00:22.960><c> I</c><01:00:23.200><c> send</c><01:00:23.839><c> that</c><01:00:24.160><c> data</c><01:00:24.480><c> into</c>

01:00:24.789 --> 01:00:24.799 align:start position:0%
them. How do I send that data into
 

01:00:24.799 --> 01:00:26.950 align:start position:0%
them. How do I send that data into
there?<01:00:25.440><c> Well,</c><01:00:25.680><c> I</c><01:00:25.839><c> can</c><01:00:26.000><c> play</c><01:00:26.240><c> tricks</c><01:00:26.640><c> by</c>

01:00:26.950 --> 01:00:26.960 align:start position:0%
there? Well, I can play tricks by
 

01:00:26.960 --> 01:00:28.870 align:start position:0%
there? Well, I can play tricks by
sending<01:00:27.280><c> the</c><01:00:27.440><c> data</c><01:00:27.599><c> as</c><01:00:27.760><c> a</c><01:00:27.920><c> contiguous</c><01:00:28.559><c> block</c>

01:00:28.870 --> 01:00:28.880 align:start position:0%
sending the data as a contiguous block
 

01:00:28.880 --> 01:00:31.349 align:start position:0%
sending the data as a contiguous block
and<01:00:29.200><c> receiving</c><01:00:29.599><c> it</c><01:00:29.680><c> as</c><01:00:29.839><c> a</c><01:00:30.000><c> vector.</c><01:00:30.799><c> So,</c><01:00:30.960><c> it's</c><01:00:31.200><c> a</c>

01:00:31.349 --> 01:00:31.359 align:start position:0%
and receiving it as a vector. So, it's a
 

01:00:31.359 --> 01:00:33.109 align:start position:0%
and receiving it as a vector. So, it's a
bit<01:00:31.440><c> of</c><01:00:31.839><c> slightly</c><01:00:32.160><c> off</c><01:00:32.400><c> topic</c><01:00:32.640><c> here</c><01:00:32.799><c> actually</c>

01:00:33.109 --> 01:00:33.119 align:start position:0%
bit of slightly off topic here actually
 

01:00:33.119 --> 01:00:35.990 align:start position:0%
bit of slightly off topic here actually
but<01:00:33.359><c> but</c><01:00:34.160><c> um</c>

01:00:35.990 --> 01:00:36.000 align:start position:0%
but but um
 

01:00:36.000 --> 01:00:37.589 align:start position:0%
but but um
understanding<01:00:36.480><c> the</c><01:00:36.640><c> message</c><01:00:36.960><c> matching</c><01:00:37.359><c> rules</c>

01:00:37.589 --> 01:00:37.599 align:start position:0%
understanding the message matching rules
 

01:00:37.599 --> 01:00:40.150 align:start position:0%
understanding the message matching rules
in<01:00:37.760><c> NPI</c><01:00:38.720><c> basically</c><01:00:39.200><c> saying</c><01:00:39.359><c> if</c><01:00:39.520><c> you</c><01:00:39.680><c> send</c><01:00:39.920><c> six</c>

01:00:40.150 --> 01:00:40.160 align:start position:0%
in NPI basically saying if you send six
 

01:00:40.160 --> 01:00:41.510 align:start position:0%
in NPI basically saying if you send six
integers<01:00:40.559><c> you</c><01:00:40.720><c> can</c><01:00:40.799><c> receive</c><01:00:41.040><c> them</c><01:00:41.200><c> as</c><01:00:41.359><c> six</c>

01:00:41.510 --> 01:00:41.520 align:start position:0%
integers you can receive them as six
 

01:00:41.520 --> 01:00:43.349 align:start position:0%
integers you can receive them as six
integers.<01:00:42.000><c> It</c><01:00:42.160><c> doesn't</c><01:00:42.400><c> matter</c><01:00:42.960><c> how</c><01:00:43.200><c> they're</c>

01:00:43.349 --> 01:00:43.359 align:start position:0%
integers. It doesn't matter how they're
 

01:00:43.359 --> 01:00:44.870 align:start position:0%
integers. It doesn't matter how they're
padded,<01:00:43.839><c> how</c><01:00:44.000><c> they're</c><01:00:44.160><c> distributed,</c><01:00:44.720><c> how</c>

01:00:44.870 --> 01:00:44.880 align:start position:0%
padded, how they're distributed, how
 

01:00:44.880 --> 01:00:47.430 align:start position:0%
padded, how they're distributed, how
they're<01:00:45.040><c> packed</c><01:00:45.920><c> allows</c><01:00:46.319><c> you</c><01:00:46.480><c> to</c><01:00:46.559><c> to</c><01:00:46.960><c> do</c><01:00:47.200><c> nice</c>

01:00:47.430 --> 01:00:47.440 align:start position:0%
they're packed allows you to to do nice
 

01:00:47.440 --> 01:00:49.190 align:start position:0%
they're packed allows you to to do nice
things<01:00:47.680><c> and</c><01:00:47.839><c> what</c><01:00:48.000><c> we'll</c><01:00:48.160><c> do</c><01:00:48.240><c> is</c><01:00:48.400><c> we</c><01:00:48.640><c> will</c><01:00:48.880><c> if</c><01:00:49.040><c> I</c>

01:00:49.190 --> 01:00:49.200 align:start position:0%
things and what we'll do is we will if I
 

01:00:49.200 --> 01:00:51.750 align:start position:0%
things and what we'll do is we will if I
have<01:00:49.359><c> time</c><01:00:50.000><c> we'll</c><01:00:50.319><c> exploit</c><01:00:50.720><c> this</c><01:00:51.200><c> when</c><01:00:51.440><c> I</c><01:00:51.599><c> do</c>

01:00:51.750 --> 01:00:51.760 align:start position:0%
have time we'll exploit this when I do
 

01:00:51.760 --> 01:00:53.589 align:start position:0%
have time we'll exploit this when I do
the<01:00:52.000><c> advanced</c><01:00:52.480><c> use</c><01:00:52.640><c> of</c><01:00:52.799><c> data</c><01:00:53.119><c> types</c><01:00:53.359><c> at</c><01:00:53.520><c> the</c>

01:00:53.589 --> 01:00:53.599 align:start position:0%
the advanced use of data types at the
 

01:00:53.599 --> 01:00:55.030 align:start position:0%
the advanced use of data types at the
end<01:00:53.680><c> of</c><01:00:53.680><c> the</c><01:00:53.839><c> day.</c><01:00:54.079><c> So</c><01:00:54.240><c> this</c><01:00:54.400><c> is</c><01:00:54.480><c> maybe</c><01:00:54.720><c> I</c><01:00:54.880><c> will</c>

01:00:55.030 --> 01:00:55.040 align:start position:0%
end of the day. So this is maybe I will
 

01:00:55.040 --> 01:00:56.390 align:start position:0%
end of the day. So this is maybe I will
come<01:00:55.119><c> back</c><01:00:55.280><c> to</c><01:00:55.440><c> this</c><01:00:55.680><c> doesn't</c><01:00:55.920><c> make</c><01:00:56.079><c> sense</c>

01:00:56.390 --> 01:00:56.400 align:start position:0%
come back to this doesn't make sense
 

01:00:56.400 --> 01:00:59.430 align:start position:0%
come back to this doesn't make sense
now.<01:00:57.599><c> So</c><01:00:57.760><c> the</c><01:00:58.000><c> conclusions</c><01:00:58.559><c> I'm</c><01:00:58.799><c> slightly</c>

01:00:59.430 --> 01:00:59.440 align:start position:0%
now. So the conclusions I'm slightly
 

01:00:59.440 --> 01:01:01.670 align:start position:0%
now. So the conclusions I'm slightly
okay<01:01:00.160><c> you</c><01:01:00.319><c> know</c><01:01:00.480><c> for</c><01:01:00.720><c> debugging</c><01:01:01.280><c> run</c><01:01:01.440><c> on</c><01:01:01.520><c> a</c>

01:01:01.670 --> 01:01:01.680 align:start position:0%
okay you know for debugging run on a
 

01:01:01.680 --> 01:01:06.309 align:start position:0%
okay you know for debugging run on a
variety<01:01:02.000><c> of</c><01:01:02.160><c> machines</c><01:01:02.400><c> or</c><01:01:02.640><c> or</c><01:01:02.799><c> or</c><01:01:03.119><c> more</c><01:01:04.079><c> um</c>

01:01:06.309 --> 01:01:06.319 align:start position:0%
variety of machines or or or more um
 

01:01:06.319 --> 01:01:09.430 align:start position:0%
variety of machines or or or more um
uh<01:01:06.880><c> accurately</c><01:01:07.440><c> run</c><01:01:07.599><c> on</c><01:01:08.079><c> different</c><01:01:09.040><c> debug</c>

01:01:09.430 --> 01:01:09.440 align:start position:0%
uh accurately run on different debug
 

01:01:09.440 --> 01:01:10.870 align:start position:0%
uh accurately run on different debug
your<01:01:09.599><c> code</c><01:01:09.760><c> using</c><01:01:10.000><c> different</c><01:01:10.240><c> compile</c><01:01:10.640><c> sorry</c>

01:01:10.870 --> 01:01:10.880 align:start position:0%
your code using different compile sorry
 

01:01:10.880 --> 01:01:12.230 align:start position:0%
your code using different compile sorry
compile<01:01:11.200><c> and</c><01:01:11.359><c> check</c><01:01:11.520><c> your</c><01:01:11.680><c> code</c><01:01:11.839><c> is</c><01:01:12.000><c> correct</c>

01:01:12.230 --> 01:01:12.240 align:start position:0%
compile and check your code is correct
 

01:01:12.240 --> 01:01:13.750 align:start position:0%
compile and check your code is correct
using<01:01:12.559><c> different</c><01:01:12.720><c> compilers</c><01:01:13.280><c> but</c><01:01:13.440><c> also</c>

01:01:13.750 --> 01:01:13.760 align:start position:0%
using different compilers but also
 

01:01:13.760 --> 01:01:15.750 align:start position:0%
using different compilers but also
different<01:01:14.160><c> libraries</c><01:01:14.720><c> versions</c><01:01:15.040><c> of</c><01:01:15.119><c> the</c><01:01:15.280><c> NPI</c>

01:01:15.750 --> 01:01:15.760 align:start position:0%
different libraries versions of the NPI
 

01:01:15.760 --> 01:01:17.990 align:start position:0%
different libraries versions of the NPI
library<01:01:16.799><c> keep</c><01:01:17.040><c> it</c><01:01:17.200><c> simple</c><01:01:17.599><c> you</c><01:01:17.680><c> know</c><01:01:17.839><c> don't</c>

01:01:17.990 --> 01:01:18.000 align:start position:0%
library keep it simple you know don't
 

01:01:18.000 --> 01:01:19.510 align:start position:0%
library keep it simple you know don't
use<01:01:18.160><c> non-blocking</c><01:01:18.880><c> you</c><01:01:19.040><c> don't</c><01:01:19.200><c> need</c><01:01:19.280><c> it</c>

01:01:19.510 --> 01:01:19.520 align:start position:0%
use non-blocking you don't need it
 

01:01:19.520 --> 01:01:21.829 align:start position:0%
use non-blocking you don't need it
maintain<01:01:19.839><c> a</c><01:01:20.000><c> serial</c><01:01:20.400><c> version</c><01:01:20.640><c> if</c><01:01:20.799><c> you</c><01:01:21.040><c> can</c><01:01:21.599><c> to</c>

01:01:21.829 --> 01:01:21.839 align:start position:0%
maintain a serial version if you can to
 

01:01:21.839 --> 01:01:23.349 align:start position:0%
maintain a serial version if you can to
allow<01:01:22.079><c> you</c><01:01:22.160><c> to</c><01:01:22.319><c> always</c><01:01:22.559><c> check</c><01:01:22.799><c> your</c><01:01:22.960><c> code</c><01:01:23.119><c> is</c>

01:01:23.349 --> 01:01:23.359 align:start position:0%
allow you to always check your code is
 

01:01:23.359 --> 01:01:25.589 align:start position:0%
allow you to always check your code is
correct<01:01:24.240><c> don't</c><01:01:24.559><c> see</c><01:01:24.720><c> more</c><01:01:24.880><c> bugs</c><01:01:25.119><c> are</c><01:01:25.280><c> parallel</c>

01:01:25.589 --> 01:01:25.599 align:start position:0%
correct don't see more bugs are parallel
 

01:01:25.599 --> 01:01:27.190 align:start position:0%
correct don't see more bugs are parallel
bugs<01:01:25.839><c> that</c><01:01:26.000><c> is</c><01:01:26.160><c> the</c><01:01:26.319><c> biggest</c><01:01:26.559><c> mistake</c><01:01:26.880><c> you</c>

01:01:27.190 --> 01:01:27.200 align:start position:0%
bugs that is the biggest mistake you
 

01:01:27.200 --> 01:01:29.510 align:start position:0%
bugs that is the biggest mistake you
make<01:01:27.520><c> you</c><01:01:27.680><c> know</c><01:01:28.319><c> and</c><01:01:28.640><c> find</c><01:01:28.799><c> a</c><01:01:28.960><c> debugger</c><01:01:29.280><c> you</c>

01:01:29.510 --> 01:01:29.520 align:start position:0%
make you know and find a debugger you
 

01:01:29.520 --> 01:01:31.670 align:start position:0%
make you know and find a debugger you
like<01:01:29.680><c> or</c><01:01:29.920><c> if</c><01:01:30.079><c> it's</c><01:01:30.319><c> your</c><01:01:30.480><c> own</c><01:01:30.640><c> code</c><01:01:31.119><c> I</c><01:01:31.359><c> say</c>

01:01:31.670 --> 01:01:31.680 align:start position:0%
like or if it's your own code I say
 

01:01:31.680 --> 01:01:34.390 align:start position:0%
like or if it's your own code I say
actually<01:01:32.480><c> debugs</c><01:01:33.119><c> are</c><01:01:33.280><c> often</c><01:01:33.599><c> not</c><01:01:33.839><c> as</c><01:01:34.079><c> useful</c>

01:01:34.390 --> 01:01:34.400 align:start position:0%
actually debugs are often not as useful
 

01:01:34.400 --> 01:01:37.190 align:start position:0%
actually debugs are often not as useful
as<01:01:34.559><c> as</c><01:01:34.640><c> as</c><01:01:34.880><c> as</c><01:01:34.960><c> as</c><01:01:35.680><c> a</c><01:01:35.839><c> good</c><01:01:36.000><c> test</c><01:01:36.319><c> suite</c><01:01:36.720><c> and</c><01:01:36.799><c> and</c>

01:01:37.190 --> 01:01:37.200 align:start position:0%
as as as as as a good test suite and and
 

01:01:37.200 --> 01:01:39.510 align:start position:0%
as as as as as a good test suite and and
by<01:01:37.520><c> hand</c><01:01:37.760><c> debugging</c>

01:01:39.510 --> 01:01:39.520 align:start position:0%
by hand debugging
 

01:01:39.520 --> 01:01:41.670 align:start position:0%
by hand debugging
so<01:01:40.160><c> that</c><01:01:40.319><c> was</c><01:01:40.400><c> a</c><01:01:40.559><c> bit</c><01:01:40.640><c> of</c><01:01:40.720><c> a</c><01:01:40.880><c> a</c><01:01:41.119><c> butterfly</c>

01:01:41.670 --> 01:01:41.680 align:start position:0%
so that was a bit of a a butterfly
 

01:01:41.680 --> 01:01:43.430 align:start position:0%
so that was a bit of a a butterfly
collecting<01:01:42.079><c> or</c><01:01:42.240><c> stamp</c><01:01:42.559><c> collecting</c><01:01:43.040><c> lectures</c>

01:01:43.430 --> 01:01:43.440 align:start position:0%
collecting or stamp collecting lectures
 

01:01:43.440 --> 01:01:44.789 align:start position:0%
collecting or stamp collecting lectures
but<01:01:43.599><c> the</c><01:01:43.760><c> other</c><01:01:43.920><c> lectures</c><01:01:44.240><c> will</c><01:01:44.400><c> be</c><01:01:44.559><c> more</c>

01:01:44.789 --> 01:01:44.799 align:start position:0%
but the other lectures will be more
 

01:01:44.799 --> 01:01:46.230 align:start position:0%
but the other lectures will be more
focused<01:01:45.280><c> but</c><01:01:45.440><c> does</c><01:01:45.599><c> anyone</c><01:01:45.920><c> have</c><01:01:46.000><c> any</c>

01:01:46.230 --> 01:01:46.240 align:start position:0%
focused but does anyone have any
 

01:01:46.240 --> 01:01:57.910 align:start position:0%
focused but does anyone have any
questions<01:01:46.559><c> about</c><01:01:46.799><c> that</c><01:01:47.280><c> are</c><01:01:47.520><c> we</c><01:01:48.400><c> still</c><01:01:48.640><c> on</c><01:01:48.880><c> the</c>

01:01:57.910 --> 01:01:57.920 align:start position:0%
 
 

01:01:57.920 --> 01:01:59.910 align:start position:0%
 
I<01:01:58.160><c> will</c><01:01:58.400><c> just</c>

01:01:59.910 --> 01:01:59.920 align:start position:0%
I will just
 

01:01:59.920 --> 01:02:03.510 align:start position:0%
I will just
um

01:02:03.510 --> 01:02:03.520 align:start position:0%
 
 

01:02:03.520 --> 01:02:06.069 align:start position:0%
 
Okay.<01:02:03.920><c> So,</c><01:02:04.160><c> I'm</c><01:02:04.400><c> just</c><01:02:04.559><c> trying</c><01:02:04.880><c> I've</c><01:02:05.119><c> lost</c><01:02:05.839><c> I</c><01:02:05.920><c> I</c>

01:02:06.069 --> 01:02:06.079 align:start position:0%
Okay. So, I'm just trying I've lost I I
 

01:02:06.079 --> 01:02:07.750 align:start position:0%
Okay. So, I'm just trying I've lost I I
I'm<01:02:06.400><c> trying</c><01:02:06.559><c> to</c><01:02:06.720><c> I'm</c><01:02:06.880><c> on</c><01:02:07.119><c> my</c><01:02:07.280><c> laptop</c><01:02:07.599><c> for</c>

01:02:07.750 --> 01:02:07.760 align:start position:0%
I'm trying to I'm on my laptop for
 

01:02:07.760 --> 01:02:10.710 align:start position:0%
I'm trying to I'm on my laptop for
various<01:02:08.079><c> reasons.</c><01:02:08.559><c> I</c><01:02:08.880><c> am</c><01:02:09.040><c> slightly</c>

01:02:10.710 --> 01:02:10.720 align:start position:0%
various reasons. I am slightly
 

01:02:10.720 --> 01:02:12.390 align:start position:0%
various reasons. I am slightly
uh

01:02:12.390 --> 01:02:12.400 align:start position:0%
uh
 

01:02:12.400 --> 01:02:15.030 align:start position:0%
uh
lost<01:02:12.720><c> as</c><01:02:12.880><c> to</c><01:02:13.040><c> where</c><01:02:13.280><c> my</c><01:02:13.599><c> control</c><01:02:14.000><c> is.</c><01:02:14.319><c> Okay.</c><01:02:14.640><c> Uh</c>

01:02:15.030 --> 01:02:15.040 align:start position:0%
lost as to where my control is. Okay. Uh
 

01:02:15.040 --> 01:02:19.270 align:start position:0%
lost as to where my control is. Okay. Uh
stop<01:02:15.359><c> hearing.</c><01:02:15.760><c> Okay.</c><01:02:16.319><c> So,</c><01:02:16.960><c> um,</c>

01:02:19.270 --> 01:02:19.280 align:start position:0%
stop hearing. Okay. So, um,
 

01:02:19.280 --> 01:02:21.109 align:start position:0%
stop hearing. Okay. So, um,
what<01:02:19.520><c> we'll</c><01:02:19.839><c> do</c><01:02:20.000><c> is</c><01:02:20.319><c> if</c><01:02:20.480><c> I</c><01:02:20.640><c> go</c><01:02:20.799><c> to</c><01:02:20.960><c> the</c>

01:02:21.109 --> 01:02:21.119 align:start position:0%
what we'll do is if I go to the
 

01:02:21.119 --> 01:02:23.349 align:start position:0%
what we'll do is if I go to the
timetable,

01:02:23.349 --> 01:02:23.359 align:start position:0%
timetable,
 

01:02:23.359 --> 01:02:26.710 align:start position:0%
timetable,
uh,

01:02:26.710 --> 01:02:26.720 align:start position:0%
 
 

01:02:26.720 --> 01:02:31.030 align:start position:0%
 
we're<01:02:26.960><c> going</c><01:02:27.040><c> to</c><01:02:27.200><c> be</c><01:02:27.359><c> back</c><01:02:27.680><c> here</c><01:02:28.079><c> at,</c><01:02:28.799><c> uh,</c>

01:02:31.030 --> 01:02:31.040 align:start position:0%
we're going to be back here at, uh,
 

01:02:31.040 --> 01:02:34.230 align:start position:0%
we're going to be back here at, uh,
in<01:02:31.359><c> 25</c><01:02:31.760><c> minutes</c><01:02:32.240><c> at,</c><01:02:32.880><c> uh,</c><01:02:33.280><c> 11:45.</c><01:02:33.920><c> We'll</c><01:02:34.079><c> do</c>

01:02:34.230 --> 01:02:34.240 align:start position:0%
in 25 minutes at, uh, 11:45. We'll do
 

01:02:34.240 --> 01:02:38.870 align:start position:0%
in 25 minutes at, uh, 11:45. We'll do
NPI.<01:02:34.960><c> So,</c><01:02:35.119><c> okay.</c><01:02:35.359><c> So,</c><01:02:35.520><c> I</c><01:02:35.760><c> will,</c><01:02:36.240><c> uh,</c>

01:02:38.870 --> 01:02:38.880 align:start position:0%
NPI. So, okay. So, I will, uh,
 

01:02:38.880 --> 01:02:40.630 align:start position:0%
NPI. So, okay. So, I will, uh,
check.

01:02:40.630 --> 01:02:40.640 align:start position:0%
check.
 

01:02:40.640 --> 01:02:43.190 align:start position:0%
check.
H,<01:02:40.960><c> okay.</c><01:02:41.280><c> So,</c><01:02:41.440><c> that</c><01:02:41.920><c> in</c><01:02:42.640><c> is</c><01:02:42.720><c> it</c><01:02:42.880><c> best</c><01:02:43.040><c> still</c><01:02:43.119><c> to</c>

01:02:43.190 --> 01:02:43.200 align:start position:0%
H, okay. So, that in is it best still to
 

01:02:43.200 --> 01:02:45.349 align:start position:0%
H, okay. So, that in is it best still to
use<01:02:43.280><c> the</c><01:02:43.359><c> MP</c><01:02:43.839><c> to</c><01:02:43.920><c> do?</c><01:02:44.480><c> That's</c><01:02:44.640><c> a</c><01:02:44.880><c> very</c><01:02:45.119><c> good</c>

01:02:45.349 --> 01:02:45.359 align:start position:0%
use the MP to do? That's a very good
 

01:02:45.359 --> 01:02:47.910 align:start position:0%
use the MP to do? That's a very good
question.<01:02:46.000><c> Uh</c>

01:02:47.910 --> 01:02:47.920 align:start position:0%
question. Uh
 

01:02:47.920 --> 01:02:55.670 align:start position:0%
question. Uh
um

01:02:55.670 --> 01:02:55.680 align:start position:0%
 
 

01:02:55.680 --> 01:02:58.789 align:start position:0%
 
I'm<01:02:56.000><c> oldfashioned.</c><01:02:56.640><c> I</c><01:02:56.880><c> would</c><01:02:56.960><c> do</c><01:02:57.119><c> the</c><01:02:58.400><c> I</c><01:02:58.640><c> don't</c>

01:02:58.789 --> 01:02:58.799 align:start position:0%
I'm oldfashioned. I would do the I don't
 

01:02:58.799 --> 01:03:01.109 align:start position:0%
I'm oldfashioned. I would do the I don't
know.<01:02:59.040><c> I</c><01:02:59.280><c> mean</c><01:02:59.680><c> you</c><01:02:59.920><c> have</c><01:03:00.160><c> I</c><01:03:00.400><c> mean</c><01:03:00.720><c> under</c><01:03:00.960><c> the</c>

01:03:01.109 --> 01:03:01.119 align:start position:0%
know. I mean you have I mean under the
 

01:03:01.119 --> 01:03:03.109 align:start position:0%
know. I mean you have I mean under the
hood<01:03:01.359><c> NPI</c><01:03:01.760><c> is</c><01:03:01.920><c> probably</c><01:03:02.079><c> doing</c><01:03:02.240><c> a</c><01:03:02.400><c> copy</c>

01:03:03.109 --> 01:03:03.119 align:start position:0%
hood NPI is probably doing a copy
 

01:03:03.119 --> 01:03:06.150 align:start position:0%
hood NPI is probably doing a copy
probably.<01:03:04.400><c> It</c><01:03:04.720><c> might</c><01:03:04.880><c> be</c><01:03:05.040><c> able</c><01:03:05.520><c> it's</c><01:03:05.839><c> possible</c>

01:03:06.150 --> 01:03:06.160 align:start position:0%
probably. It might be able it's possible
 

01:03:06.160 --> 01:03:08.630 align:start position:0%
probably. It might be able it's possible
NPI<01:03:06.640><c> could</c><01:03:06.799><c> avoid</c><01:03:07.040><c> the</c><01:03:07.200><c> copy.</c><01:03:07.599><c> Okay.</c><01:03:08.079><c> I</c><01:03:08.240><c> I</c>

01:03:08.630 --> 01:03:08.640 align:start position:0%
NPI could avoid the copy. Okay. I I
 

01:03:08.640 --> 01:03:10.630 align:start position:0%
NPI could avoid the copy. Okay. I I
don't<01:03:08.880><c> to</c><01:03:09.040><c> be</c><01:03:09.200><c> honest</c><01:03:09.599><c> my</c><01:03:09.839><c> for</c><01:03:10.400><c> rather</c>

01:03:10.630 --> 01:03:10.640 align:start position:0%
don't to be honest my for rather
 

01:03:10.640 --> 01:03:14.390 align:start position:0%
don't to be honest my for rather
oldfashioned.<01:03:11.520><c> I</c><01:03:12.000><c> don't</c><01:03:12.240><c> know</c><01:03:13.359><c> how</c><01:03:13.760><c> Foreshan</c>

01:03:14.390 --> 01:03:14.400 align:start position:0%
oldfashioned. I don't know how Foreshan
 

01:03:14.400 --> 01:03:16.230 align:start position:0%
oldfashioned. I don't know how Foreshan
2008<01:03:14.960><c> implements</c><01:03:15.359><c> the</c><01:03:15.520><c> asynchronous</c><01:03:16.079><c> free</c>

01:03:16.230 --> 01:03:16.240 align:start position:0%
2008 implements the asynchronous free
 

01:03:16.240 --> 01:03:18.630 align:start position:0%
2008 implements the asynchronous free
NPI.<01:03:16.720><c> It</c><01:03:16.880><c> could</c><01:03:16.960><c> do</c><01:03:17.119><c> one</c><01:03:17.280><c> of</c><01:03:17.440><c> two</c><01:03:17.680><c> things.</c><01:03:18.400><c> It</c>

01:03:18.630 --> 01:03:18.640 align:start position:0%
NPI. It could do one of two things. It
 

01:03:18.640 --> 01:03:21.990 align:start position:0%
NPI. It could do one of two things. It
could<01:03:18.880><c> make</c><01:03:19.119><c> a</c><01:03:19.359><c> copy.</c><01:03:20.319><c> It</c><01:03:20.480><c> could</c><01:03:20.720><c> make</c><01:03:20.880><c> a</c><01:03:21.039><c> copy</c>

01:03:21.990 --> 01:03:22.000 align:start position:0%
could make a copy. It could make a copy
 

01:03:22.000 --> 01:03:25.910 align:start position:0%
could make a copy. It could make a copy
and<01:03:22.240><c> just</c><01:03:22.559><c> make</c><01:03:22.720><c> sure</c><01:03:22.880><c> that</c><01:03:23.200><c> copy</c><01:03:23.520><c> was</c><01:03:23.760><c> around</c>

01:03:25.910 --> 01:03:25.920 align:start position:0%
and just make sure that copy was around
 

01:03:25.920 --> 01:03:28.950 align:start position:0%
and just make sure that copy was around
until<01:03:26.640><c> until</c><01:03:27.039><c> the</c><01:03:27.280><c> the</c>

01:03:28.950 --> 01:03:28.960 align:start position:0%
until until the the
 

01:03:28.960 --> 01:03:33.349 align:start position:0%
until until the the
or<01:03:29.280><c> it</c><01:03:29.440><c> could</c><01:03:29.680><c> do</c><01:03:29.839><c> clever</c><01:03:30.240><c> things</c><01:03:30.559><c> with</c><01:03:31.280><c> um</c>

01:03:33.349 --> 01:03:33.359 align:start position:0%
or it could do clever things with um
 

01:03:33.359 --> 01:03:35.349 align:start position:0%
or it could do clever things with um
you<01:03:33.520><c> know</c><01:03:33.680><c> passing</c><01:03:34.000><c> away</c><01:03:34.480><c> script.</c><01:03:34.799><c> I'm</c><01:03:35.119><c> so</c><01:03:35.200><c> so</c>

01:03:35.349 --> 01:03:35.359 align:start position:0%
you know passing away script. I'm so so
 

01:03:35.359 --> 01:03:38.230 align:start position:0%
you know passing away script. I'm so so
so

01:03:38.230 --> 01:03:38.240 align:start position:0%
so
 

01:03:38.240 --> 01:03:41.670 align:start position:0%
so
I<01:03:39.280><c> because</c><01:03:39.680><c> I</c><01:03:39.920><c> grew</c><01:03:40.160><c> up</c><01:03:40.240><c> in</c><01:03:40.480><c> a</c><01:03:40.640><c> time</c><01:03:40.799><c> when</c><01:03:41.039><c> for</c>

01:03:41.670 --> 01:03:41.680 align:start position:0%
I because I grew up in a time when for
 

01:03:41.680 --> 01:03:43.829 align:start position:0%
I because I grew up in a time when for
indexing<01:03:42.160><c> was</c><01:03:42.319><c> not</c><01:03:42.480><c> guaranteed</c><01:03:42.880><c> to</c><01:03:43.119><c> work</c>

01:03:43.829 --> 01:03:43.839 align:start position:0%
indexing was not guaranteed to work
 

01:03:43.839 --> 01:03:45.990 align:start position:0%
indexing was not guaranteed to work
because<01:03:44.079><c> the</c><01:03:44.240><c> for</c><01:03:44.720><c> 2008</c><01:03:45.200><c> interface</c><01:03:45.599><c> did</c><01:03:45.760><c> not</c>

01:03:45.990 --> 01:03:46.000 align:start position:0%
because the for 2008 interface did not
 

01:03:46.000 --> 01:03:48.870 align:start position:0%
because the for 2008 interface did not
exist.<01:03:47.039><c> Um</c><01:03:47.359><c> when</c><01:03:47.599><c> I</c><01:03:47.839><c> learned</c><01:03:48.079><c> NPR</c><01:03:48.640><c> I</c><01:03:48.799><c> would</c>

01:03:48.870 --> 01:03:48.880 align:start position:0%
exist. Um when I learned NPR I would
 

01:03:48.880 --> 01:03:50.950 align:start position:0%
exist. Um when I learned NPR I would
always<01:03:49.039><c> do</c><01:03:49.200><c> the</c><01:03:49.359><c> vectors</c><01:03:50.480><c> because</c><01:03:50.720><c> that's</c>

01:03:50.950 --> 01:03:50.960 align:start position:0%
always do the vectors because that's
 

01:03:50.960 --> 01:03:54.870 align:start position:0%
always do the vectors because that's
guaranteed<01:03:51.440><c> always</c><01:03:51.680><c> to</c><01:03:51.920><c> work.</c><01:03:52.880><c> Um</c><01:03:54.319><c> but</c><01:03:54.559><c> maybe</c>

01:03:54.870 --> 01:03:54.880 align:start position:0%
guaranteed always to work. Um but maybe
 

01:03:54.880 --> 01:03:56.710 align:start position:0%
guaranteed always to work. Um but maybe
I'm<01:03:55.119><c> old-fashioned</c>

01:03:56.710 --> 01:03:56.720 align:start position:0%
I'm old-fashioned
 

01:03:56.720 --> 01:03:58.950 align:start position:0%
I'm old-fashioned
um<01:03:57.920><c> because</c><01:03:58.160><c> you</c><01:03:58.319><c> might</c><01:03:58.480><c> say</c><01:03:58.640><c> well</c><01:03:58.799><c> the</c>

01:03:58.950 --> 01:03:58.960 align:start position:0%
um because you might say well the
 

01:03:58.960 --> 01:04:01.910 align:start position:0%
um because you might say well the
compiler<01:03:59.520><c> is</c><01:04:00.400><c> I</c><01:04:00.720><c> don't</c><01:04:01.039><c> really</c><01:04:01.359><c> know.</c><01:04:01.680><c> That's</c>

01:04:01.910 --> 01:04:01.920 align:start position:0%
compiler is I don't really know. That's
 

01:04:01.920 --> 01:04:03.430 align:start position:0%
compiler is I don't really know. That's
a<01:04:02.079><c> very</c><01:04:02.319><c> good</c><01:04:02.480><c> question.</c><01:04:02.720><c> I</c><01:04:02.960><c> mean,</c><01:04:03.119><c> do</c><01:04:03.359><c> you</c>

01:04:03.430 --> 01:04:03.440 align:start position:0%
a very good question. I mean, do you
 

01:04:03.440 --> 01:04:05.190 align:start position:0%
a very good question. I mean, do you
mean<01:04:03.599><c> better</c><01:04:04.000><c> in</c><01:04:04.240><c> terms</c><01:04:04.400><c> of</c><01:04:04.480><c> performance</c><01:04:04.880><c> or</c>

01:04:05.190 --> 01:04:05.200 align:start position:0%
mean better in terms of performance or
 

01:04:05.200 --> 01:04:07.750 align:start position:0%
mean better in terms of performance or
better<01:04:05.440><c> in</c><01:04:05.680><c> terms</c><01:04:05.839><c> of</c><01:04:06.720><c> code</c><01:04:07.039><c> maintainability</c>

01:04:07.750 --> 01:04:07.760 align:start position:0%
better in terms of code maintainability
 

01:04:07.760 --> 01:04:11.190 align:start position:0%
better in terms of code maintainability
or<01:04:08.000><c> outcome?</c><01:04:08.640><c> I</c><01:04:08.799><c> don't</c><01:04:08.960><c> know.</c>

01:04:11.190 --> 01:04:11.200 align:start position:0%
or outcome? I don't know.
 

01:04:11.200 --> 01:04:13.750 align:start position:0%
or outcome? I don't know.
Um,

01:04:13.750 --> 01:04:13.760 align:start position:0%
Um,
 

01:04:13.760 --> 01:04:15.990 align:start position:0%
Um,
to<01:04:14.000><c> be</c><01:04:14.160><c> honest,</c>

01:04:15.990 --> 01:04:16.000 align:start position:0%
to be honest,
 

01:04:16.000 --> 01:04:19.029 align:start position:0%
to be honest,
I<01:04:16.240><c> would</c><01:04:16.400><c> do</c><01:04:16.480><c> the</c><01:04:16.640><c> NPI</c><01:04:17.119><c> vectors</c><01:04:17.599><c> because</c><01:04:17.839><c> I</c>

01:04:19.029 --> 01:04:19.039 align:start position:0%
I would do the NPI vectors because I
 

01:04:19.039 --> 01:04:20.630 align:start position:0%
I would do the NPI vectors because I
Yeah,

01:04:20.630 --> 01:04:20.640 align:start position:0%
Yeah,
 

01:04:20.640 --> 01:04:23.270 align:start position:0%
Yeah,
I<01:04:21.119><c> it</c><01:04:21.280><c> very</c><01:04:21.520><c> much</c><01:04:21.760><c> depends.</c><01:04:22.160><c> I</c><01:04:22.400><c> don't</c><01:04:22.559><c> know.</c><01:04:23.039><c> I</c>

01:04:23.270 --> 01:04:23.280 align:start position:0%
I it very much depends. I don't know. I
 

01:04:23.280 --> 01:04:26.390 align:start position:0%
I it very much depends. I don't know. I
don't<01:04:23.440><c> know.</c><01:04:24.480><c> I</c><01:04:24.640><c> I</c><01:04:24.799><c> I</c><01:04:24.960><c> I</c><01:04:25.839><c> would</c><01:04:26.000><c> have</c><01:04:26.160><c> thought</c>

01:04:26.390 --> 01:04:26.400 align:start position:0%
don't know. I I I I would have thought
 

01:04:26.400 --> 01:04:29.270 align:start position:0%
don't know. I I I I would have thought
that

01:04:29.270 --> 01:04:29.280 align:start position:0%
that
 

01:04:29.280 --> 01:04:30.549 align:start position:0%
that
I<01:04:29.440><c> would</c><01:04:29.520><c> have</c><01:04:29.680><c> there's</c><01:04:29.920><c> probably</c><01:04:30.160><c> fewer</c>

01:04:30.549 --> 01:04:30.559 align:start position:0%
I would have there's probably fewer
 

01:04:30.559 --> 01:04:32.150 align:start position:0%
I would have there's probably fewer
copies<01:04:30.880><c> if</c><01:04:31.039><c> you</c><01:04:31.119><c> do</c><01:04:31.200><c> the</c><01:04:31.359><c> vectors.</c><01:04:31.680><c> I</c><01:04:31.920><c> might</c><01:04:32.000><c> be</c>

01:04:32.150 --> 01:04:32.160 align:start position:0%
copies if you do the vectors. I might be
 

01:04:32.160 --> 01:04:36.549 align:start position:0%
copies if you do the vectors. I might be
wrong<01:04:32.400><c> but</c><01:04:32.720><c> my</c><01:04:33.039><c> concern</c><01:04:33.359><c> is</c><01:04:33.599><c> that</c><01:04:34.960><c> often</c>

01:04:36.549 --> 01:04:36.559 align:start position:0%
wrong but my concern is that often
 

01:04:36.559 --> 01:04:39.910 align:start position:0%
wrong but my concern is that often
the<01:04:36.720><c> for</c><01:04:37.280><c> 2008</c><01:04:37.680><c> interface</c><01:04:38.079><c> can</c><01:04:38.319><c> be</c><01:04:39.359><c> for</c><01:04:39.680><c> is</c><01:04:39.760><c> a</c>

01:04:39.910 --> 01:04:39.920 align:start position:0%
the for 2008 interface can be for is a
 

01:04:39.920 --> 01:04:41.750 align:start position:0%
the for 2008 interface can be for is a
very<01:04:40.160><c> challenging</c><01:04:40.559><c> language</c><01:04:40.960><c> and</c><01:04:41.359><c> I</c><01:04:41.599><c> think</c>

01:04:41.750 --> 01:04:41.760 align:start position:0%
very challenging language and I think
 

01:04:41.760 --> 01:04:46.789 align:start position:0%
very challenging language and I think
things<01:04:42.000><c> can</c><01:04:42.160><c> go</c><01:04:42.319><c> wrong.</c><01:04:42.640><c> I</c><01:04:42.960><c> I</c><01:04:43.119><c> I</c><01:04:43.119><c> I</c><01:04:43.200><c> I</c><01:04:44.000><c> mean</c><01:04:44.480><c> um</c>

01:04:46.789 --> 01:04:46.799 align:start position:0%
things can go wrong. I I I I I mean um
 

01:04:46.799 --> 01:04:49.510 align:start position:0%
things can go wrong. I I I I I mean um
the<01:04:47.119><c> GNU</c><01:04:47.920><c> Yeah,</c><01:04:48.160><c> the</c><01:04:48.319><c> GNU</c><01:04:48.720><c> compiler</c><01:04:49.039><c> is</c><01:04:49.200><c> a</c><01:04:49.359><c> bug</c>

01:04:49.510 --> 01:04:49.520 align:start position:0%
the GNU Yeah, the GNU compiler is a bug
 

01:04:49.520 --> 01:04:51.829 align:start position:0%
the GNU Yeah, the GNU compiler is a bug
that<01:04:50.319><c> if</c><01:04:50.480><c> you</c><01:04:50.559><c> pass</c><01:04:50.799><c> array</c><01:04:51.119><c> subsections,</c><01:04:51.680><c> it</c>

01:04:51.829 --> 01:04:51.839 align:start position:0%
that if you pass array subsections, it
 

01:04:51.839 --> 01:04:54.710 align:start position:0%
that if you pass array subsections, it
mess<01:04:52.960><c> I</c><01:04:52.960><c> I</c><01:04:53.200><c> just</c>

01:04:54.710 --> 01:04:54.720 align:start position:0%
mess I I just
 

01:04:54.720 --> 01:04:56.710 align:start position:0%
mess I I just
I<01:04:54.960><c> would</c><01:04:55.119><c> never</c><01:04:55.359><c> be</c><01:04:55.599><c> I</c><01:04:55.760><c> would</c><01:04:55.920><c> if</c><01:04:56.160><c> if</c><01:04:56.160><c> if</c><01:04:56.480><c> I</c><01:04:56.559><c> had</c>

01:04:56.710 --> 01:04:56.720 align:start position:0%
I would never be I would if if if I had
 

01:04:56.720 --> 01:04:58.230 align:start position:0%
I would never be I would if if if I had
a<01:04:56.880><c> program</c><01:04:57.119><c> that</c><01:04:57.280><c> went</c><01:04:57.520><c> wrong</c><01:04:57.760><c> and</c><01:04:58.000><c> I</c><01:04:58.160><c> was</c>

01:04:58.230 --> 01:04:58.240 align:start position:0%
a program that went wrong and I was
 

01:04:58.240 --> 01:05:00.150 align:start position:0%
a program that went wrong and I was
using<01:04:58.400><c> the</c><01:04:58.480><c> for</c><01:04:58.960><c> 2008</c><01:04:59.440><c> interface</c><01:04:59.760><c> and</c><01:04:59.839><c> array</c>

01:05:00.150 --> 01:05:00.160 align:start position:0%
using the for 2008 interface and array
 

01:05:00.160 --> 01:05:01.670 align:start position:0%
using the for 2008 interface and array
syntax,<01:05:00.640><c> I</c><01:05:00.799><c> would</c><01:05:00.880><c> always</c><01:05:01.039><c> be</c><01:05:01.440><c> is</c><01:05:01.520><c> there</c>

01:05:01.670 --> 01:05:01.680 align:start position:0%
syntax, I would always be is there
 

01:05:01.680 --> 01:05:03.109 align:start position:0%
syntax, I would always be is there
something<01:05:01.839><c> going</c><01:05:02.000><c> wrong</c><01:05:02.240><c> here?</c><01:05:02.559><c> But</c><01:05:02.640><c> is</c><01:05:02.799><c> there</c>

01:05:03.109 --> 01:05:03.119 align:start position:0%
something going wrong here? But is there
 

01:05:03.119 --> 01:05:07.029 align:start position:0%
something going wrong here? But is there
is<01:05:03.280><c> it</c><01:05:03.440><c> not</c><01:05:03.680><c> quite</c><01:05:04.000><c> doing</c><01:05:04.160><c> it</c><01:05:04.400><c> right?</c><01:05:05.440><c> Um</c>

01:05:07.029 --> 01:05:07.039 align:start position:0%
is it not quite doing it right? Um
 

01:05:07.039 --> 01:05:09.829 align:start position:0%
is it not quite doing it right? Um
yeah<01:05:07.599><c> I</c><01:05:07.839><c> I</c><01:05:07.920><c> I</c><01:05:08.480><c> but</c><01:05:08.720><c> I</c><01:05:08.880><c> I'm</c><01:05:09.119><c> sure</c><01:05:09.200><c> if</c><01:05:09.359><c> you</c><01:05:09.440><c> asked</c><01:05:09.599><c> a</c>

01:05:09.829 --> 01:05:09.839 align:start position:0%
yeah I I I but I I'm sure if you asked a
 

01:05:09.839 --> 01:05:11.190 align:start position:0%
yeah I I I but I I'm sure if you asked a
more<01:05:10.000><c> modern</c><01:05:10.240><c> format</c><01:05:10.640><c> programming</c><01:05:11.039><c> they</c>

01:05:11.190 --> 01:05:11.200 align:start position:0%
more modern format programming they
 

01:05:11.200 --> 01:05:13.109 align:start position:0%
more modern format programming they
might<01:05:11.280><c> have</c><01:05:11.359><c> a</c><01:05:11.440><c> different</c><01:05:11.599><c> answer</c><01:05:11.920><c> but</c><01:05:12.880><c> the</c>

01:05:13.109 --> 01:05:13.119 align:start position:0%
might have a different answer but the
 

01:05:13.119 --> 01:05:17.430 align:start position:0%
might have a different answer but the
function<01:05:14.000><c> interface</c><01:05:14.319><c> is</c><01:05:14.559><c> great</c><01:05:15.440><c> but</c><01:05:16.079><c> um</c><01:05:16.880><c> um</c><01:05:17.119><c> it</c>

01:05:17.430 --> 01:05:17.440 align:start position:0%
function interface is great but um um it
 

01:05:17.440 --> 01:05:19.829 align:start position:0%
function interface is great but um um it
does<01:05:17.680><c> rely</c><01:05:18.640><c> heavily</c><01:05:18.960><c> on</c><01:05:19.119><c> your</c><01:05:19.280><c> forran</c>

01:05:19.829 --> 01:05:19.839 align:start position:0%
does rely heavily on your forran
 

01:05:19.839 --> 01:05:21.750 align:start position:0%
does rely heavily on your forran
compiler<01:05:20.240><c> being</c><01:05:20.480><c> 100%</c><01:05:20.960><c> correct</c><01:05:21.280><c> and</c><01:05:21.520><c> doing</c>

01:05:21.750 --> 01:05:21.760 align:start position:0%
compiler being 100% correct and doing
 

01:05:21.760 --> 01:05:24.230 align:start position:0%
compiler being 100% correct and doing
everything<01:05:22.000><c> correctly</c><01:05:22.559><c> and</c><01:05:23.280><c> a</c><01:05:23.520><c> lot</c><01:05:23.599><c> of</c><01:05:23.920><c> areas</c>

01:05:24.230 --> 01:05:24.240 align:start position:0%
everything correctly and a lot of areas
 

01:05:24.240 --> 01:05:26.710 align:start position:0%
everything correctly and a lot of areas
of<01:05:24.319><c> the</c><01:05:24.400><c> forran</c><01:05:24.960><c> standard</c><01:05:25.839><c> aren't</c><01:05:26.160><c> exercised</c>

01:05:26.710 --> 01:05:26.720 align:start position:0%
of the forran standard aren't exercised
 

01:05:26.720 --> 01:05:28.390 align:start position:0%
of the forran standard aren't exercised
that<01:05:26.960><c> much.</c><01:05:27.200><c> You</c><01:05:27.359><c> know</c><01:05:27.440><c> a</c><01:05:27.520><c> lot</c><01:05:27.599><c> of</c><01:05:27.680><c> for</c><01:05:28.160><c> pros</c>

01:05:28.390 --> 01:05:28.400 align:start position:0%
that much. You know a lot of for pros
 

01:05:28.400 --> 01:05:30.230 align:start position:0%
that much. You know a lot of for pros
are<01:05:28.559><c> pretty</c><01:05:28.720><c> old-fashioned.</c><01:05:29.680><c> So</c><01:05:29.839><c> when</c><01:05:30.000><c> people</c>

01:05:30.230 --> 01:05:30.240 align:start position:0%
are pretty old-fashioned. So when people
 

01:05:30.240 --> 01:05:32.950 align:start position:0%
are pretty old-fashioned. So when people
start<01:05:30.400><c> using</c><01:05:30.640><c> modern</c><01:05:31.039><c> features,</c><01:05:32.240><c> I'm</c><01:05:32.480><c> always</c>

01:05:32.950 --> 01:05:32.960 align:start position:0%
start using modern features, I'm always
 

01:05:32.960 --> 01:05:34.150 align:start position:0%
start using modern features, I'm always
concerned<01:05:33.359><c> there</c><01:05:33.520><c> could</c><01:05:33.680><c> be</c><01:05:33.760><c> bugs</c><01:05:34.000><c> there.</c>

01:05:34.150 --> 01:05:34.160 align:start position:0%
concerned there could be bugs there.
 

01:05:34.160 --> 01:05:36.230 align:start position:0%
concerned there could be bugs there.
They<01:05:34.400><c> just</c><01:05:34.559><c> haven't</c><01:05:34.720><c> been</c><01:05:34.880><c> exercised</c><01:05:35.440><c> yet.</c><01:05:35.839><c> So</c>

01:05:36.230 --> 01:05:36.240 align:start position:0%
They just haven't been exercised yet. So
 

01:05:36.240 --> 01:05:37.670 align:start position:0%
They just haven't been exercised yet. So
I<01:05:36.480><c> would</c><01:05:36.559><c> go</c><01:05:36.720><c> with</c><01:05:36.799><c> the</c><01:05:36.960><c> vectors,</c><01:05:37.200><c> but</c><01:05:37.359><c> I</c><01:05:37.520><c> it's</c>

01:05:37.670 --> 01:05:37.680 align:start position:0%
I would go with the vectors, but I it's
 

01:05:37.680 --> 01:05:39.589 align:start position:0%
I would go with the vectors, but I it's
a<01:05:37.760><c> very</c><01:05:37.920><c> good</c><01:05:38.000><c> question.</c><01:05:38.319><c> I</c><01:05:38.480><c> don't</c><01:05:38.640><c> know.</c>

01:05:39.589 --> 01:05:39.599 align:start position:0%
a very good question. I don't know.
 

01:05:39.599 --> 01:05:41.670 align:start position:0%
a very good question. I don't know.
It'll<01:05:39.839><c> be</c><01:05:40.000><c> an</c><01:05:40.079><c> interesting</c><01:05:40.400><c> thing</c><01:05:40.559><c> to</c><01:05:40.799><c> try.</c>

01:05:41.670 --> 01:05:41.680 align:start position:0%
It'll be an interesting thing to try.
 

01:05:41.680 --> 01:05:44.230 align:start position:0%
It'll be an interesting thing to try.
Interesting<01:05:42.079><c> to</c><01:05:42.319><c> try.</c>

01:05:44.230 --> 01:05:44.240 align:start position:0%
Interesting to try.
 

01:05:44.240 --> 01:05:46.950 align:start position:0%
Interesting to try.
Okay.<01:05:44.480><c> So</c><01:05:44.640><c> I'm</c><01:05:44.960><c> I'm</c><01:05:45.119><c> going</c><01:05:45.200><c> to</c><01:05:45.359><c> take</c><01:05:45.520><c> a</c><01:05:46.160><c> a</c><01:05:46.559><c> break</c>

01:05:46.950 --> 01:05:46.960 align:start position:0%
Okay. So I'm I'm going to take a a break
 

01:05:46.960 --> 01:05:49.510 align:start position:0%
Okay. So I'm I'm going to take a a break
now.<01:05:47.520><c> Um</c>

01:05:49.510 --> 01:05:49.520 align:start position:0%
now. Um
 

01:05:49.520 --> 01:05:52.950 align:start position:0%
now. Um
I,<01:05:50.480><c> as</c><01:05:50.720><c> I</c><01:05:50.880><c> said,</c><01:05:51.200><c> I'm</c>

01:05:52.950 --> 01:05:52.960 align:start position:0%
I, as I said, I'm
 

01:05:52.960 --> 01:05:56.599 align:start position:0%
I, as I said, I'm
struggling<01:05:53.359><c> with</c><01:05:53.599><c> multiple</c>

