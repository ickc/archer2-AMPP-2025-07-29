WEBVTT
Kind: captions
Language: en

00:00:04.400 --> 00:00:08.310 align:start position:0%
 
start<00:00:04.640><c> recording</c><00:00:05.120><c> again.</c><00:00:06.560><c> Um,</c><00:00:08.000><c> okay.</c>

00:00:08.310 --> 00:00:08.320 align:start position:0%
start recording again. Um, okay.
 

00:00:08.320 --> 00:00:09.750 align:start position:0%
start recording again. Um, okay.
Postage.<00:00:09.040><c> Yes,</c><00:00:09.280><c> that's</c><00:00:09.360><c> right.</c><00:00:09.599><c> At</c><00:00:09.599><c> least</c>

00:00:09.750 --> 00:00:09.760 align:start position:0%
Postage. Yes, that's right. At least
 

00:00:09.760 --> 00:00:11.669 align:start position:0%
Postage. Yes, that's right. At least
it's<00:00:10.000><c> Yeah.</c><00:00:10.240><c> So,</c><00:00:10.400><c> I</c><00:00:10.559><c> think</c><00:00:10.639><c> it</c><00:00:10.960><c> the</c><00:00:11.280><c> view</c><00:00:11.519><c> can</c>

00:00:11.669 --> 00:00:11.679 align:start position:0%
it's Yeah. So, I think it the view can
 

00:00:11.679 --> 00:00:13.350 align:start position:0%
it's Yeah. So, I think it the view can
be<00:00:11.840><c> customized,</c><00:00:12.240><c> but</c><00:00:12.400><c> at</c><00:00:12.400><c> least</c><00:00:12.960><c> you</c><00:00:13.200><c> should</c>

00:00:13.350 --> 00:00:13.360 align:start position:0%
be customized, but at least you should
 

00:00:13.360 --> 00:00:17.109 align:start position:0%
be customized, but at least you should
be<00:00:13.440><c> able</c><00:00:13.599><c> to</c><00:00:13.759><c> see</c><00:00:13.920><c> something.</c><00:00:14.639><c> So</c><00:00:15.280><c> um</c><00:00:16.720><c> what</c><00:00:16.960><c> I'm</c>

00:00:17.109 --> 00:00:17.119 align:start position:0%
be able to see something. So um what I'm
 

00:00:17.119 --> 00:00:18.870 align:start position:0%
be able to see something. So um what I'm
going<00:00:17.199><c> to</c><00:00:17.359><c> cover</c><00:00:17.600><c> now</c><00:00:17.760><c> is</c><00:00:17.920><c> sort</c><00:00:18.080><c> of</c><00:00:18.320><c> NPI</c>

00:00:18.870 --> 00:00:18.880 align:start position:0%
going to cover now is sort of NPI
 

00:00:18.880 --> 00:00:22.870 align:start position:0%
going to cover now is sort of NPI
internals<00:00:20.240><c> and</c><00:00:21.279><c> this</c><00:00:21.600><c> and</c><00:00:21.760><c> the</c><00:00:22.000><c> next</c><00:00:22.240><c> lecture</c>

00:00:22.870 --> 00:00:22.880 align:start position:0%
internals and this and the next lecture
 

00:00:22.880 --> 00:00:25.590 align:start position:0%
internals and this and the next lecture
sort<00:00:23.039><c> of</c><00:00:23.119><c> be</c><00:00:23.439><c> cover</c><00:00:23.840><c> both</c>

00:00:25.590 --> 00:00:25.600 align:start position:0%
sort of be cover both
 

00:00:25.600 --> 00:00:27.429 align:start position:0%
sort of be cover both
um

00:00:27.429 --> 00:00:27.439 align:start position:0%
um
 

00:00:27.439 --> 00:00:30.790 align:start position:0%
um
sort<00:00:27.680><c> of</c><00:00:27.840><c> idea</c><00:00:28.000><c> of</c><00:00:28.160><c> how</c><00:00:28.320><c> NPI</c><00:00:28.880><c> works</c><00:00:29.359><c> inside</c><00:00:30.480><c> and</c>

00:00:30.790 --> 00:00:30.800 align:start position:0%
sort of idea of how NPI works inside and
 

00:00:30.800 --> 00:00:35.510 align:start position:0%
sort of idea of how NPI works inside and
then<00:00:31.760><c> um</c><00:00:33.200><c> how</c><00:00:33.920><c> that</c><00:00:34.239><c> affects</c><00:00:34.880><c> potentially</c><00:00:35.360><c> the</c>

00:00:35.510 --> 00:00:35.520 align:start position:0%
then um how that affects potentially the
 

00:00:35.520 --> 00:00:37.110 align:start position:0%
then um how that affects potentially the
performance<00:00:35.920><c> you</c><00:00:36.079><c> see</c><00:00:36.239><c> and</c><00:00:36.480><c> then</c><00:00:36.640><c> also</c><00:00:36.880><c> how</c>

00:00:37.110 --> 00:00:37.120 align:start position:0%
performance you see and then also how
 

00:00:37.120 --> 00:00:39.110 align:start position:0%
performance you see and then also how
you<00:00:37.360><c> can</c><00:00:38.160><c> you</c><00:00:38.399><c> can</c><00:00:38.559><c> then</c><00:00:38.719><c> use</c><00:00:38.879><c> that</c>

00:00:39.110 --> 00:00:39.120 align:start position:0%
you can you can then use that
 

00:00:39.120 --> 00:00:43.190 align:start position:0%
you can you can then use that
information<00:00:39.600><c> to</c><00:00:39.760><c> to</c><00:00:40.079><c> hopefully</c><00:00:40.960><c> um</c><00:00:41.520><c> write</c>

00:00:43.190 --> 00:00:43.200 align:start position:0%
information to to hopefully um write
 

00:00:43.200 --> 00:00:45.430 align:start position:0%
information to to hopefully um write
more<00:00:43.440><c> efficient</c><00:00:43.920><c> code</c><00:00:44.640><c> have</c><00:00:44.879><c> understanding</c><00:00:45.280><c> a</c>

00:00:45.430 --> 00:00:45.440 align:start position:0%
more efficient code have understanding a
 

00:00:45.440 --> 00:00:46.950 align:start position:0%
more efficient code have understanding a
bit<00:00:45.520><c> more</c><00:00:45.680><c> about</c><00:00:45.840><c> how</c><00:00:45.920><c> NPI</c><00:00:46.399><c> works.</c><00:00:46.559><c> Now</c><00:00:46.719><c> these</c>

00:00:46.950 --> 00:00:46.960 align:start position:0%
bit more about how NPI works. Now these
 

00:00:46.960 --> 00:00:49.029 align:start position:0%
bit more about how NPI works. Now these
are<00:00:47.039><c> generic</c><00:00:47.440><c> comments</c><00:00:47.840><c> because</c><00:00:48.079><c> of</c><00:00:48.239><c> course</c>

00:00:49.029 --> 00:00:49.039 align:start position:0%
are generic comments because of course
 

00:00:49.039 --> 00:00:52.150 align:start position:0%
are generic comments because of course
um<00:00:49.600><c> I</c><00:00:49.840><c> didn't</c><00:00:50.000><c> write</c><00:00:50.160><c> the</c><00:00:50.320><c> NPI</c><00:00:50.800><c> libraries</c><00:00:51.280><c> open</c>

00:00:52.150 --> 00:00:52.160 align:start position:0%
um I didn't write the NPI libraries open
 

00:00:52.160 --> 00:00:55.110 align:start position:0%
um I didn't write the NPI libraries open
NPI<00:00:52.559><c> or</c><00:00:52.640><c> NPICH2</c><00:00:53.520><c> or</c><00:00:53.600><c> Intel</c><00:00:54.000><c> NPI</c><00:00:54.879><c> weren't</c>

00:00:55.110 --> 00:00:55.120 align:start position:0%
NPI or NPICH2 or Intel NPI weren't
 

00:00:55.120 --> 00:00:56.549 align:start position:0%
NPI or NPICH2 or Intel NPI weren't
written<00:00:55.360><c> by</c><00:00:55.520><c> me</c><00:00:55.680><c> but</c><00:00:55.920><c> these</c><00:00:56.079><c> are</c><00:00:56.239><c> generic</c>

00:00:56.549 --> 00:00:56.559 align:start position:0%
written by me but these are generic
 

00:00:56.559 --> 00:00:58.549 align:start position:0%
written by me but these are generic
comments<00:00:57.280><c> I</c><00:00:57.440><c> thought</c><00:00:57.680><c> a</c><00:00:57.920><c> good</c><00:00:58.079><c> mental</c><00:00:58.399><c> model</c>

00:00:58.549 --> 00:00:58.559 align:start position:0%
comments I thought a good mental model
 

00:00:58.559 --> 00:01:01.110 align:start position:0%
comments I thought a good mental model
for<00:00:58.719><c> how</c><00:00:58.879><c> things</c><00:00:59.120><c> go</c><00:00:59.280><c> on</c><00:01:00.160><c> in</c><00:01:00.399><c> reality</c><00:01:00.879><c> things</c>

00:01:01.110 --> 00:01:01.120 align:start position:0%
for how things go on in reality things
 

00:01:01.120 --> 00:01:02.790 align:start position:0%
for how things go on in reality things
will<00:01:01.359><c> probably</c><00:01:01.680><c> be</c><00:01:01.920><c> slightly</c><00:01:02.239><c> different</c><00:01:02.480><c> at</c><00:01:02.640><c> a</c>

00:01:02.790 --> 00:01:02.800 align:start position:0%
will probably be slightly different at a
 

00:01:02.800 --> 00:01:04.630 align:start position:0%
will probably be slightly different at a
low<00:01:02.960><c> level</c><00:01:03.760><c> and</c><00:01:04.000><c> there</c><00:01:04.159><c> will</c><00:01:04.320><c> be</c><00:01:04.479><c> other</c>

00:01:04.630 --> 00:01:04.640 align:start position:0%
low level and there will be other
 

00:01:04.640 --> 00:01:07.030 align:start position:0%
low level and there will be other
optimizations<00:01:05.280><c> but</c><00:01:05.519><c> these</c><00:01:05.760><c> are</c><00:01:06.479><c> a</c><00:01:06.640><c> reasonably</c>

00:01:07.030 --> 00:01:07.040 align:start position:0%
optimizations but these are a reasonably
 

00:01:07.040 --> 00:01:08.789 align:start position:0%
optimizations but these are a reasonably
good<00:01:07.200><c> mental</c><00:01:07.520><c> model</c><00:01:07.760><c> of</c><00:01:08.000><c> a</c><00:01:08.159><c> high</c><00:01:08.320><c> level</c><00:01:08.640><c> what</c>

00:01:08.789 --> 00:01:08.799 align:start position:0%
good mental model of a high level what
 

00:01:08.799 --> 00:01:11.109 align:start position:0%
good mental model of a high level what
what<00:01:09.040><c> what's</c><00:01:09.360><c> going</c><00:01:09.520><c> on</c><00:01:09.760><c> inside</c><00:01:10.560><c> I</c><00:01:10.799><c> think</c><00:01:10.880><c> the</c>

00:01:11.109 --> 00:01:11.119 align:start position:0%
what what's going on inside I think the
 

00:01:11.119 --> 00:01:12.950 align:start position:0%
what what's going on inside I think the
main<00:01:11.280><c> thing</c><00:01:11.439><c> to</c><00:01:11.680><c> stress</c><00:01:12.000><c> for</c><00:01:12.080><c> I</c><00:01:12.400><c> start</c><00:01:12.560><c> out</c><00:01:12.799><c> now</c>

00:01:12.950 --> 00:01:12.960 align:start position:0%
main thing to stress for I start out now
 

00:01:12.960 --> 00:01:15.030 align:start position:0%
main thing to stress for I start out now
is<00:01:13.119><c> that</c><00:01:13.360><c> NPI</c>

00:01:15.030 --> 00:01:15.040 align:start position:0%
is that NPI
 

00:01:15.040 --> 00:01:18.230 align:start position:0%
is that NPI
um<00:01:15.840><c> is</c><00:01:16.159><c> a</c><00:01:16.400><c> very</c><00:01:16.560><c> old</c><00:01:16.720><c> I</c><00:01:16.880><c> mean</c><00:01:17.040><c> NPI</c><00:01:17.520><c> was</c><00:01:17.680><c> defined</c>

00:01:18.230 --> 00:01:18.240 align:start position:0%
um is a very old I mean NPI was defined
 

00:01:18.240 --> 00:01:20.469 align:start position:0%
um is a very old I mean NPI was defined
over<00:01:18.640><c> 30</c><00:01:19.040><c> years</c><00:01:19.200><c> ago.</c><00:01:19.520><c> It's</c><00:01:19.759><c> remarkable</c><00:01:20.159><c> it's</c>

00:01:20.469 --> 00:01:20.479 align:start position:0%
over 30 years ago. It's remarkable it's
 

00:01:20.479 --> 00:01:23.350 align:start position:0%
over 30 years ago. It's remarkable it's
still<00:01:20.720><c> going</c><00:01:21.360><c> and</c><00:01:21.680><c> you</c><00:01:21.920><c> if</c><00:01:22.080><c> it</c><00:01:22.240><c> were</c><00:01:22.479><c> designed</c>

00:01:23.350 --> 00:01:23.360 align:start position:0%
still going and you if it were designed
 

00:01:23.360 --> 00:01:25.350 align:start position:0%
still going and you if it were designed
today<00:01:23.759><c> it</c><00:01:23.920><c> would</c><00:01:24.159><c> probably</c><00:01:24.640><c> not</c><00:01:24.880><c> be</c><00:01:25.040><c> designed</c>

00:01:25.350 --> 00:01:25.360 align:start position:0%
today it would probably not be designed
 

00:01:25.360 --> 00:01:27.910 align:start position:0%
today it would probably not be designed
the<00:01:25.600><c> way</c><00:01:25.680><c> it</c><00:01:25.840><c> is</c><00:01:26.000><c> now.</c><00:01:26.560><c> Computing</c><00:01:27.040><c> has</c><00:01:27.280><c> changed</c>

00:01:27.910 --> 00:01:27.920 align:start position:0%
the way it is now. Computing has changed
 

00:01:27.920 --> 00:01:32.310 align:start position:0%
the way it is now. Computing has changed
immensely.<00:01:29.280><c> Um</c><00:01:30.320><c> not</c><00:01:30.560><c> least</c><00:01:30.960><c> for</c><00:01:31.119><c> example</c><00:01:32.079><c> um</c>

00:01:32.310 --> 00:01:32.320 align:start position:0%
immensely. Um not least for example um
 

00:01:32.320 --> 00:01:34.870 align:start position:0%
immensely. Um not least for example um
30<00:01:32.640><c> years</c><00:01:32.799><c> ago</c><00:01:33.680><c> all</c><00:01:34.000><c> processors</c><00:01:34.720><c> all</c>

00:01:34.870 --> 00:01:34.880 align:start position:0%
30 years ago all processors all
 

00:01:34.880 --> 00:01:36.950 align:start position:0%
30 years ago all processors all
computers<00:01:35.280><c> were</c><00:01:35.520><c> single</c><00:01:36.079><c> processors.</c><00:01:36.799><c> you</c>

00:01:36.950 --> 00:01:36.960 align:start position:0%
computers were single processors. you
 

00:01:36.960 --> 00:01:38.550 align:start position:0%
computers were single processors. you
had<00:01:37.119><c> a</c><00:01:37.280><c> single</c><00:01:37.520><c> process</c><00:01:37.840><c> there</c><00:01:38.079><c> no</c><00:01:38.240><c> shared</c>

00:01:38.550 --> 00:01:38.560 align:start position:0%
had a single process there no shared
 

00:01:38.560 --> 00:01:42.630 align:start position:0%
had a single process there no shared
memory<00:01:39.600><c> um</c><00:01:40.640><c> and</c><00:01:40.960><c> so</c><00:01:41.520><c> um</c><00:01:41.600><c> you</c><00:01:41.840><c> ran</c><00:01:42.400><c> single</c>

00:01:42.630 --> 00:01:42.640 align:start position:0%
memory um and so um you ran single
 

00:01:42.640 --> 00:01:45.429 align:start position:0%
memory um and so um you ran single
threaded<00:01:43.119><c> programs</c><00:01:44.240><c> um</c><00:01:44.320><c> and</c><00:01:44.560><c> and</c><00:01:44.960><c> that's</c><00:01:45.280><c> not</c>

00:01:45.429 --> 00:01:45.439 align:start position:0%
threaded programs um and and that's not
 

00:01:45.439 --> 00:01:47.109 align:start position:0%
threaded programs um and and that's not
true<00:01:45.680><c> anymore</c><00:01:45.920><c> so</c><00:01:46.159><c> so</c><00:01:46.399><c> some</c><00:01:46.560><c> fundamental</c>

00:01:47.109 --> 00:01:47.119 align:start position:0%
true anymore so so some fundamental
 

00:01:47.119 --> 00:01:49.109 align:start position:0%
true anymore so so some fundamental
design<00:01:47.360><c> issues</c><00:01:47.600><c> by</c><00:01:47.759><c> NPI</c><00:01:48.240><c> would</c><00:01:48.479><c> be</c><00:01:48.720><c> different</c>

00:01:49.109 --> 00:01:49.119 align:start position:0%
design issues by NPI would be different
 

00:01:49.119 --> 00:01:50.870 align:start position:0%
design issues by NPI would be different
now<00:01:49.360><c> if</c><00:01:49.520><c> they</c><00:01:49.759><c> were</c><00:01:49.920><c> but</c><00:01:50.159><c> this</c><00:01:50.320><c> is</c><00:01:50.560><c> you</c><00:01:50.720><c> know</c>

00:01:50.870 --> 00:01:50.880 align:start position:0%
now if they were but this is you know
 

00:01:50.880 --> 00:01:52.550 align:start position:0%
now if they were but this is you know
some<00:01:51.040><c> of</c><00:01:51.200><c> how</c><00:01:51.439><c> NPI</c><00:01:51.840><c> is</c><00:01:52.000><c> implemented</c><00:01:52.399><c> is</c>

00:01:52.550 --> 00:01:52.560 align:start position:0%
some of how NPI is implemented is
 

00:01:52.560 --> 00:01:54.310 align:start position:0%
some of how NPI is implemented is
constrained<00:01:53.040><c> by</c><00:01:53.200><c> how</c><00:01:53.360><c> it</c><00:01:53.600><c> was</c><00:01:53.680><c> defined</c><00:01:54.079><c> back</c>

00:01:54.310 --> 00:01:54.320 align:start position:0%
constrained by how it was defined back
 

00:01:54.320 --> 00:01:56.550 align:start position:0%
constrained by how it was defined back
then<00:01:54.880><c> which</c><00:01:55.040><c> was</c><00:01:55.360><c> which</c><00:01:55.600><c> was</c><00:01:55.920><c> obviously</c><00:01:56.320><c> done</c>

00:01:56.550 --> 00:01:56.560 align:start position:0%
then which was which was obviously done
 

00:01:56.560 --> 00:01:58.550 align:start position:0%
then which was which was obviously done
well<00:01:56.799><c> because</c><00:01:57.040><c> it's</c><00:01:57.200><c> still</c><00:01:57.600><c> usable</c><00:01:57.920><c> now</c><00:01:58.399><c> but</c>

00:01:58.550 --> 00:01:58.560 align:start position:0%
well because it's still usable now but
 

00:01:58.560 --> 00:01:59.910 align:start position:0%
well because it's still usable now but
you<00:01:58.799><c> would</c><00:01:58.880><c> probably</c><00:01:59.200><c> do</c><00:01:59.360><c> it</c><00:01:59.520><c> differently</c><00:01:59.759><c> if</c>

00:01:59.910 --> 00:01:59.920 align:start position:0%
you would probably do it differently if
 

00:01:59.920 --> 00:02:02.230 align:start position:0%
you would probably do it differently if
you<00:02:00.079><c> were</c><00:02:00.240><c> starting</c><00:02:00.479><c> out</c><00:02:00.640><c> from</c><00:02:00.880><c> scratch</c><00:02:01.280><c> today</c>

00:02:02.230 --> 00:02:02.240 align:start position:0%
you were starting out from scratch today
 

00:02:02.240 --> 00:02:04.550 align:start position:0%
you were starting out from scratch today
so<00:02:02.960><c> um</c>

00:02:04.550 --> 00:02:04.560 align:start position:0%
so um
 

00:02:04.560 --> 00:02:07.910 align:start position:0%
so um
okay<00:02:04.880><c> I'll</c><00:02:05.280><c> check</c>

00:02:07.910 --> 00:02:07.920 align:start position:0%
okay I'll check
 

00:02:07.920 --> 00:02:09.510 align:start position:0%
okay I'll check
So<00:02:08.080><c> I</c><00:02:08.319><c> am</c><00:02:08.479><c> recording</c><00:02:08.800><c> these</c><00:02:09.039><c> lectures</c><00:02:09.360><c> and</c>

00:02:09.510 --> 00:02:09.520 align:start position:0%
So I am recording these lectures and
 

00:02:09.520 --> 00:02:11.750 align:start position:0%
So I am recording these lectures and
they<00:02:09.759><c> will</c><00:02:09.920><c> appear</c><00:02:10.239><c> on</c><00:02:10.479><c> the</c><00:02:10.720><c> website</c><00:02:11.360><c> shortly</c>

00:02:11.750 --> 00:02:11.760 align:start position:0%
they will appear on the website shortly
 

00:02:11.760 --> 00:02:14.229 align:start position:0%
they will appear on the website shortly
after<00:02:12.000><c> the</c><00:02:12.239><c> the</c><00:02:12.959><c> So</c><00:02:13.200><c> I'll</c><00:02:13.440><c> talk</c><00:02:13.599><c> briefly</c><00:02:14.000><c> about</c>

00:02:14.229 --> 00:02:14.239 align:start position:0%
after the the So I'll talk briefly about
 

00:02:14.239 --> 00:02:17.110 align:start position:0%
after the the So I'll talk briefly about
the<00:02:14.400><c> NPI</c><00:02:14.879><c> library</c><00:02:15.280><c> structure.</c><00:02:16.560><c> I'll</c><00:02:16.800><c> focus</c>

00:02:17.110 --> 00:02:17.120 align:start position:0%
the NPI library structure. I'll focus
 

00:02:17.120 --> 00:02:19.030 align:start position:0%
the NPI library structure. I'll focus
mostly<00:02:17.520><c> on</c><00:02:17.680><c> pointtooint</c><00:02:18.480><c> because</c><00:02:18.720><c> if</c><00:02:18.879><c> you</c>

00:02:19.030 --> 00:02:19.040 align:start position:0%
mostly on pointtooint because if you
 

00:02:19.040 --> 00:02:21.110 align:start position:0%
mostly on pointtooint because if you
understand<00:02:19.360><c> pointtooint</c><00:02:20.480><c> um</c><00:02:20.800><c> that's</c>

00:02:21.110 --> 00:02:21.120 align:start position:0%
understand pointtooint um that's
 

00:02:21.120 --> 00:02:26.070 align:start position:0%
understand pointtooint um that's
probably<00:02:21.360><c> the</c><00:02:21.840><c> the</c><00:02:22.319><c> core</c><00:02:22.560><c> of</c><00:02:22.800><c> most</c><00:02:23.440><c> um</c><00:02:24.560><c> uh</c><00:02:24.879><c> MPI</c>

00:02:26.070 --> 00:02:26.080 align:start position:0%
probably the the core of most um uh MPI
 

00:02:26.080 --> 00:02:29.270 align:start position:0%
probably the the core of most um uh MPI
um<00:02:27.520><c> programs</c><00:02:28.000><c> send</c><00:02:28.160><c> and</c><00:02:28.400><c> receive.</c><00:02:28.800><c> talk</c><00:02:29.040><c> a</c><00:02:29.120><c> bit</c>

00:02:29.270 --> 00:02:29.280 align:start position:0%
um programs send and receive. talk a bit
 

00:02:29.280 --> 00:02:30.869 align:start position:0%
um programs send and receive. talk a bit
about<00:02:30.000><c> and</c><00:02:30.080><c> I</c><00:02:30.160><c> actually</c><00:02:30.319><c> won't</c><00:02:30.560><c> talk</c><00:02:30.720><c> about</c>

00:02:30.869 --> 00:02:30.879 align:start position:0%
about and I actually won't talk about
 

00:02:30.879 --> 00:02:33.750 align:start position:0%
about and I actually won't talk about
single-sided<00:02:31.840><c> um</c><00:02:32.480><c> this</c><00:02:32.640><c> is</c><00:02:33.200><c> very</c><00:02:33.519><c> little</c>

00:02:33.750 --> 00:02:33.760 align:start position:0%
single-sided um this is very little
 

00:02:33.760 --> 00:02:36.150 align:start position:0%
single-sided um this is very little
there<00:02:34.239><c> but</c><00:02:34.560><c> really</c><00:02:34.879><c> most</c><00:02:35.120><c> of</c><00:02:35.280><c> this</c><00:02:35.519><c> this</c><00:02:35.599><c> this</c>

00:02:36.150 --> 00:02:36.160 align:start position:0%
there but really most of this this this
 

00:02:36.160 --> 00:02:37.830 align:start position:0%
there but really most of this this this
talk<00:02:36.400><c> is</c><00:02:36.640><c> about</c><00:02:36.800><c> how</c><00:02:36.959><c> pointto-point</c>

00:02:37.830 --> 00:02:37.840 align:start position:0%
talk is about how pointto-point
 

00:02:37.840 --> 00:02:39.750 align:start position:0%
talk is about how pointto-point
communications<00:02:38.560><c> works</c><00:02:39.040><c> and</c><00:02:39.280><c> it</c><00:02:39.440><c> it's</c>

00:02:39.750 --> 00:02:39.760 align:start position:0%
communications works and it it's
 

00:02:39.760 --> 00:02:42.710 align:start position:0%
communications works and it it's
slightly<00:02:40.160><c> more</c><00:02:41.440><c> um</c><00:02:41.760><c> involved</c><00:02:42.160><c> than</c><00:02:42.400><c> you</c><00:02:42.560><c> might</c>

00:02:42.710 --> 00:02:42.720 align:start position:0%
slightly more um involved than you might
 

00:02:42.720 --> 00:02:46.309 align:start position:0%
slightly more um involved than you might
imagine<00:02:43.519><c> um</c><00:02:43.840><c> to</c><00:02:44.080><c> get</c><00:02:44.319><c> things</c><00:02:44.560><c> working.</c>

00:02:46.309 --> 00:02:46.319 align:start position:0%
imagine um to get things working.
 

00:02:46.319 --> 00:02:49.110 align:start position:0%
imagine um to get things working.
So<00:02:46.959><c> um</c>

00:02:49.110 --> 00:02:49.120 align:start position:0%
So um
 

00:02:49.120 --> 00:02:51.110 align:start position:0%
So um
NPI<00:02:49.519><c> implementations</c><00:02:50.319><c> are</c><00:02:50.560><c> split</c><00:02:50.800><c> into</c>

00:02:51.110 --> 00:02:51.120 align:start position:0%
NPI implementations are split into
 

00:02:51.120 --> 00:02:56.229 align:start position:0%
NPI implementations are split into
modules.<00:02:52.239><c> Um</c><00:02:52.800><c> and</c><00:02:53.840><c> actually</c><00:02:54.480><c> there's</c><00:02:54.959><c> quite</c><00:02:55.599><c> a</c>

00:02:56.229 --> 00:02:56.239 align:start position:0%
modules. Um and actually there's quite a
 

00:02:56.239 --> 00:02:58.309 align:start position:0%
modules. Um and actually there's quite a
um<00:02:56.720><c> sorry</c>

00:02:58.309 --> 00:02:58.319 align:start position:0%
um sorry
 

00:02:58.319 --> 00:03:00.390 align:start position:0%
um sorry
I<00:02:58.480><c> meant</c>

00:03:00.390 --> 00:03:00.400 align:start position:0%
I meant
 

00:03:00.400 --> 00:03:03.830 align:start position:0%
I meant
okay<00:03:01.280><c> um</c><00:03:02.319><c> I'm</c><00:03:02.560><c> getting</c><00:03:02.720><c> pop</c><00:03:03.120><c> notifications</c><00:03:03.680><c> on</c>

00:03:03.830 --> 00:03:03.840 align:start position:0%
okay um I'm getting pop notifications on
 

00:03:03.840 --> 00:03:06.390 align:start position:0%
okay um I'm getting pop notifications on
email.<00:03:04.080><c> I've</c><00:03:04.239><c> closed</c><00:03:04.480><c> that</c><00:03:04.640><c> down.</c><00:03:05.200><c> um</c><00:03:06.080><c> the</c><00:03:06.400><c> the</c>

00:03:06.390 --> 00:03:06.400 align:start position:0%
email. I've closed that down. um the the
 

00:03:06.400 --> 00:03:10.149 align:start position:0%
email. I've closed that down. um the the
the<00:03:06.879><c> NPI</c><00:03:07.440><c> standard</c><00:03:08.319><c> um</c><00:03:08.879><c> has</c><00:03:09.280><c> well</c><00:03:09.440><c> it's</c><00:03:09.680><c> it</c>

00:03:10.149 --> 00:03:10.159 align:start position:0%
the NPI standard um has well it's it
 

00:03:10.159 --> 00:03:12.070 align:start position:0%
the NPI standard um has well it's it
grows<00:03:10.560><c> but</c><00:03:10.800><c> you</c><00:03:10.879><c> know</c><00:03:11.040><c> the</c><00:03:11.280><c> core</c><00:03:11.440><c> of</c><00:03:11.599><c> the</c><00:03:11.680><c> NPI</c>

00:03:12.070 --> 00:03:12.080 align:start position:0%
grows but you know the core of the NPI
 

00:03:12.080 --> 00:03:13.589 align:start position:0%
grows but you know the core of the NPI
standard<00:03:12.640><c> come</c><00:03:12.800><c> with</c><00:03:13.040><c> pointto-point</c>

00:03:13.589 --> 00:03:13.599 align:start position:0%
standard come with pointto-point
 

00:03:13.599 --> 00:03:16.790 align:start position:0%
standard come with pointto-point
collectives<00:03:14.879><c> uh</c><00:03:15.040><c> and</c><00:03:15.200><c> other</c><00:03:15.519><c> bits</c><00:03:15.840><c> and</c><00:03:16.000><c> pieces</c>

00:03:16.790 --> 00:03:16.800 align:start position:0%
collectives uh and other bits and pieces
 

00:03:16.800 --> 00:03:18.470 align:start position:0%
collectives uh and other bits and pieces
and<00:03:17.040><c> and</c><00:03:17.120><c> and</c><00:03:17.440><c> so</c><00:03:17.519><c> it's</c><00:03:17.760><c> fairly</c><00:03:18.000><c> a</c><00:03:18.159><c> natural</c>

00:03:18.470 --> 00:03:18.480 align:start position:0%
and and and so it's fairly a natural
 

00:03:18.480 --> 00:03:19.990 align:start position:0%
and and and so it's fairly a natural
decomposition

00:03:19.990 --> 00:03:20.000 align:start position:0%
decomposition
 

00:03:20.000 --> 00:03:21.990 align:start position:0%
decomposition
um<00:03:20.239><c> so</c><00:03:20.480><c> so</c><00:03:20.560><c> so</c><00:03:21.120><c> there</c><00:03:21.280><c> will</c><00:03:21.440><c> be</c><00:03:21.680><c> you</c><00:03:21.760><c> know</c><00:03:21.840><c> if</c>

00:03:21.990 --> 00:03:22.000 align:start position:0%
um so so so there will be you know if
 

00:03:22.000 --> 00:03:23.910 align:start position:0%
um so so so there will be you know if
you<00:03:22.159><c> look</c><00:03:22.319><c> if</c><00:03:22.480><c> you</c><00:03:22.640><c> downloaded</c><00:03:23.440><c> an</c><00:03:23.680><c> open</c>

00:03:23.910 --> 00:03:23.920 align:start position:0%
you look if you downloaded an open
 

00:03:23.920 --> 00:03:25.430 align:start position:0%
you look if you downloaded an open
source<00:03:24.239><c> MP</c><00:03:24.560><c> implementation</c><00:03:25.120><c> there</c><00:03:25.280><c> will</c>

00:03:25.430 --> 00:03:25.440 align:start position:0%
source MP implementation there will
 

00:03:25.440 --> 00:03:27.350 align:start position:0%
source MP implementation there will
probably<00:03:25.680><c> be</c><00:03:26.159><c> be</c><00:03:26.560><c> be</c><00:03:26.800><c> directories</c>

00:03:27.350 --> 00:03:27.360 align:start position:0%
probably be be be directories
 

00:03:27.360 --> 00:03:29.589 align:start position:0%
probably be be be directories
corresponding<00:03:27.920><c> to</c><00:03:28.080><c> all</c><00:03:28.239><c> of</c><00:03:28.400><c> these</c><00:03:28.959><c> um</c><00:03:29.200><c> all</c><00:03:29.440><c> of</c>

00:03:29.589 --> 00:03:29.599 align:start position:0%
corresponding to all of these um all of
 

00:03:29.599 --> 00:03:33.910 align:start position:0%
corresponding to all of these um all of
these<00:03:30.239><c> um</c><00:03:30.640><c> areas</c><00:03:31.840><c> um</c><00:03:32.239><c> there</c><00:03:32.480><c> may</c><00:03:32.799><c> be</c><00:03:33.440><c> uh</c><00:03:33.599><c> hidden</c>

00:03:33.910 --> 00:03:33.920 align:start position:0%
these um areas um there may be uh hidden
 

00:03:33.920 --> 00:03:36.470 align:start position:0%
these um areas um there may be uh hidden
internal<00:03:34.319><c> modules</c><00:03:34.959><c> And</c><00:03:35.200><c> so</c><00:03:35.920><c> one</c><00:03:36.159><c> way</c><00:03:36.319><c> of</c>

00:03:36.470 --> 00:03:36.480 align:start position:0%
internal modules And so one way of
 

00:03:36.480 --> 00:03:40.470 align:start position:0%
internal modules And so one way of
thinking<00:03:36.799><c> about</c><00:03:37.200><c> you</c><00:03:37.360><c> know</c><00:03:38.080><c> how</c><00:03:38.319><c> these</c><00:03:39.040><c> um</c><00:03:40.239><c> uh</c>

00:03:40.470 --> 00:03:40.480 align:start position:0%
thinking about you know how these um uh
 

00:03:40.480 --> 00:03:42.550 align:start position:0%
thinking about you know how these um uh
implementations<00:03:41.120><c> work</c><00:03:41.280><c> is</c><00:03:41.599><c> NPI</c><00:03:42.000><c> is</c><00:03:42.239><c> meant</c><00:03:42.400><c> to</c>

00:03:42.550 --> 00:03:42.560 align:start position:0%
implementations work is NPI is meant to
 

00:03:42.560 --> 00:03:46.229 align:start position:0%
implementations work is NPI is meant to
be<00:03:43.440><c> um</c><00:03:44.560><c> hardware</c><00:03:45.120><c> agnostic.</c><00:03:45.760><c> You</c><00:03:45.920><c> could</c><00:03:46.080><c> run</c>

00:03:46.229 --> 00:03:46.239 align:start position:0%
be um hardware agnostic. You could run
 

00:03:46.239 --> 00:03:48.470 align:start position:0%
be um hardware agnostic. You could run
an<00:03:46.400><c> NPI</c><00:03:46.959><c> library.</c><00:03:47.680><c> You</c><00:03:47.840><c> can</c><00:03:47.920><c> run</c><00:03:48.000><c> an</c><00:03:48.159><c> NPI</c>

00:03:48.470 --> 00:03:48.480 align:start position:0%
an NPI library. You can run an NPI
 

00:03:48.480 --> 00:03:51.190 align:start position:0%
an NPI library. You can run an NPI
program<00:03:48.959><c> on</c><00:03:49.040><c> on</c><00:03:49.599><c> almost</c><00:03:49.920><c> any</c><00:03:50.239><c> computer</c><00:03:50.959><c> but</c>

00:03:51.190 --> 00:03:51.200 align:start position:0%
program on on almost any computer but
 

00:03:51.200 --> 00:03:53.830 align:start position:0%
program on on almost any computer but
clearly<00:03:51.519><c> at</c><00:03:51.840><c> some</c><00:03:52.080><c> level</c><00:03:52.640><c> the</c><00:03:52.879><c> NPI</c><00:03:53.360><c> library</c>

00:03:53.830 --> 00:03:53.840 align:start position:0%
clearly at some level the NPI library
 

00:03:53.840 --> 00:03:56.070 align:start position:0%
clearly at some level the NPI library
has<00:03:54.080><c> to</c><00:03:54.720><c> uh</c><00:03:54.879><c> interface</c><00:03:55.280><c> with</c><00:03:55.440><c> the</c><00:03:55.599><c> hardware.</c>

00:03:56.070 --> 00:03:56.080 align:start position:0%
has to uh interface with the hardware.
 

00:03:56.080 --> 00:03:58.070 align:start position:0%
has to uh interface with the hardware.
There<00:03:56.239><c> will</c><00:03:56.400><c> be</c><00:03:56.480><c> some</c><00:03:56.640><c> hardware</c><00:03:57.120><c> specific</c>

00:03:58.070 --> 00:03:58.080 align:start position:0%
There will be some hardware specific
 

00:03:58.080 --> 00:03:59.670 align:start position:0%
There will be some hardware specific
stuff<00:03:58.400><c> whether</c><00:03:58.640><c> it's</c><00:03:58.959><c> you</c><00:03:59.040><c> know</c><00:03:59.200><c> interfacing</c>

00:03:59.670 --> 00:03:59.680 align:start position:0%
stuff whether it's you know interfacing
 

00:03:59.680 --> 00:04:02.789 align:start position:0%
stuff whether it's you know interfacing
to<00:03:59.840><c> Ethernet</c><00:04:00.400><c> or</c><00:04:01.680><c> infinity</c><00:04:02.159><c> band</c><00:04:02.400><c> or</c><00:04:02.640><c> doing</c>

00:04:02.789 --> 00:04:02.799 align:start position:0%
to Ethernet or infinity band or doing
 

00:04:02.799 --> 00:04:05.030 align:start position:0%
to Ethernet or infinity band or doing
stuff<00:04:02.959><c> over</c><00:04:03.120><c> a</c><00:04:03.280><c> shared</c><00:04:03.519><c> memory</c><00:04:03.840><c> or</c><00:04:04.080><c> using</c><00:04:04.400><c> the</c>

00:04:05.030 --> 00:04:05.040 align:start position:0%
stuff over a shared memory or using the
 

00:04:05.040 --> 00:04:08.470 align:start position:0%
stuff over a shared memory or using the
uh<00:04:05.120><c> the</c><00:04:05.360><c> cray</c><00:04:06.319><c> slingshot</c><00:04:06.959><c> network</c>

00:04:08.470 --> 00:04:08.480 align:start position:0%
uh the cray slingshot network
 

00:04:08.480 --> 00:04:11.110 align:start position:0%
uh the cray slingshot network
but<00:04:09.280><c> a</c><00:04:09.519><c> lot</c><00:04:09.680><c> and</c><00:04:09.920><c> then</c><00:04:10.159><c> the</c><00:04:10.400><c> way</c><00:04:10.480><c> the</c><00:04:10.640><c> NPI</c>

00:04:11.110 --> 00:04:11.120 align:start position:0%
but a lot and then the way the NPI
 

00:04:11.120 --> 00:04:14.070 align:start position:0%
but a lot and then the way the NPI
libraries<00:04:11.519><c> designed</c><00:04:11.840><c> is</c><00:04:13.040><c> vast</c><00:04:13.439><c> amount</c><00:04:13.680><c> of</c><00:04:13.840><c> the</c>

00:04:14.070 --> 00:04:14.080 align:start position:0%
libraries designed is vast amount of the
 

00:04:14.080 --> 00:04:16.710 align:start position:0%
libraries designed is vast amount of the
code<00:04:14.480><c> is</c><00:04:14.799><c> hardware</c><00:04:15.200><c> independent</c><00:04:16.079><c> so</c><00:04:16.320><c> a</c><00:04:16.479><c> lot</c>

00:04:16.710 --> 00:04:16.720 align:start position:0%
code is hardware independent so a lot
 

00:04:16.720 --> 00:04:18.629 align:start position:0%
code is hardware independent so a lot
you<00:04:16.880><c> know</c><00:04:17.040><c> 99%</c><00:04:17.759><c> of</c><00:04:17.840><c> the</c><00:04:18.000><c> lines</c><00:04:18.239><c> of</c><00:04:18.320><c> code</c><00:04:18.479><c> are</c>

00:04:18.629 --> 00:04:18.639 align:start position:0%
you know 99% of the lines of code are
 

00:04:18.639 --> 00:04:20.550 align:start position:0%
you know 99% of the lines of code are
hardware<00:04:19.040><c> independent</c><00:04:19.840><c> and</c><00:04:20.000><c> there's</c><00:04:20.160><c> a</c><00:04:20.320><c> very</c>

00:04:20.550 --> 00:04:20.560 align:start position:0%
hardware independent and there's a very
 

00:04:20.560 --> 00:04:24.070 align:start position:0%
hardware independent and there's a very
clean<00:04:21.120><c> de</c><00:04:21.519><c> division</c><00:04:22.079><c> between</c><00:04:22.880><c> um</c><00:04:23.520><c> the</c><00:04:23.680><c> the</c>

00:04:24.070 --> 00:04:24.080 align:start position:0%
clean de division between um the the
 

00:04:24.080 --> 00:04:25.430 align:start position:0%
clean de division between um the the
hardware<00:04:24.400><c> independent</c><00:04:24.880><c> stuff</c><00:04:24.960><c> and</c><00:04:25.120><c> when</c><00:04:25.280><c> it</c>

00:04:25.430 --> 00:04:25.440 align:start position:0%
hardware independent stuff and when it
 

00:04:25.440 --> 00:04:27.510 align:start position:0%
hardware independent stuff and when it
starts<00:04:25.680><c> become</c><00:04:25.919><c> hardware</c><00:04:26.400><c> dependent</c><00:04:27.280><c> and</c><00:04:27.440><c> and</c>

00:04:27.510 --> 00:04:27.520 align:start position:0%
starts become hardware dependent and and
 

00:04:27.520 --> 00:04:29.830 align:start position:0%
starts become hardware dependent and and
and<00:04:28.080><c> what</c><00:04:28.479><c> is</c><00:04:28.720><c> often</c><00:04:29.040><c> done</c><00:04:29.120><c> is</c><00:04:29.280><c> you'll</c><00:04:29.520><c> define</c>

00:04:29.830 --> 00:04:29.840 align:start position:0%
and what is often done is you'll define
 

00:04:29.840 --> 00:04:31.510 align:start position:0%
and what is often done is you'll define
something<00:04:30.000><c> like</c><00:04:30.080><c> an</c><00:04:30.240><c> ADI</c><00:04:30.639><c> an</c><00:04:30.800><c> abstract</c><00:04:31.199><c> device</c>

00:04:31.510 --> 00:04:31.520 align:start position:0%
something like an ADI an abstract device
 

00:04:31.520 --> 00:04:34.150 align:start position:0%
something like an ADI an abstract device
interface<00:04:32.000><c> you</c><00:04:32.080><c> will</c><00:04:32.240><c> have</c><00:04:32.320><c> a</c><00:04:32.720><c> an</c><00:04:32.960><c> abstract</c>

00:04:34.150 --> 00:04:34.160 align:start position:0%
interface you will have a an abstract
 

00:04:34.160 --> 00:04:36.550 align:start position:0%
interface you will have a an abstract
model<00:04:34.400><c> of</c><00:04:34.560><c> of</c><00:04:34.880><c> your</c><00:04:35.199><c> networking</c><00:04:35.840><c> your</c><00:04:36.080><c> virtual</c>

00:04:36.550 --> 00:04:36.560 align:start position:0%
model of of your networking your virtual
 

00:04:36.560 --> 00:04:38.150 align:start position:0%
model of of your networking your virtual
virtual<00:04:36.880><c> model</c><00:04:37.199><c> and</c><00:04:37.440><c> you</c><00:04:37.600><c> will</c><00:04:37.759><c> you'll</c>

00:04:38.150 --> 00:04:38.160 align:start position:0%
virtual model and you will you'll
 

00:04:38.160 --> 00:04:40.950 align:start position:0%
virtual model and you will you'll
basically<00:04:38.720><c> the</c><00:04:39.360><c> the</c><00:04:39.600><c> main</c><00:04:39.840><c> NPLI</c><00:04:40.479><c> will</c><00:04:40.639><c> only</c>

00:04:40.950 --> 00:04:40.960 align:start position:0%
basically the the main NPLI will only
 

00:04:40.960 --> 00:04:43.590 align:start position:0%
basically the the main NPLI will only
call<00:04:41.280><c> call</c><00:04:41.520><c> these</c><00:04:41.759><c> ADI</c><00:04:42.240><c> calls</c><00:04:42.880><c> and</c><00:04:43.120><c> then</c><00:04:43.360><c> to</c>

00:04:43.590 --> 00:04:43.600 align:start position:0%
call call these ADI calls and then to
 

00:04:43.600 --> 00:04:45.830 align:start position:0%
call call these ADI calls and then to
port<00:04:43.919><c> to</c><00:04:44.080><c> a</c><00:04:44.240><c> different</c><00:04:44.479><c> hardware</c><00:04:45.440><c> all</c><00:04:45.600><c> you</c>

00:04:45.830 --> 00:04:45.840 align:start position:0%
port to a different hardware all you
 

00:04:45.840 --> 00:04:47.670 align:start position:0%
port to a different hardware all you
have<00:04:45.919><c> to</c><00:04:46.080><c> do</c><00:04:46.160><c> is</c><00:04:46.639><c> all</c><00:04:46.880><c> you</c><00:04:46.960><c> have</c><00:04:47.120><c> to</c><00:04:47.199><c> do</c><00:04:47.360><c> is</c><00:04:47.520><c> to</c>

00:04:47.670 --> 00:04:47.680 align:start position:0%
have to do is all you have to do is to
 

00:04:47.680 --> 00:04:51.590 align:start position:0%
have to do is all you have to do is to
port<00:04:48.720><c> um</c><00:04:48.960><c> the</c><00:04:50.320><c> the</c><00:04:50.560><c> stuff</c><00:04:50.800><c> below</c><00:04:51.120><c> this</c><00:04:51.280><c> level</c>

00:04:51.590 --> 00:04:51.600 align:start position:0%
port um the the stuff below this level
 

00:04:51.600 --> 00:04:52.950 align:start position:0%
port um the the stuff below this level
you<00:04:51.680><c> have</c><00:04:51.759><c> to</c><00:04:52.000><c> you</c><00:04:52.080><c> know</c><00:04:52.160><c> basically</c><00:04:52.479><c> how</c><00:04:52.639><c> do</c><00:04:52.720><c> I</c>

00:04:52.950 --> 00:04:52.960 align:start position:0%
you have to you know basically how do I
 

00:04:52.960 --> 00:04:55.270 align:start position:0%
you have to you know basically how do I
actually<00:04:53.280><c> send</c><00:04:53.520><c> data</c><00:04:54.080><c> from</c><00:04:54.400><c> process</c><00:04:54.800><c> A</c><00:04:55.120><c> on</c>

00:04:55.270 --> 00:04:55.280 align:start position:0%
actually send data from process A on
 

00:04:55.280 --> 00:04:57.990 align:start position:0%
actually send data from process A on
computer<00:04:55.680><c> A</c><00:04:56.240><c> to</c><00:04:56.479><c> proc</c><00:04:56.960><c> on</c><00:04:57.199><c> computer</c><00:04:57.520><c> one</c><00:04:57.759><c> to</c>

00:04:57.990 --> 00:04:58.000 align:start position:0%
computer A to proc on computer one to
 

00:04:58.000 --> 00:05:00.310 align:start position:0%
computer A to proc on computer one to
process<00:04:58.320><c> B</c><00:04:58.560><c> on</c><00:04:58.720><c> computer</c><00:04:59.120><c> two</c><00:04:59.759><c> that</c><00:05:00.000><c> will</c><00:05:00.160><c> go</c>

00:05:00.310 --> 00:05:00.320 align:start position:0%
process B on computer two that will go
 

00:05:00.320 --> 00:05:03.510 align:start position:0%
process B on computer two that will go
over<00:05:00.560><c> as</c><00:05:00.720><c> I</c><00:05:00.960><c> said</c><00:05:01.440><c> infinity</c><00:05:01.919><c> band</c><00:05:02.320><c> or</c><00:05:02.960><c> or</c><00:05:03.280><c> some</c>

00:05:03.510 --> 00:05:03.520 align:start position:0%
over as I said infinity band or or some
 

00:05:03.520 --> 00:05:05.189 align:start position:0%
over as I said infinity band or or some
other<00:05:03.759><c> network</c><00:05:04.400><c> and</c><00:05:04.560><c> that</c><00:05:04.800><c> will</c><00:05:04.960><c> have</c><00:05:05.040><c> to</c><00:05:05.120><c> be</c>

00:05:05.189 --> 00:05:05.199 align:start position:0%
other network and that will have to be
 

00:05:05.199 --> 00:05:07.189 align:start position:0%
other network and that will have to be
implemented<00:05:05.680><c> specifically</c><00:05:06.160><c> but</c><00:05:06.320><c> the</c><00:05:06.880><c> the</c>

00:05:07.189 --> 00:05:07.199 align:start position:0%
implemented specifically but the the
 

00:05:07.199 --> 00:05:09.270 align:start position:0%
implemented specifically but the the
model<00:05:07.360><c> is</c><00:05:07.680><c> there's</c><00:05:07.919><c> this</c><00:05:08.320><c> there's</c><00:05:08.639><c> this</c><00:05:09.039><c> very</c>

00:05:09.270 --> 00:05:09.280 align:start position:0%
model is there's this there's this very
 

00:05:09.280 --> 00:05:10.950 align:start position:0%
model is there's this there's this very
low<00:05:09.600><c> level</c><00:05:09.919><c> outstat</c><00:05:10.400><c> device</c><00:05:10.560><c> interface</c>

00:05:10.950 --> 00:05:10.960 align:start position:0%
low level outstat device interface
 

00:05:10.960 --> 00:05:12.950 align:start position:0%
low level outstat device interface
encapsulating<00:05:11.600><c> the</c><00:05:11.759><c> access</c><00:05:12.160><c> network</c><00:05:12.560><c> and</c><00:05:12.720><c> to</c>

00:05:12.950 --> 00:05:12.960 align:start position:0%
encapsulating the access network and to
 

00:05:12.960 --> 00:05:14.870 align:start position:0%
encapsulating the access network and to
port<00:05:13.280><c> to</c><00:05:13.440><c> new</c><00:05:13.600><c> hardware</c><00:05:13.919><c> you</c><00:05:14.080><c> just</c><00:05:14.240><c> have</c><00:05:14.479><c> to</c><00:05:14.639><c> to</c>

00:05:14.870 --> 00:05:14.880 align:start position:0%
port to new hardware you just have to to
 

00:05:14.880 --> 00:05:16.870 align:start position:0%
port to new hardware you just have to to
port<00:05:15.120><c> that</c><00:05:15.360><c> very</c><00:05:15.520><c> low</c><00:05:15.759><c> level</c><00:05:16.080><c> stuff</c><00:05:16.479><c> and</c><00:05:16.720><c> then</c>

00:05:16.870 --> 00:05:16.880 align:start position:0%
port that very low level stuff and then
 

00:05:16.880 --> 00:05:18.710 align:start position:0%
port that very low level stuff and then
all<00:05:16.960><c> the</c><00:05:17.120><c> high</c><00:05:17.280><c> level</c><00:05:17.600><c> stuff</c><00:05:17.840><c> comes</c><00:05:18.160><c> comes</c><00:05:18.479><c> for</c>

00:05:18.710 --> 00:05:18.720 align:start position:0%
all the high level stuff comes comes for
 

00:05:18.720 --> 00:05:21.110 align:start position:0%
all the high level stuff comes comes for
free

00:05:21.110 --> 00:05:21.120 align:start position:0%
free
 

00:05:21.120 --> 00:05:23.189 align:start position:0%
free
so<00:05:21.440><c> pointtooint</c><00:05:22.080><c> is</c><00:05:22.240><c> the</c><00:05:22.320><c> core</c><00:05:22.479><c> of</c><00:05:22.639><c> most</c><00:05:22.880><c> MP</c>

00:05:23.189 --> 00:05:23.199 align:start position:0%
so pointtooint is the core of most MP
 

00:05:23.199 --> 00:05:24.710 align:start position:0%
so pointtooint is the core of most MP
implementations

00:05:24.710 --> 00:05:24.720 align:start position:0%
implementations
 

00:05:24.720 --> 00:05:28.310 align:start position:0%
implementations
um<00:05:24.880><c> collectives.</c><00:05:25.759><c> I</c><00:05:25.919><c> mean,</c><00:05:26.080><c> NPI</c><00:05:26.720><c> was</c><00:05:27.039><c> designed</c>

00:05:28.310 --> 00:05:28.320 align:start position:0%
um collectives. I mean, NPI was designed
 

00:05:28.320 --> 00:05:31.270 align:start position:0%
um collectives. I mean, NPI was designed
um<00:05:29.360><c> from</c><00:05:29.600><c> the</c><00:05:29.919><c> start</c><00:05:30.400><c> for</c><00:05:30.720><c> scientific</c><00:05:31.120><c> and</c>

00:05:31.270 --> 00:05:31.280 align:start position:0%
um from the start for scientific and
 

00:05:31.280 --> 00:05:33.590 align:start position:0%
um from the start for scientific and
technical<00:05:32.720><c> computational</c><00:05:33.280><c> science</c>

00:05:33.590 --> 00:05:33.600 align:start position:0%
technical computational science
 

00:05:33.600 --> 00:05:36.310 align:start position:0%
technical computational science
applications.<00:05:34.639><c> And</c><00:05:34.800><c> so</c><00:05:35.280><c> common</c><00:05:35.600><c> operations</c>

00:05:36.310 --> 00:05:36.320 align:start position:0%
applications. And so common operations
 

00:05:36.320 --> 00:05:39.350 align:start position:0%
applications. And so common operations
such<00:05:36.639><c> as</c><00:05:36.960><c> or</c><00:05:37.280><c> reduce,</c><00:05:38.240><c> broadcast,</c><00:05:38.880><c> gather,</c>

00:05:39.350 --> 00:05:39.360 align:start position:0%
such as or reduce, broadcast, gather,
 

00:05:39.360 --> 00:05:43.510 align:start position:0%
such as or reduce, broadcast, gather,
scatter<00:05:40.240><c> were</c><00:05:41.120><c> um</c><00:05:41.840><c> were</c><00:05:42.080><c> defined</c><00:05:42.479><c> as</c><00:05:43.280><c> they</c>

00:05:43.510 --> 00:05:43.520 align:start position:0%
scatter were um were defined as they
 

00:05:43.520 --> 00:05:45.270 align:start position:0%
scatter were um were defined as they
were<00:05:43.680><c> defined</c><00:05:43.919><c> in</c><00:05:44.080><c> the</c><00:05:44.240><c> language</c><00:05:44.880><c> in</c><00:05:45.120><c> the</c>

00:05:45.270 --> 00:05:45.280 align:start position:0%
were defined in the language in the
 

00:05:45.280 --> 00:05:47.990 align:start position:0%
were defined in the language in the
library,<00:05:45.600><c> apologies,</c><00:05:46.160><c> as</c><00:05:46.400><c> collective</c><00:05:46.880><c> calls.</c>

00:05:47.990 --> 00:05:48.000 align:start position:0%
library, apologies, as collective calls.
 

00:05:48.000 --> 00:05:49.510 align:start position:0%
library, apologies, as collective calls.
They<00:05:48.240><c> may</c><00:05:48.400><c> be</c><00:05:48.560><c> built</c><00:05:48.800><c> from</c><00:05:48.960><c> pointto-point</c>

00:05:49.510 --> 00:05:49.520 align:start position:0%
They may be built from pointto-point
 

00:05:49.520 --> 00:05:51.830 align:start position:0%
They may be built from pointto-point
calls,<00:05:49.840><c> they</c><00:05:50.080><c> may</c><00:05:50.240><c> not.</c><00:05:50.960><c> um</c><00:05:51.120><c> but</c><00:05:51.360><c> often</c><00:05:51.600><c> they</c>

00:05:51.830 --> 00:05:51.840 align:start position:0%
calls, they may not. um but often they
 

00:05:51.840 --> 00:05:52.950 align:start position:0%
calls, they may not. um but often they
will<00:05:52.080><c> be</c><00:05:52.160><c> at</c><00:05:52.160><c> least</c><00:05:52.400><c> the</c><00:05:52.560><c> default</c>

00:05:52.950 --> 00:05:52.960 align:start position:0%
will be at least the default
 

00:05:52.960 --> 00:05:55.270 align:start position:0%
will be at least the default
implementation<00:05:53.520><c> we</c><00:05:53.680><c> use</c><00:05:53.840><c> the</c><00:05:54.000><c> pointtooint</c><00:05:55.120><c> um</c>

00:05:55.270 --> 00:05:55.280 align:start position:0%
implementation we use the pointtooint um
 

00:05:55.280 --> 00:05:57.189 align:start position:0%
implementation we use the pointtooint um
I'm<00:05:55.520><c> not</c><00:05:55.600><c> going</c><00:05:55.680><c> to</c><00:05:55.759><c> cover</c><00:05:56.000><c> NPIO</c><00:05:56.720><c> here</c><00:05:56.880><c> but</c>

00:05:57.189 --> 00:05:57.199 align:start position:0%
I'm not going to cover NPIO here but
 

00:05:57.199 --> 00:06:00.870 align:start position:0%
I'm not going to cover NPIO here but
basically<00:05:58.000><c> um</c><00:05:58.800><c> the</c><00:05:59.039><c> NPIO</c><00:05:59.759><c> library</c><00:06:00.479><c> basically</c>

00:06:00.870 --> 00:06:00.880 align:start position:0%
basically um the NPIO library basically
 

00:06:00.880 --> 00:06:02.550 align:start position:0%
basically um the NPIO library basically
builds<00:06:01.199><c> on</c><00:06:01.680><c> there's</c><00:06:01.840><c> a</c><00:06:02.000><c> standard</c>

00:06:02.550 --> 00:06:02.560 align:start position:0%
builds on there's a standard
 

00:06:02.560 --> 00:06:04.309 align:start position:0%
builds on there's a standard
implementation<00:06:03.120><c> called</c><00:06:03.280><c> Romeo</c><00:06:03.759><c> which</c><00:06:03.919><c> builds</c>

00:06:04.309 --> 00:06:04.319 align:start position:0%
implementation called Romeo which builds
 

00:06:04.319 --> 00:06:08.150 align:start position:0%
implementation called Romeo which builds
it<00:06:04.479><c> just</c><00:06:04.639><c> needs</c><00:06:04.960><c> basic</c><00:06:05.759><c> basic</c><00:06:06.160><c> MP</c><00:06:06.720><c> NPI</c><00:06:07.199><c> calls</c>

00:06:08.150 --> 00:06:08.160 align:start position:0%
it just needs basic basic MP NPI calls
 

00:06:08.160 --> 00:06:09.909 align:start position:0%
it just needs basic basic MP NPI calls
and<00:06:08.400><c> so</c><00:06:08.560><c> the</c><00:06:08.800><c> large</c><00:06:09.039><c> number</c><00:06:09.199><c> of</c><00:06:09.360><c> pointto-oint</c>

00:06:09.909 --> 00:06:09.919 align:start position:0%
and so the large number of pointto-oint
 

00:06:09.919 --> 00:06:13.270 align:start position:0%
and so the large number of pointto-oint
calls<00:06:10.240><c> exist</c><00:06:10.639><c> we've</c><00:06:10.880><c> already</c><00:06:11.120><c> seen</c><00:06:11.520><c> NPI</c><00:06:12.880><c> is</c>

00:06:13.270 --> 00:06:13.280 align:start position:0%
calls exist we've already seen NPI is
 

00:06:13.280 --> 00:06:14.790 align:start position:0%
calls exist we've already seen NPI is
send

00:06:14.790 --> 00:06:14.800 align:start position:0%
send
 

00:06:14.800 --> 00:06:16.469 align:start position:0%
send
all<00:06:14.960><c> these</c><00:06:15.120><c> things</c><00:06:15.440><c> but</c><00:06:15.680><c> they</c><00:06:15.919><c> could</c><00:06:16.080><c> often</c><00:06:16.319><c> be</c>

00:06:16.469 --> 00:06:16.479 align:start position:0%
all these things but they could often be
 

00:06:16.479 --> 00:06:18.309 align:start position:0%
all these things but they could often be
built<00:06:16.720><c> from</c><00:06:16.880><c> a</c><00:06:17.280><c> simpler</c><00:06:17.600><c> core</c><00:06:18.000><c> set</c><00:06:18.160><c> of</c>

00:06:18.309 --> 00:06:18.319 align:start position:0%
built from a simpler core set of
 

00:06:18.319 --> 00:06:20.309 align:start position:0%
built from a simpler core set of
functions<00:06:18.639><c> so</c><00:06:18.880><c> so</c><00:06:19.120><c> so</c><00:06:19.520><c> there</c><00:06:19.680><c> will</c><00:06:19.840><c> be</c><00:06:19.919><c> a</c><00:06:20.000><c> core</c>

00:06:20.309 --> 00:06:20.319 align:start position:0%
functions so so so there will be a core
 

00:06:20.319 --> 00:06:21.990 align:start position:0%
functions so so so there will be a core
set<00:06:20.639><c> function</c><00:06:21.039><c> doing</c><00:06:21.199><c> very</c><00:06:21.520><c> simple</c><00:06:21.840><c> things</c>

00:06:21.990 --> 00:06:22.000 align:start position:0%
set function doing very simple things
 

00:06:22.000 --> 00:06:24.070 align:start position:0%
set function doing very simple things
like<00:06:22.319><c> sending</c><00:06:22.800><c> n</c><00:06:23.039><c> bytes</c><00:06:23.440><c> of</c><00:06:23.600><c> data</c><00:06:23.840><c> from</c>

00:06:24.070 --> 00:06:24.080 align:start position:0%
like sending n bytes of data from
 

00:06:24.080 --> 00:06:26.469 align:start position:0%
like sending n bytes of data from
process<00:06:24.400><c> A</c><00:06:24.639><c> to</c><00:06:24.800><c> process</c><00:06:25.120><c> B</c><00:06:25.840><c> and</c><00:06:26.000><c> the</c><00:06:26.240><c> higher</c>

00:06:26.469 --> 00:06:26.479 align:start position:0%
process A to process B and the higher
 

00:06:26.479 --> 00:06:28.710 align:start position:0%
process A to process B and the higher
level<00:06:26.800><c> things</c><00:06:27.039><c> like</c><00:06:27.199><c> non-blocking</c>

00:06:28.710 --> 00:06:28.720 align:start position:0%
level things like non-blocking
 

00:06:28.720 --> 00:06:30.870 align:start position:0%
level things like non-blocking
asynchronous<00:06:29.440><c> buffered</c><00:06:30.080><c> and</c><00:06:30.639><c> other</c>

00:06:30.870 --> 00:06:30.880 align:start position:0%
asynchronous buffered and other
 

00:06:30.880 --> 00:06:32.870 align:start position:0%
asynchronous buffered and other
operations<00:06:31.360><c> will</c><00:06:31.520><c> be</c><00:06:31.680><c> built</c><00:06:31.919><c> on</c><00:06:32.080><c> top</c><00:06:32.240><c> of</c><00:06:32.400><c> that.</c>

00:06:32.870 --> 00:06:32.880 align:start position:0%
operations will be built on top of that.
 

00:06:32.880 --> 00:06:35.990 align:start position:0%
operations will be built on top of that.
So<00:06:33.039><c> I'll</c><00:06:33.280><c> talk</c><00:06:33.520><c> point</c><00:06:33.759><c> to</c><00:06:33.919><c> point.</c><00:06:35.360><c> So</c><00:06:35.680><c> I</c><00:06:35.919><c> don't</c>

00:06:35.990 --> 00:06:36.000 align:start position:0%
So I'll talk point to point. So I don't
 

00:06:36.000 --> 00:06:38.710 align:start position:0%
So I'll talk point to point. So I don't
want<00:06:36.160><c> to</c><00:06:36.319><c> sort</c><00:06:36.560><c> of</c><00:06:36.639><c> be</c><00:06:36.800><c> a</c><00:06:36.960><c> bit</c>

00:06:38.710 --> 00:06:38.720 align:start position:0%
want to sort of be a bit
 

00:06:38.720 --> 00:06:40.550 align:start position:0%
want to sort of be a bit
bit<00:06:38.960><c> naughty</c><00:06:39.360><c> here.</c><00:06:39.520><c> I</c><00:06:39.680><c> think</c><00:06:40.000><c> this</c><00:06:40.240><c> is</c><00:06:40.319><c> a</c>

00:06:40.550 --> 00:06:40.560 align:start position:0%
bit naughty here. I think this is a
 

00:06:40.560 --> 00:06:43.430 align:start position:0%
bit naughty here. I think this is a
useful<00:06:41.520><c> um</c><00:06:42.000><c> uh</c><00:06:42.400><c> model.</c><00:06:42.720><c> How</c><00:06:42.800><c> are</c><00:06:42.960><c> we</c><00:06:43.120><c> going</c><00:06:43.199><c> to</c>

00:06:43.430 --> 00:06:43.440 align:start position:0%
useful um uh model. How are we going to
 

00:06:43.440 --> 00:06:45.670 align:start position:0%
useful um uh model. How are we going to
characterize<00:06:44.240><c> pointto-point</c><00:06:44.960><c> performance?</c>

00:06:45.670 --> 00:06:45.680 align:start position:0%
characterize pointto-point performance?
 

00:06:45.680 --> 00:06:48.390 align:start position:0%
characterize pointto-point performance?
We're<00:06:45.759><c> going</c><00:06:45.919><c> to</c><00:06:46.080><c> send</c><00:06:46.319><c> data</c><00:06:46.639><c> from</c><00:06:47.440><c> from</c><00:06:47.759><c> from</c>

00:06:48.390 --> 00:06:48.400 align:start position:0%
We're going to send data from from from
 

00:06:48.400 --> 00:06:49.670 align:start position:0%
We're going to send data from from from
um<00:06:48.639><c> and</c><00:06:48.800><c> we're</c><00:06:48.960><c> actually</c><00:06:49.199><c> going</c><00:06:49.280><c> to</c><00:06:49.360><c> run</c>

00:06:49.670 --> 00:06:49.680 align:start position:0%
um and we're actually going to run
 

00:06:49.680 --> 00:06:51.189 align:start position:0%
um and we're actually going to run
immediately<00:06:50.160><c> after</c><00:06:50.400><c> the</c><00:06:50.560><c> lunch</c><00:06:50.800><c> time</c><00:06:51.120><c> going</c>

00:06:51.189 --> 00:06:51.199 align:start position:0%
immediately after the lunch time going
 

00:06:51.199 --> 00:06:53.029 align:start position:0%
immediately after the lunch time going
to<00:06:51.280><c> run</c><00:06:51.360><c> a</c><00:06:51.520><c> simple</c><00:06:51.840><c> ping</c><00:06:52.080><c> pong</c><00:06:52.319><c> code.</c><00:06:52.800><c> How</c><00:06:52.960><c> are</c>

00:06:53.029 --> 00:06:53.039 align:start position:0%
to run a simple ping pong code. How are
 

00:06:53.039 --> 00:06:54.950 align:start position:0%
to run a simple ping pong code. How are
we<00:06:53.199><c> going</c><00:06:53.280><c> to</c><00:06:53.360><c> interpret</c><00:06:53.680><c> the</c><00:06:53.919><c> results?</c><00:06:54.400><c> Okay.</c>

00:06:54.950 --> 00:06:54.960 align:start position:0%
we going to interpret the results? Okay.
 

00:06:54.960 --> 00:06:56.629 align:start position:0%
we going to interpret the results? Okay.
So<00:06:55.120><c> I</c><00:06:55.280><c> always</c><00:06:55.520><c> think</c><00:06:55.680><c> I</c><00:06:55.840><c> mean</c><00:06:55.919><c> I'm</c><00:06:56.080><c> not</c><00:06:56.240><c> a</c><00:06:56.400><c> car</c>

00:06:56.629 --> 00:06:56.639 align:start position:0%
So I always think I mean I'm not a car
 

00:06:56.639 --> 00:06:59.110 align:start position:0%
So I always think I mean I'm not a car
fanatic<00:06:57.039><c> but</c><00:06:57.199><c> I</c><00:06:57.360><c> think</c><00:06:57.520><c> cars</c><00:06:57.840><c> are</c><00:06:58.000><c> very</c><00:06:58.240><c> useful</c>

00:06:59.110 --> 00:06:59.120 align:start position:0%
fanatic but I think cars are very useful
 

00:06:59.120 --> 00:07:01.110 align:start position:0%
fanatic but I think cars are very useful
models<00:06:59.520><c> for</c><00:06:59.680><c> for</c><00:07:00.000><c> computing</c><00:07:00.479><c> and</c><00:07:00.720><c> parallel</c>

00:07:01.110 --> 00:07:01.120 align:start position:0%
models for for computing and parallel
 

00:07:01.120 --> 00:07:03.589 align:start position:0%
models for for computing and parallel
computing<00:07:01.440><c> in</c><00:07:01.680><c> particular.</c><00:07:02.479><c> So</c><00:07:02.800><c> you</c><00:07:02.960><c> know</c>

00:07:03.589 --> 00:07:03.599 align:start position:0%
computing in particular. So you know
 

00:07:03.599 --> 00:07:05.430 align:start position:0%
computing in particular. So you know
we've<00:07:03.759><c> got</c><00:07:03.919><c> analog</c><00:07:04.400><c> car</c><00:07:04.639><c> journey.</c><00:07:04.960><c> Okay.</c><00:07:05.199><c> My</c>

00:07:05.430 --> 00:07:05.440 align:start position:0%
we've got analog car journey. Okay. My
 

00:07:05.440 --> 00:07:07.110 align:start position:0%
we've got analog car journey. Okay. My
car<00:07:05.599><c> is</c><00:07:05.759><c> part</c><00:07:05.919><c> of</c><00:07:06.080><c> nearby</c><00:07:06.479><c> charity.</c><00:07:06.800><c> It</c><00:07:06.880><c> takes</c>

00:07:07.110 --> 00:07:07.120 align:start position:0%
car is part of nearby charity. It takes
 

00:07:07.120 --> 00:07:10.230 align:start position:0%
car is part of nearby charity. It takes
five<00:07:07.360><c> minutes</c><00:07:07.520><c> to</c><00:07:07.680><c> walk</c><00:07:08.000><c> there.</c><00:07:08.800><c> Okay.</c><00:07:09.840><c> After</c>

00:07:10.230 --> 00:07:10.240 align:start position:0%
five minutes to walk there. Okay. After
 

00:07:10.240 --> 00:07:13.270 align:start position:0%
five minutes to walk there. Okay. After
that<00:07:11.280><c> I</c><00:07:11.520><c> I</c><00:07:11.840><c> average</c><00:07:12.160><c> 60</c><00:07:12.400><c> km</c><00:07:12.720><c> per</c><00:07:12.880><c> hour</c><00:07:13.120><c> when</c>

00:07:13.270 --> 00:07:13.280 align:start position:0%
that I I average 60 km per hour when
 

00:07:13.280 --> 00:07:14.870 align:start position:0%
that I I average 60 km per hour when
driving.

00:07:14.870 --> 00:07:14.880 align:start position:0%
driving.
 

00:07:14.880 --> 00:07:17.830 align:start position:0%
driving.
How<00:07:15.120><c> long</c><00:07:15.360><c> does</c><00:07:15.599><c> it</c><00:07:15.759><c> take?</c><00:07:16.160><c> Okay,</c><00:07:16.880><c> so</c><00:07:17.199><c> to</c><00:07:17.440><c> do</c><00:07:17.599><c> a</c>

00:07:17.830 --> 00:07:17.840 align:start position:0%
How long does it take? Okay, so to do a
 

00:07:17.840 --> 00:07:21.589 align:start position:0%
How long does it take? Okay, so to do a
journey<00:07:19.199><c> in</c><00:07:19.520><c> minutes</c><00:07:20.400><c> against</c><00:07:20.720><c> the</c><00:07:20.880><c> distance,</c>

00:07:21.589 --> 00:07:21.599 align:start position:0%
journey in minutes against the distance,
 

00:07:21.599 --> 00:07:24.550 align:start position:0%
journey in minutes against the distance,
doesn't<00:07:21.840><c> matter</c><00:07:22.160><c> how</c><00:07:23.120><c> far</c><00:07:23.440><c> I</c><00:07:23.680><c> go,</c><00:07:24.000><c> it</c><00:07:24.160><c> takes</c><00:07:24.400><c> me</c>

00:07:24.550 --> 00:07:24.560 align:start position:0%
doesn't matter how far I go, it takes me
 

00:07:24.560 --> 00:07:27.189 align:start position:0%
doesn't matter how far I go, it takes me
five<00:07:24.800><c> minutes</c><00:07:24.960><c> to</c><00:07:25.199><c> walk</c><00:07:25.360><c> to</c><00:07:25.520><c> my</c><00:07:25.759><c> car</c><00:07:26.720><c> and</c><00:07:26.960><c> then</c>

00:07:27.189 --> 00:07:27.199 align:start position:0%
five minutes to walk to my car and then
 

00:07:27.199 --> 00:07:30.150 align:start position:0%
five minutes to walk to my car and then
the<00:07:27.520><c> time</c><00:07:27.759><c> is</c><00:07:28.000><c> then</c><00:07:28.319><c> linear</c><00:07:29.120><c> in</c><00:07:29.440><c> the</c><00:07:29.680><c> in</c><00:07:30.000><c> the</c>

00:07:30.150 --> 00:07:30.160 align:start position:0%
the time is then linear in the in the
 

00:07:30.160 --> 00:07:32.469 align:start position:0%
the time is then linear in the in the
distance.<00:07:30.720><c> Okay,</c><00:07:31.280><c> five</c><00:07:31.520><c> minutes</c><00:07:31.919><c> then</c><00:07:32.080><c> then</c>

00:07:32.469 --> 00:07:32.479 align:start position:0%
distance. Okay, five minutes then then
 

00:07:32.479 --> 00:07:35.270 align:start position:0%
distance. Okay, five minutes then then
simple<00:07:32.960><c> one</c><00:07:33.360><c> that</c><00:07:33.680><c> so</c><00:07:33.919><c> these</c><00:07:34.160><c> these</c><00:07:34.560><c> these</c><00:07:35.039><c> two</c>

00:07:35.270 --> 00:07:35.280 align:start position:0%
simple one that so these these these two
 

00:07:35.280 --> 00:07:37.670 align:start position:0%
simple one that so these these these two
parameters<00:07:36.319><c> will</c><00:07:36.639><c> correspond</c><00:07:37.199><c> when</c><00:07:37.440><c> we</c><00:07:37.520><c> do</c>

00:07:37.670 --> 00:07:37.680 align:start position:0%
parameters will correspond when we do
 

00:07:37.680 --> 00:07:40.309 align:start position:0%
parameters will correspond when we do
message<00:07:38.000><c> passing</c><00:07:38.319><c> to</c><00:07:38.400><c> the</c><00:07:38.560><c> latency</c><00:07:39.840><c> and</c><00:07:40.080><c> then</c>

00:07:40.309 --> 00:07:40.319 align:start position:0%
message passing to the latency and then
 

00:07:40.319 --> 00:07:42.150 align:start position:0%
message passing to the latency and then
this<00:07:40.800><c> you</c><00:07:41.199><c> will</c><00:07:41.440><c> correspond</c><00:07:41.840><c> to</c><00:07:42.000><c> the</c>

00:07:42.150 --> 00:07:42.160 align:start position:0%
this you will correspond to the
 

00:07:42.160 --> 00:07:44.309 align:start position:0%
this you will correspond to the
bandwidth.<00:07:42.720><c> Okay.</c>

00:07:44.309 --> 00:07:44.319 align:start position:0%
bandwidth. Okay.
 

00:07:44.319 --> 00:07:48.309 align:start position:0%
bandwidth. Okay.
Um<00:07:44.639><c> if</c><00:07:44.880><c> I</c><00:07:45.120><c> plot</c><00:07:45.360><c> this</c><00:07:45.759><c> on</c><00:07:46.080><c> a</c><00:07:46.720><c> um</c><00:07:47.360><c> on</c><00:07:47.680><c> a</c><00:07:47.919><c> log</c>

00:07:48.309 --> 00:07:48.319 align:start position:0%
Um if I plot this on a um on a log
 

00:07:48.319 --> 00:07:50.710 align:start position:0%
Um if I plot this on a um on a log
scale,<00:07:49.120><c> it</c><00:07:49.360><c> looks</c><00:07:49.599><c> a</c><00:07:49.759><c> bit</c><00:07:49.919><c> different.</c><00:07:50.479><c> What</c>

00:07:50.710 --> 00:07:50.720 align:start position:0%
scale, it looks a bit different. What
 

00:07:50.720 --> 00:07:52.710 align:start position:0%
scale, it looks a bit different. What
you<00:07:50.880><c> see</c><00:07:51.039><c> here</c><00:07:51.199><c> is</c><00:07:51.440><c> that</c><00:07:51.599><c> for</c><00:07:51.919><c> you</c><00:07:52.080><c> know</c><00:07:52.479><c> a</c>

00:07:52.710 --> 00:07:52.720 align:start position:0%
you see here is that for you know a
 

00:07:52.720 --> 00:07:56.950 align:start position:0%
you see here is that for you know a
large<00:07:53.520><c> for</c><00:07:53.599><c> for</c><00:07:53.840><c> small</c><00:07:54.879><c> distances</c><00:07:55.840><c> my</c><00:07:56.000><c> my</c><00:07:56.400><c> time</c>

00:07:56.950 --> 00:07:56.960 align:start position:0%
large for for small distances my my time
 

00:07:56.960 --> 00:08:00.070 align:start position:0%
large for for small distances my my time
is<00:07:57.280><c> constant</c><00:07:58.160><c> at</c><00:07:58.560><c> 5</c><00:07:58.879><c> minutes</c><00:07:59.360><c> up</c><00:07:59.599><c> to</c><00:07:59.759><c> about</c><00:07:59.919><c> a</c>

00:08:00.070 --> 00:08:00.080 align:start position:0%
is constant at 5 minutes up to about a
 

00:08:00.080 --> 00:08:01.749 align:start position:0%
is constant at 5 minutes up to about a
kilometer<00:08:00.560><c> or</c><00:08:00.720><c> two</c><00:08:00.879><c> and</c><00:08:01.039><c> then</c><00:08:01.199><c> it</c><00:08:01.360><c> starts</c><00:08:01.520><c> to</c>

00:08:01.749 --> 00:08:01.759 align:start position:0%
kilometer or two and then it starts to
 

00:08:01.759 --> 00:08:03.350 align:start position:0%
kilometer or two and then it starts to
increase<00:08:02.000><c> and</c><00:08:02.400><c> log</c><00:08:02.639><c> scale</c><00:08:02.879><c> looks</c><00:08:03.039><c> fairly</c>

00:08:03.350 --> 00:08:03.360 align:start position:0%
increase and log scale looks fairly
 

00:08:03.360 --> 00:08:05.430 align:start position:0%
increase and log scale looks fairly
rapidly.<00:08:04.080><c> But</c><00:08:04.319><c> you</c><00:08:04.479><c> know</c><00:08:04.639><c> this</c><00:08:05.039><c> you</c><00:08:05.120><c> know</c><00:08:05.280><c> you</c>

00:08:05.430 --> 00:08:05.440 align:start position:0%
rapidly. But you know this you know you
 

00:08:05.440 --> 00:08:07.990 align:start position:0%
rapidly. But you know this you know you
can<00:08:05.680><c> plot</c><00:08:06.000><c> it</c><00:08:06.240><c> different</c><00:08:06.479><c> ways</c><00:08:07.120><c> but</c><00:08:07.520><c> be</c><00:08:07.840><c> you</c>

00:08:07.990 --> 00:08:08.000 align:start position:0%
can plot it different ways but be you
 

00:08:08.000 --> 00:08:10.629 align:start position:0%
can plot it different ways but be you
can<00:08:08.160><c> see</c><00:08:08.240><c> that</c><00:08:08.560><c> you</c><00:08:08.720><c> know</c><00:08:09.759><c> anyway</c><00:08:10.160><c> so</c><00:08:10.400><c> that</c>

00:08:10.629 --> 00:08:10.639 align:start position:0%
can see that you know anyway so that
 

00:08:10.639 --> 00:08:12.309 align:start position:0%
can see that you know anyway so that
this<00:08:10.800><c> is</c><00:08:10.879><c> this</c><00:08:11.120><c> is</c><00:08:11.199><c> how</c><00:08:11.360><c> what</c><00:08:11.520><c> I</c><00:08:11.680><c> would</c><00:08:11.759><c> see</c><00:08:12.080><c> and</c>

00:08:12.309 --> 00:08:12.319 align:start position:0%
this is this is how what I would see and
 

00:08:12.319 --> 00:08:13.670 align:start position:0%
this is this is how what I would see and
this<00:08:12.479><c> is</c><00:08:12.639><c> typically</c><00:08:12.960><c> what</c><00:08:13.120><c> we'd</c><00:08:13.360><c> expect</c><00:08:13.520><c> to</c>

00:08:13.670 --> 00:08:13.680 align:start position:0%
this is typically what we'd expect to
 

00:08:13.680 --> 00:08:15.589 align:start position:0%
this is typically what we'd expect to
see<00:08:13.759><c> for</c><00:08:13.919><c> the</c><00:08:14.000><c> time</c><00:08:14.240><c> taking</c><00:08:14.560><c> send</c><00:08:14.720><c> a</c><00:08:14.960><c> message</c>

00:08:15.589 --> 00:08:15.599 align:start position:0%
see for the time taking send a message
 

00:08:15.599 --> 00:08:17.830 align:start position:0%
see for the time taking send a message
where<00:08:15.919><c> this</c><00:08:16.160><c> is</c><00:08:16.319><c> the</c><00:08:16.560><c> latency</c><00:08:16.960><c> and</c><00:08:17.120><c> this</c><00:08:17.280><c> is</c><00:08:17.759><c> um</c>

00:08:17.830 --> 00:08:17.840 align:start position:0%
where this is the latency and this is um
 

00:08:17.840 --> 00:08:20.150 align:start position:0%
where this is the latency and this is um
sorry<00:08:18.160><c> where</c><00:08:18.319><c> this</c><00:08:18.400><c> is</c><00:08:18.560><c> the</c><00:08:18.720><c> message</c><00:08:19.039><c> size</c><00:08:19.919><c> and</c>

00:08:20.150 --> 00:08:20.160 align:start position:0%
sorry where this is the message size and
 

00:08:20.160 --> 00:08:23.189 align:start position:0%
sorry where this is the message size and
this<00:08:20.400><c> is</c><00:08:20.479><c> the</c><00:08:20.639><c> the</c><00:08:20.960><c> time</c><00:08:21.199><c> taken.</c>

00:08:23.189 --> 00:08:23.199 align:start position:0%
this is the the time taken.
 

00:08:23.199 --> 00:08:24.710 align:start position:0%
this is the the time taken.
So<00:08:23.440><c> you</c><00:08:23.680><c> get</c><00:08:23.840><c> very</c><00:08:24.080><c> different</c><00:08:24.319><c> small</c><00:08:24.560><c> and</c>

00:08:24.710 --> 00:08:24.720 align:start position:0%
So you get very different small and
 

00:08:24.720 --> 00:08:26.950 align:start position:0%
So you get very different small and
large<00:08:25.039><c> distance</c><00:08:25.360><c> behavior</c><00:08:26.319><c> for</c><00:08:26.639><c> small</c>

00:08:26.950 --> 00:08:26.960 align:start position:0%
large distance behavior for small
 

00:08:26.960 --> 00:08:29.430 align:start position:0%
large distance behavior for small
distances<00:08:27.759><c> it</c><00:08:28.000><c> takes</c><00:08:28.160><c> a</c><00:08:28.400><c> constant</c><00:08:28.879><c> time</c><00:08:29.120><c> of</c>

00:08:29.430 --> 00:08:29.440 align:start position:0%
distances it takes a constant time of
 

00:08:29.440 --> 00:08:31.749 align:start position:0%
distances it takes a constant time of
five<00:08:29.680><c> minutes.</c><00:08:30.240><c> Okay.</c><00:08:31.120><c> So</c><00:08:31.360><c> what</c><00:08:31.520><c> that's</c>

00:08:31.749 --> 00:08:31.759 align:start position:0%
five minutes. Okay. So what that's
 

00:08:31.759 --> 00:08:33.509 align:start position:0%
five minutes. Okay. So what that's
saying<00:08:31.919><c> is</c><00:08:32.159><c> when</c><00:08:32.320><c> we</c><00:08:32.479><c> go</c><00:08:32.560><c> to</c><00:08:32.719><c> actual</c><00:08:33.200><c> sending</c>

00:08:33.509 --> 00:08:33.519 align:start position:0%
saying is when we go to actual sending
 

00:08:33.519 --> 00:08:36.230 align:start position:0%
saying is when we go to actual sending
messages<00:08:33.839><c> in</c><00:08:34.000><c> NPI</c><00:08:34.880><c> small</c><00:08:35.200><c> messages</c><00:08:35.839><c> we'll</c>

00:08:36.230 --> 00:08:36.240 align:start position:0%
messages in NPI small messages we'll
 

00:08:36.240 --> 00:08:38.630 align:start position:0%
messages in NPI small messages we'll
come<00:08:36.399><c> back</c><00:08:36.560><c> to</c><00:08:36.719><c> what</c><00:08:37.039><c> small</c><00:08:37.440><c> mean</c><00:08:38.000><c> will</c><00:08:38.320><c> take</c><00:08:38.479><c> a</c>

00:08:38.630 --> 00:08:38.640 align:start position:0%
come back to what small mean will take a
 

00:08:38.640 --> 00:08:40.310 align:start position:0%
come back to what small mean will take a
constant<00:08:39.039><c> time</c><00:08:39.440><c> it</c><00:08:39.599><c> will</c><00:08:39.680><c> take</c><00:08:39.919><c> the</c><00:08:40.159><c> same</c>

00:08:40.310 --> 00:08:40.320 align:start position:0%
constant time it will take the same
 

00:08:40.320 --> 00:08:42.469 align:start position:0%
constant time it will take the same
number<00:08:40.560><c> of</c><00:08:40.959><c> microsconds</c><00:08:41.599><c> to</c><00:08:41.839><c> send</c><00:08:42.000><c> one</c><00:08:42.240><c> bite</c>

00:08:42.469 --> 00:08:42.479 align:start position:0%
number of microsconds to send one bite
 

00:08:42.479 --> 00:08:45.350 align:start position:0%
number of microsconds to send one bite
as<00:08:42.719><c> to</c><00:08:42.880><c> send</c><00:08:43.039><c> 10</c><00:08:43.279><c> bytes</c><00:08:43.760><c> basically</c>

00:08:45.350 --> 00:08:45.360 align:start position:0%
as to send 10 bytes basically
 

00:08:45.360 --> 00:08:48.150 align:start position:0%
as to send 10 bytes basically
but<00:08:45.760><c> long</c><00:08:46.080><c> distances</c><00:08:46.720><c> if</c><00:08:46.880><c> I</c><00:08:47.120><c> plot</c><00:08:47.360><c> the</c><00:08:47.600><c> speed</c>

00:08:48.150 --> 00:08:48.160 align:start position:0%
but long distances if I plot the speed
 

00:08:48.160 --> 00:08:51.990 align:start position:0%
but long distances if I plot the speed
the<00:08:48.399><c> speed</c><00:08:49.440><c> against</c><00:08:49.839><c> the</c><00:08:50.080><c> distance</c><00:08:51.279><c> achieve</c><00:08:51.760><c> a</c>

00:08:51.990 --> 00:08:52.000 align:start position:0%
the speed against the distance achieve a
 

00:08:52.000 --> 00:08:53.910 align:start position:0%
the speed against the distance achieve a
constant<00:08:52.399><c> speed.</c><00:08:52.800><c> So</c><00:08:52.959><c> when</c><00:08:53.200><c> I</c><00:08:53.360><c> drive</c><00:08:53.519><c> a</c><00:08:53.760><c> long</c>

00:08:53.910 --> 00:08:53.920 align:start position:0%
constant speed. So when I drive a long
 

00:08:53.920 --> 00:08:55.829 align:start position:0%
constant speed. So when I drive a long
distance<00:08:54.240><c> I</c><00:08:54.399><c> have</c><00:08:54.720><c> the</c><00:08:54.959><c> latency</c><00:08:55.360><c> of</c><00:08:55.600><c> five</c>

00:08:55.829 --> 00:08:55.839 align:start position:0%
distance I have the latency of five
 

00:08:55.839 --> 00:08:58.070 align:start position:0%
distance I have the latency of five
minutes<00:08:56.160><c> the</c><00:08:56.320><c> overhead</c><00:08:56.640><c> is</c><00:08:56.800><c> is</c><00:08:57.040><c> negligible</c><00:08:57.839><c> I</c>

00:08:58.070 --> 00:08:58.080 align:start position:0%
minutes the overhead is is negligible I
 

00:08:58.080 --> 00:09:00.230 align:start position:0%
minutes the overhead is is negligible I
achieve<00:08:58.480><c> constant</c><00:08:58.959><c> speed.</c><00:08:59.680><c> So</c><00:09:00.000><c> small</c>

00:09:00.230 --> 00:09:00.240 align:start position:0%
achieve constant speed. So small
 

00:09:00.240 --> 00:09:02.550 align:start position:0%
achieve constant speed. So small
distances<00:09:00.720><c> take</c><00:09:00.959><c> constant</c><00:09:01.440><c> time,</c><00:09:02.240><c> long</c>

00:09:02.550 --> 00:09:02.560 align:start position:0%
distances take constant time, long
 

00:09:02.560 --> 00:09:04.470 align:start position:0%
distances take constant time, long
distances<00:09:02.959><c> achieve</c><00:09:03.360><c> constant</c><00:09:03.680><c> speed</c><00:09:03.920><c> and</c><00:09:04.240><c> and</c>

00:09:04.470 --> 00:09:04.480 align:start position:0%
distances achieve constant speed and and
 

00:09:04.480 --> 00:09:06.790 align:start position:0%
distances achieve constant speed and and
in<00:09:04.640><c> NPI</c><00:09:05.200><c> terms,</c><00:09:05.760><c> small</c><00:09:06.000><c> distances</c><00:09:06.399><c> will</c><00:09:06.640><c> take</c>

00:09:06.790 --> 00:09:06.800 align:start position:0%
in NPI terms, small distances will take
 

00:09:06.800 --> 00:09:08.630 align:start position:0%
in NPI terms, small distances will take
a<00:09:06.959><c> constant</c><00:09:07.200><c> latency</c><00:09:07.839><c> of</c><00:09:08.000><c> certain</c><00:09:08.320><c> number</c><00:09:08.480><c> of</c>

00:09:08.630 --> 00:09:08.640 align:start position:0%
a constant latency of certain number of
 

00:09:08.640 --> 00:09:11.190 align:start position:0%
a constant latency of certain number of
microscs<00:09:09.680><c> and</c><00:09:10.000><c> long</c><00:09:10.320><c> messages</c><00:09:10.720><c> will</c><00:09:10.880><c> achieve</c>

00:09:11.190 --> 00:09:11.200 align:start position:0%
microscs and long messages will achieve
 

00:09:11.200 --> 00:09:14.310 align:start position:0%
microscs and long messages will achieve
a<00:09:11.360><c> constant</c><00:09:11.839><c> bandwidth</c><00:09:12.880><c> asmtotically</c><00:09:13.680><c> of</c>

00:09:14.310 --> 00:09:14.320 align:start position:0%
a constant bandwidth asmtotically of
 

00:09:14.320 --> 00:09:16.710 align:start position:0%
a constant bandwidth asmtotically of
hopefully<00:09:14.720><c> tens</c><00:09:15.040><c> of</c><00:09:15.200><c> gigabytes</c><00:09:15.680><c> per</c><00:09:15.920><c> second.</c>

00:09:16.710 --> 00:09:16.720 align:start position:0%
hopefully tens of gigabytes per second.
 

00:09:16.720 --> 00:09:20.389 align:start position:0%
hopefully tens of gigabytes per second.
So<00:09:16.959><c> I've</c><00:09:17.120><c> talked</c><00:09:17.360><c> about</c><00:09:17.519><c> long</c><00:09:17.920><c> and</c><00:09:18.959><c> um</c><00:09:19.440><c> um</c>

00:09:20.389 --> 00:09:20.399 align:start position:0%
So I've talked about long and um um
 

00:09:20.399 --> 00:09:22.470 align:start position:0%
So I've talked about long and um um
small<00:09:20.640><c> and</c><00:09:20.959><c> large.</c><00:09:21.360><c> What</c><00:09:21.519><c> does</c><00:09:21.680><c> that</c><00:09:21.920><c> mean?</c>

00:09:22.470 --> 00:09:22.480 align:start position:0%
small and large. What does that mean?
 

00:09:22.480 --> 00:09:24.710 align:start position:0%
small and large. What does that mean?
Well,<00:09:22.800><c> a</c><00:09:23.040><c> very</c><00:09:23.279><c> useful</c><00:09:23.680><c> measure</c><00:09:24.000><c> is</c><00:09:24.320><c> what</c><00:09:24.560><c> he</c>

00:09:24.710 --> 00:09:24.720 align:start position:0%
Well, a very useful measure is what he
 

00:09:24.720 --> 00:09:27.269 align:start position:0%
Well, a very useful measure is what he
got<00:09:24.880><c> n</c><00:09:25.040><c> and</c><00:09:25.120><c> a</c><00:09:25.279><c> half,</c><00:09:26.320><c> but</c><00:09:26.480><c> it</c><00:09:26.640><c> takes</c><00:09:26.880><c> equal</c>

00:09:27.269 --> 00:09:27.279 align:start position:0%
got n and a half, but it takes equal
 

00:09:27.279 --> 00:09:30.070 align:start position:0%
got n and a half, but it takes equal
time<00:09:27.440><c> as</c><00:09:27.680><c> driving</c><00:09:28.080><c> as</c><00:09:28.320><c> walking.</c><00:09:28.800><c> Okay.</c><00:09:29.600><c> So,</c><00:09:29.839><c> n</c>

00:09:30.070 --> 00:09:30.080 align:start position:0%
time as driving as walking. Okay. So, n
 

00:09:30.080 --> 00:09:35.110 align:start position:0%
time as driving as walking. Okay. So, n
a<00:09:30.320><c> half</c><00:09:31.200><c> is</c><00:09:32.160><c> um</c><00:09:32.320><c> the</c><00:09:32.640><c> the</c><00:09:32.800><c> the</c><00:09:33.360><c> speed</c><00:09:34.160><c> times</c><00:09:34.640><c> the</c>

00:09:35.110 --> 00:09:35.120 align:start position:0%
a half is um the the the speed times the
 

00:09:35.120 --> 00:09:37.590 align:start position:0%
a half is um the the the speed times the
the<00:09:35.440><c> latency.</c><00:09:36.000><c> It's</c><00:09:36.240><c> 5</c><00:09:36.480><c> kilometers.</c><00:09:37.200><c> If</c><00:09:37.440><c> I</c>

00:09:37.590 --> 00:09:37.600 align:start position:0%
the latency. It's 5 kilometers. If I
 

00:09:37.600 --> 00:09:40.630 align:start position:0%
the latency. It's 5 kilometers. If I
travel<00:09:37.920><c> 5</c><00:09:38.160><c> kilometers,</c><00:09:38.959><c> okay,</c><00:09:39.680><c> I</c><00:09:40.000><c> spend</c><00:09:40.240><c> equal</c>

00:09:40.630 --> 00:09:40.640 align:start position:0%
travel 5 kilometers, okay, I spend equal
 

00:09:40.640 --> 00:09:42.310 align:start position:0%
travel 5 kilometers, okay, I spend equal
number<00:09:40.800><c> of</c><00:09:41.040><c> time</c><00:09:41.279><c> getting</c><00:09:41.519><c> to</c><00:09:41.680><c> the</c><00:09:41.839><c> car</c><00:09:42.080><c> is</c>

00:09:42.310 --> 00:09:42.320 align:start position:0%
number of time getting to the car is
 

00:09:42.320 --> 00:09:45.269 align:start position:0%
number of time getting to the car is
driving.<00:09:43.120><c> So</c><00:09:43.360><c> that</c><00:09:43.839><c> so</c><00:09:44.000><c> you'll</c><00:09:44.320><c> see</c><00:09:44.480><c> that</c><00:09:44.800><c> this</c>

00:09:45.269 --> 00:09:45.279 align:start position:0%
driving. So that so you'll see that this
 

00:09:45.279 --> 00:09:47.829 align:start position:0%
driving. So that so you'll see that this
the<00:09:45.600><c> time</c><00:09:45.920><c> against</c><00:09:46.240><c> the</c><00:09:46.399><c> distance</c><00:09:46.959><c> starts</c><00:09:47.279><c> to</c>

00:09:47.829 --> 00:09:47.839 align:start position:0%
the time against the distance starts to
 

00:09:47.839 --> 00:09:50.150 align:start position:0%
the time against the distance starts to
change<00:09:48.240><c> about</c><00:09:48.640><c> five</c><00:09:48.959><c> kilometers</c><00:09:49.760><c> and</c><00:09:49.920><c> then</c>

00:09:50.150 --> 00:09:50.160 align:start position:0%
change about five kilometers and then
 

00:09:50.160 --> 00:09:52.150 align:start position:0%
change about five kilometers and then
much<00:09:50.399><c> above</c><00:09:50.640><c> five</c><00:09:50.959><c> you</c><00:09:51.120><c> get</c><00:09:51.279><c> constant</c><00:09:51.680><c> speed.</c>

00:09:52.150 --> 00:09:52.160 align:start position:0%
much above five you get constant speed.
 

00:09:52.160 --> 00:09:54.230 align:start position:0%
much above five you get constant speed.
So<00:09:52.240><c> this</c><00:09:52.480><c> n</c><00:09:52.720><c> when</c><00:09:52.959><c> you</c><00:09:53.040><c> say</c><00:09:53.279><c> small</c><00:09:53.600><c> message,</c>

00:09:54.230 --> 00:09:54.240 align:start position:0%
So this n when you say small message,
 

00:09:54.240 --> 00:09:55.990 align:start position:0%
So this n when you say small message,
what<00:09:54.399><c> do</c><00:09:54.480><c> you</c><00:09:54.560><c> mean?</c><00:09:54.800><c> Well,</c><00:09:55.360><c> this</c><00:09:55.600><c> N</c><00:09:55.760><c> and</c><00:09:55.839><c> a</c>

00:09:55.990 --> 00:09:56.000 align:start position:0%
what do you mean? Well, this N and a
 

00:09:56.000 --> 00:09:57.670 align:start position:0%
what do you mean? Well, this N and a
half<00:09:56.160><c> where</c><00:09:56.399><c> you</c><00:09:56.560><c> spend</c><00:09:56.959><c> equal</c><00:09:57.279><c> amount</c><00:09:57.519><c> of</c>

00:09:57.670 --> 00:09:57.680 align:start position:0%
half where you spend equal amount of
 

00:09:57.680 --> 00:09:59.750 align:start position:0%
half where you spend equal amount of
time<00:09:57.839><c> in</c><00:09:58.000><c> in</c><00:09:58.240><c> the</c><00:09:58.399><c> overhead</c><00:09:59.279><c> and</c><00:09:59.519><c> it's</c>

00:09:59.750 --> 00:09:59.760 align:start position:0%
time in in the overhead and it's
 

00:09:59.760 --> 00:10:02.389 align:start position:0%
time in in the overhead and it's
actually<00:10:00.000><c> doing</c><00:10:00.160><c> the</c><00:10:00.399><c> transfer</c><00:10:01.519><c> walking</c><00:10:02.000><c> and</c>

00:10:02.389 --> 00:10:02.399 align:start position:0%
actually doing the transfer walking and
 

00:10:02.399 --> 00:10:04.710 align:start position:0%
actually doing the transfer walking and
driving<00:10:02.880><c> or</c><00:10:03.200><c> latency</c><00:10:03.600><c> and</c><00:10:03.839><c> bandwidth</c><00:10:04.560><c> gives</c>

00:10:04.710 --> 00:10:04.720 align:start position:0%
driving or latency and bandwidth gives
 

00:10:04.720 --> 00:10:07.590 align:start position:0%
driving or latency and bandwidth gives
you<00:10:04.880><c> a</c><00:10:05.040><c> useful</c><00:10:05.680><c> measure</c><00:10:06.080><c> as</c><00:10:06.240><c> to</c><00:10:06.480><c> what</c><00:10:07.360><c> where</c>

00:10:07.590 --> 00:10:07.600 align:start position:0%
you a useful measure as to what where
 

00:10:07.600 --> 00:10:08.949 align:start position:0%
you a useful measure as to what where
the<00:10:07.839><c> where</c><00:10:08.000><c> the</c><00:10:08.160><c> where</c><00:10:08.399><c> the</c><00:10:08.560><c> change</c><00:10:08.800><c> in</c>

00:10:08.949 --> 00:10:08.959 align:start position:0%
the where the where the change in
 

00:10:08.959 --> 00:10:11.350 align:start position:0%
the where the where the change in
behavior<00:10:09.200><c> is</c><00:10:09.440><c> likely</c><00:10:09.680><c> to</c><00:10:09.839><c> be.</c><00:10:10.959><c> So</c><00:10:11.120><c> for</c>

00:10:11.350 --> 00:10:11.360 align:start position:0%
behavior is likely to be. So for
 

00:10:11.360 --> 00:10:13.350 align:start position:0%
behavior is likely to be. So for
pointto-point<00:10:11.920><c> NPI</c><00:10:12.640><c> latency</c><00:10:13.040><c> is</c><00:10:13.200><c> the</c>

00:10:13.350 --> 00:10:13.360 align:start position:0%
pointto-point NPI latency is the
 

00:10:13.360 --> 00:10:15.269 align:start position:0%
pointto-point NPI latency is the
overhead<00:10:13.680><c> for</c><00:10:13.760><c> sending</c><00:10:14.079><c> any</c><00:10:14.320><c> message.</c><00:10:15.040><c> The</c>

00:10:15.269 --> 00:10:15.279 align:start position:0%
overhead for sending any message. The
 

00:10:15.279 --> 00:10:16.790 align:start position:0%
overhead for sending any message. The
time<00:10:15.360><c> to</c><00:10:15.600><c> get</c><00:10:15.680><c> a</c><00:10:15.760><c> very</c><00:10:16.000><c> short</c><00:10:16.160><c> message</c><00:10:16.480><c> on</c><00:10:16.640><c> the</c>

00:10:16.790 --> 00:10:16.800 align:start position:0%
time to get a very short message on the
 

00:10:16.800 --> 00:10:18.949 align:start position:0%
time to get a very short message on the
network<00:10:17.600><c> probably</c><00:10:17.839><c> about</c><00:10:18.160><c> microsconds</c><00:10:18.800><c> and</c>

00:10:18.949 --> 00:10:18.959 align:start position:0%
network probably about microsconds and
 

00:10:18.959 --> 00:10:20.630 align:start position:0%
network probably about microsconds and
in<00:10:19.120><c> practice</c><00:10:19.519><c> that's</c><00:10:19.920><c> actually</c><00:10:20.160><c> often</c>

00:10:20.630 --> 00:10:20.640 align:start position:0%
in practice that's actually often
 

00:10:20.640 --> 00:10:22.949 align:start position:0%
in practice that's actually often
software<00:10:21.120><c> overheads</c><00:10:22.320><c> um</c><00:10:22.480><c> rather</c><00:10:22.720><c> than</c>

00:10:22.949 --> 00:10:22.959 align:start position:0%
software overheads um rather than
 

00:10:22.959 --> 00:10:25.269 align:start position:0%
software overheads um rather than
hardware<00:10:23.279><c> overheads.</c>

00:10:25.269 --> 00:10:25.279 align:start position:0%
hardware overheads.
 

00:10:25.279 --> 00:10:28.389 align:start position:0%
hardware overheads.
Um<00:10:25.680><c> the</c><00:10:26.000><c> bandwidth</c><00:10:27.360><c> is</c><00:10:27.600><c> the</c><00:10:27.760><c> rate</c><00:10:28.000><c> of</c><00:10:28.160><c> transfer</c>

00:10:28.389 --> 00:10:28.399 align:start position:0%
Um the bandwidth is the rate of transfer
 

00:10:28.399 --> 00:10:30.069 align:start position:0%
Um the bandwidth is the rate of transfer
on<00:10:28.560><c> the</c><00:10:28.720><c> network.</c><00:10:29.040><c> Here</c><00:10:29.200><c> I</c><00:10:29.440><c> assumed</c><00:10:29.680><c> it's</c><00:10:29.920><c> 10</c>

00:10:30.069 --> 00:10:30.079 align:start position:0%
on the network. Here I assumed it's 10
 

00:10:30.079 --> 00:10:32.870 align:start position:0%
on the network. Here I assumed it's 10
gigabytes<00:10:30.640><c> per</c><00:10:30.880><c> second.</c><00:10:31.760><c> So</c><00:10:32.160><c> uh</c><00:10:32.240><c> if</c><00:10:32.399><c> I</c><00:10:32.640><c> plot</c>

00:10:32.870 --> 00:10:32.880 align:start position:0%
gigabytes per second. So uh if I plot
 

00:10:32.880 --> 00:10:34.550 align:start position:0%
gigabytes per second. So uh if I plot
the<00:10:33.120><c> time</c><00:10:33.279><c> taken</c><00:10:33.600><c> to</c><00:10:33.760><c> send</c><00:10:33.920><c> a</c><00:10:34.079><c> message</c><00:10:34.320><c> against</c>

00:10:34.550 --> 00:10:34.560 align:start position:0%
the time taken to send a message against
 

00:10:34.560 --> 00:10:36.949 align:start position:0%
the time taken to send a message against
the<00:10:34.720><c> message</c><00:10:35.040><c> size,</c><00:10:35.839><c> it</c><00:10:36.079><c> starts</c><00:10:36.399><c> off</c><00:10:36.640><c> always</c>

00:10:36.949 --> 00:10:36.959 align:start position:0%
the message size, it starts off always
 

00:10:36.959 --> 00:10:39.910 align:start position:0%
the message size, it starts off always
at<00:10:37.279><c> one</c><00:10:37.519><c> microscond.</c><00:10:38.240><c> That's</c><00:10:38.560><c> fairly</c><00:10:39.279><c> fairly</c>

00:10:39.910 --> 00:10:39.920 align:start position:0%
at one microscond. That's fairly fairly
 

00:10:39.920 --> 00:10:41.910 align:start position:0%
at one microscond. That's fairly fairly
um<00:10:40.240><c> generous</c><00:10:40.720><c> assumption</c><00:10:41.200><c> and</c><00:10:41.440><c> then</c><00:10:41.680><c> starts</c>

00:10:41.910 --> 00:10:41.920 align:start position:0%
um generous assumption and then starts
 

00:10:41.920 --> 00:10:45.509 align:start position:0%
um generous assumption and then starts
to<00:10:42.160><c> go</c><00:10:42.320><c> up</c><00:10:43.200><c> um</c><00:10:43.279><c> or</c><00:10:44.480><c> for</c><00:10:44.720><c> large</c><00:10:44.959><c> messages</c><00:10:45.360><c> I</c>

00:10:45.509 --> 00:10:45.519 align:start position:0%
to go up um or for large messages I
 

00:10:45.519 --> 00:10:47.350 align:start position:0%
to go up um or for large messages I
achieve<00:10:45.920><c> a</c><00:10:46.160><c> constant</c><00:10:46.560><c> bandwidth</c><00:10:46.959><c> of</c><00:10:47.120><c> 10</c>

00:10:47.350 --> 00:10:47.360 align:start position:0%
achieve a constant bandwidth of 10
 

00:10:47.360 --> 00:10:49.590 align:start position:0%
achieve a constant bandwidth of 10
gigabytes<00:10:47.839><c> per</c><00:10:48.079><c> second.</c><00:10:48.800><c> Uh</c><00:10:49.040><c> and</c><00:10:49.360><c> the</c>

00:10:49.590 --> 00:10:49.600 align:start position:0%
gigabytes per second. Uh and the
 

00:10:49.600 --> 00:10:51.750 align:start position:0%
gigabytes per second. Uh and the
crossover<00:10:50.160><c> here</c><00:10:50.480><c> and</c><00:10:50.640><c> a</c><00:10:50.800><c> half</c><00:10:51.040><c> is</c><00:10:51.440><c> 10</c>

00:10:51.750 --> 00:10:51.760 align:start position:0%
crossover here and a half is 10
 

00:10:51.760 --> 00:10:54.389 align:start position:0%
crossover here and a half is 10
kilobytes.<00:10:52.720><c> So</c><00:10:52.959><c> you</c><00:10:53.120><c> can</c><00:10:53.279><c> see</c><00:10:53.440><c> here</c><00:10:53.760><c> that</c><00:10:54.079><c> you</c>

00:10:54.389 --> 00:10:54.399 align:start position:0%
kilobytes. So you can see here that you
 

00:10:54.399 --> 00:10:56.710 align:start position:0%
kilobytes. So you can see here that you
above.<00:10:54.880><c> So</c><00:10:55.200><c> I</c><00:10:55.440><c> would</c><00:10:55.600><c> say</c><00:10:55.920><c> with</c><00:10:56.240><c> these</c><00:10:56.480><c> two</c>

00:10:56.710 --> 00:10:56.720 align:start position:0%
above. So I would say with these two
 

00:10:56.720 --> 00:10:58.630 align:start position:0%
above. So I would say with these two
parameters<00:10:57.120><c> of</c><00:10:57.360><c> one</c><00:10:57.519><c> microcond</c><00:10:58.079><c> latency</c><00:10:58.480><c> and</c>

00:10:58.630 --> 00:10:58.640 align:start position:0%
parameters of one microcond latency and
 

00:10:58.640 --> 00:11:01.750 align:start position:0%
parameters of one microcond latency and
10<00:10:58.800><c> gigabytes</c><00:10:59.360><c> per</c><00:10:59.600><c> second</c><00:11:00.399><c> of</c><00:11:00.800><c> bandwidth</c>

00:11:01.750 --> 00:11:01.760 align:start position:0%
10 gigabytes per second of bandwidth
 

00:11:01.760 --> 00:11:04.630 align:start position:0%
10 gigabytes per second of bandwidth
then<00:11:02.160><c> 10</c><00:11:02.399><c> kilobytes</c><00:11:03.040><c> would</c><00:11:03.279><c> be</c><00:11:03.519><c> my</c><00:11:04.160><c> crossover</c>

00:11:04.630 --> 00:11:04.640 align:start position:0%
then 10 kilobytes would be my crossover
 

00:11:04.640 --> 00:11:07.269 align:start position:0%
then 10 kilobytes would be my crossover
between<00:11:05.040><c> small</c><00:11:05.279><c> message</c><00:11:06.320><c> and</c><00:11:06.640><c> large</c><00:11:06.959><c> message</c>

00:11:07.269 --> 00:11:07.279 align:start position:0%
between small message and large message
 

00:11:07.279 --> 00:11:09.269 align:start position:0%
between small message and large message
behavior.<00:11:07.920><c> Constant</c><00:11:08.320><c> time</c><00:11:08.640><c> versus</c><00:11:08.959><c> constant</c>

00:11:09.269 --> 00:11:09.279 align:start position:0%
behavior. Constant time versus constant
 

00:11:09.279 --> 00:11:12.150 align:start position:0%
behavior. Constant time versus constant
bandwidth.

00:11:12.150 --> 00:11:12.160 align:start position:0%
bandwidth.
 

00:11:12.160 --> 00:11:15.430 align:start position:0%
bandwidth.
So<00:11:12.560><c> that's</c><00:11:12.800><c> just</c><00:11:12.959><c> a</c><00:11:13.200><c> useful</c><00:11:13.519><c> analogy.</c>

00:11:15.430 --> 00:11:15.440 align:start position:0%
So that's just a useful analogy.
 

00:11:15.440 --> 00:11:17.430 align:start position:0%
So that's just a useful analogy.
NPI<00:11:15.920><c> defines</c><00:11:16.240><c> a</c><00:11:16.399><c> lot</c><00:11:16.480><c> of</c><00:11:16.640><c> communication</c><00:11:17.040><c> modes</c>

00:11:17.430 --> 00:11:17.440 align:start position:0%
NPI defines a lot of communication modes
 

00:11:17.440 --> 00:11:19.269 align:start position:0%
NPI defines a lot of communication modes
probably<00:11:17.680><c> too</c><00:11:17.920><c> many.</c><00:11:18.240><c> I</c><00:11:18.399><c> mean</c><00:11:18.480><c> when</c><00:11:18.640><c> NPI</c><00:11:19.120><c> was</c>

00:11:19.269 --> 00:11:19.279 align:start position:0%
probably too many. I mean when NPI was
 

00:11:19.279 --> 00:11:20.790 align:start position:0%
probably too many. I mean when NPI was
defined<00:11:19.600><c> they</c><00:11:19.839><c> were</c><00:11:20.000><c> trying</c><00:11:20.240><c> to</c><00:11:20.399><c> basically</c>

00:11:20.790 --> 00:11:20.800 align:start position:0%
defined they were trying to basically
 

00:11:20.800 --> 00:11:22.790 align:start position:0%
defined they were trying to basically
encompass<00:11:21.680><c> all</c><00:11:21.920><c> the</c><00:11:22.079><c> message</c><00:11:22.480><c> passing</c>

00:11:22.790 --> 00:11:22.800 align:start position:0%
encompass all the message passing
 

00:11:22.800 --> 00:11:25.670 align:start position:0%
encompass all the message passing
libraries<00:11:23.200><c> which</c><00:11:23.440><c> had</c><00:11:23.760><c> which</c><00:11:24.079><c> had</c><00:11:25.120><c> um</c><00:11:25.360><c> gone</c>

00:11:25.670 --> 00:11:25.680 align:start position:0%
libraries which had which had um gone
 

00:11:25.680 --> 00:11:29.670 align:start position:0%
libraries which had which had um gone
before<00:11:26.079><c> it</c><00:11:26.720><c> for</c><00:11:26.959><c> portability</c><00:11:27.680><c> issues</c><00:11:28.640><c> and</c><00:11:29.200><c> uh</c>

00:11:29.670 --> 00:11:29.680 align:start position:0%
before it for portability issues and uh
 

00:11:29.680 --> 00:11:31.990 align:start position:0%
before it for portability issues and uh
API<00:11:30.160><c> defines</c><00:11:30.560><c> multiple</c><00:11:30.880><c> types</c><00:11:31.200><c> of</c><00:11:31.440><c> send</c><00:11:31.760><c> but</c>

00:11:31.990 --> 00:11:32.000 align:start position:0%
API defines multiple types of send but
 

00:11:32.000 --> 00:11:34.150 align:start position:0%
API defines multiple types of send but
the<00:11:32.160><c> the</c><00:11:32.399><c> the</c><00:11:32.640><c> two</c><00:11:33.040><c> definitely</c><00:11:33.519><c> it</c><00:11:33.760><c> it</c><00:11:34.000><c> there</c>

00:11:34.150 --> 00:11:34.160 align:start position:0%
the the the two definitely it it there
 

00:11:34.160 --> 00:11:35.750 align:start position:0%
the the the two definitely it it there
are<00:11:34.320><c> two</c><00:11:34.560><c> clear</c><00:11:34.880><c> types</c><00:11:35.120><c> of</c><00:11:35.200><c> send</c><00:11:35.519><c> one</c><00:11:35.680><c> is</c>

00:11:35.750 --> 00:11:35.760 align:start position:0%
are two clear types of send one is
 

00:11:35.760 --> 00:11:39.269 align:start position:0%
are two clear types of send one is
buffered<00:11:36.560><c> and</c><00:11:36.800><c> although</c><00:11:37.120><c> very</c><00:11:38.480><c> people</c><00:11:38.880><c> very</c>

00:11:39.269 --> 00:11:39.279 align:start position:0%
buffered and although very people very
 

00:11:39.279 --> 00:11:42.790 align:start position:0%
buffered and although very people very
rarely<00:11:39.920><c> call</c><00:11:40.240><c> this</c><00:11:40.560><c> explicitly</c><00:11:41.760><c> it's</c><00:11:42.000><c> NPIB</c>

00:11:42.790 --> 00:11:42.800 align:start position:0%
rarely call this explicitly it's NPIB
 

00:11:42.800 --> 00:11:45.110 align:start position:0%
rarely call this explicitly it's NPIB
send<00:11:43.120><c> buffer</c><00:11:43.519><c> send</c><00:11:44.160><c> what</c><00:11:44.399><c> happens</c><00:11:44.640><c> is</c><00:11:44.880><c> it's</c>

00:11:45.110 --> 00:11:45.120 align:start position:0%
send buffer send what happens is it's
 

00:11:45.120 --> 00:11:48.069 align:start position:0%
send buffer send what happens is it's
like<00:11:45.360><c> sending</c><00:11:45.760><c> an</c><00:11:46.079><c> email</c><00:11:47.120><c> your</c><00:11:47.360><c> buffer</c><00:11:47.839><c> send</c>

00:11:48.069 --> 00:11:48.079 align:start position:0%
like sending an email your buffer send
 

00:11:48.079 --> 00:11:49.350 align:start position:0%
like sending an email your buffer send
completes<00:11:48.399><c> locally</c><00:11:48.720><c> whether</c><00:11:48.880><c> or</c><00:11:48.959><c> not</c><00:11:49.120><c> match</c>

00:11:49.350 --> 00:11:49.360 align:start position:0%
completes locally whether or not match
 

00:11:49.360 --> 00:11:50.790 align:start position:0%
completes locally whether or not match
and<00:11:49.519><c> receive</c><00:11:49.760><c> have</c><00:11:49.920><c> been</c><00:11:50.079><c> posted.</c><00:11:50.480><c> In</c><00:11:50.640><c> other</c>

00:11:50.790 --> 00:11:50.800 align:start position:0%
and receive have been posted. In other
 

00:11:50.800 --> 00:11:53.350 align:start position:0%
and receive have been posted. In other
words,<00:11:51.200><c> when</c><00:11:51.440><c> you</c><00:11:51.680><c> make</c><00:11:51.920><c> a</c><00:11:52.079><c> buffered</c><00:11:52.560><c> send,</c>

00:11:53.350 --> 00:11:53.360 align:start position:0%
words, when you make a buffered send,
 

00:11:53.360 --> 00:11:54.870 align:start position:0%
words, when you make a buffered send,
it's<00:11:53.600><c> like</c><00:11:53.839><c> sending</c><00:11:54.079><c> an</c><00:11:54.240><c> email.</c><00:11:54.560><c> You</c><00:11:54.720><c> just</c>

00:11:54.870 --> 00:11:54.880 align:start position:0%
it's like sending an email. You just
 

00:11:54.880 --> 00:11:56.389 align:start position:0%
it's like sending an email. You just
send<00:11:55.040><c> it</c><00:11:55.120><c> and</c><00:11:55.360><c> then</c><00:11:55.519><c> you</c><00:11:55.680><c> just</c><00:11:55.920><c> fire</c><00:11:56.160><c> and</c>

00:11:56.389 --> 00:11:56.399 align:start position:0%
send it and then you just fire and
 

00:11:56.399 --> 00:11:58.230 align:start position:0%
send it and then you just fire and
forget.<00:11:57.040><c> However,</c><00:11:57.360><c> it's</c><00:11:57.600><c> called</c><00:11:57.760><c> buffered</c>

00:11:58.230 --> 00:11:58.240 align:start position:0%
forget. However, it's called buffered
 

00:11:58.240 --> 00:12:00.870 align:start position:0%
forget. However, it's called buffered
send<00:11:58.880><c> because</c><00:11:59.200><c> to</c><00:11:59.440><c> do</c><00:11:59.519><c> this</c><00:11:59.760><c> fire</c><00:12:00.000><c> and</c><00:12:00.160><c> forget</c>

00:12:00.870 --> 00:12:00.880 align:start position:0%
send because to do this fire and forget
 

00:12:00.880 --> 00:12:03.750 align:start position:0%
send because to do this fire and forget
model,<00:12:01.519><c> MTA</c><00:12:02.079><c> has</c><00:12:02.240><c> to</c><00:12:02.399><c> take</c><00:12:02.560><c> a</c><00:12:02.720><c> copy.</c><00:12:03.279><c> They</c><00:12:03.519><c> just</c>

00:12:03.750 --> 00:12:03.760 align:start position:0%
model, MTA has to take a copy. They just
 

00:12:03.760 --> 00:12:05.670 align:start position:0%
model, MTA has to take a copy. They just
buffered<00:12:04.240><c> somewhere</c><00:12:04.720><c> until</c><00:12:05.040><c> the</c><00:12:05.200><c> receive</c><00:12:05.440><c> is</c>

00:12:05.670 --> 00:12:05.680 align:start position:0%
buffered somewhere until the receive is
 

00:12:05.680 --> 00:12:08.550 align:start position:0%
buffered somewhere until the receive is
posted.<00:12:06.480><c> And</c><00:12:06.720><c> the</c><00:12:07.040><c> reason</c><00:12:08.160><c> it's</c><00:12:08.240><c> a</c><00:12:08.399><c> bit</c>

00:12:08.550 --> 00:12:08.560 align:start position:0%
posted. And the reason it's a bit
 

00:12:08.560 --> 00:12:10.150 align:start position:0%
posted. And the reason it's a bit
technical,<00:12:08.959><c> but</c><00:12:09.200><c> why</c><00:12:09.360><c> people</c><00:12:09.600><c> tend</c><00:12:09.839><c> not</c><00:12:10.000><c> to</c>

00:12:10.150 --> 00:12:10.160 align:start position:0%
technical, but why people tend not to
 

00:12:10.160 --> 00:12:13.110 align:start position:0%
technical, but why people tend not to
use<00:12:10.320><c> buffered</c><00:12:10.800><c> sends</c><00:12:11.120><c> is</c><00:12:12.000><c> uh</c><00:12:12.160><c> buffering</c><00:12:12.800><c> send</c>

00:12:13.110 --> 00:12:13.120 align:start position:0%
use buffered sends is uh buffering send
 

00:12:13.120 --> 00:12:14.870 align:start position:0%
use buffered sends is uh buffering send
fails<00:12:13.360><c> if</c><00:12:13.600><c> insufficient</c><00:12:14.079><c> buffering</c><00:12:14.480><c> space</c><00:12:14.639><c> is</c>

00:12:14.870 --> 00:12:14.880 align:start position:0%
fails if insufficient buffering space is
 

00:12:14.880 --> 00:12:16.629 align:start position:0%
fails if insufficient buffering space is
provided.<00:12:15.279><c> It's</c><00:12:15.519><c> obviously</c><00:12:15.839><c> up</c><00:12:16.079><c> to</c><00:12:16.160><c> the</c><00:12:16.399><c> user</c>

00:12:16.629 --> 00:12:16.639 align:start position:0%
provided. It's obviously up to the user
 

00:12:16.639 --> 00:12:18.470 align:start position:0%
provided. It's obviously up to the user
to<00:12:16.800><c> provide</c><00:12:17.040><c> the</c><00:12:17.200><c> buffering</c><00:12:17.600><c> space.</c><00:12:18.160><c> So</c><00:12:18.320><c> if</c>

00:12:18.470 --> 00:12:18.480 align:start position:0%
to provide the buffering space. So if
 

00:12:18.480 --> 00:12:19.990 align:start position:0%
to provide the buffering space. So if
you<00:12:18.560><c> provide</c><00:12:18.800><c> a</c><00:12:18.959><c> megabyte</c><00:12:19.440><c> of</c><00:12:19.600><c> buffering</c>

00:12:19.990 --> 00:12:20.000 align:start position:0%
you provide a megabyte of buffering
 

00:12:20.000 --> 00:12:22.790 align:start position:0%
you provide a megabyte of buffering
space<00:12:20.480><c> and</c><00:12:20.720><c> try</c><00:12:20.880><c> and</c><00:12:21.040><c> send</c><00:12:21.920><c> 2</c><00:12:22.079><c> megabytes</c><00:12:22.639><c> of</c>

00:12:22.790 --> 00:12:22.800 align:start position:0%
space and try and send 2 megabytes of
 

00:12:22.800 --> 00:12:25.030 align:start position:0%
space and try and send 2 megabytes of
message,<00:12:23.440><c> then</c><00:12:23.760><c> NPI</c><00:12:24.240><c> will</c><00:12:24.480><c> fall</c><00:12:24.639><c> over</c><00:12:24.880><c> and</c>

00:12:25.030 --> 00:12:25.040 align:start position:0%
message, then NPI will fall over and
 

00:12:25.040 --> 00:12:27.190 align:start position:0%
message, then NPI will fall over and
complain.

00:12:27.190 --> 00:12:27.200 align:start position:0%
complain.
 

00:12:27.200 --> 00:12:29.670 align:start position:0%
complain.
Um<00:12:27.920><c> synchronous</c><00:12:28.560><c> is</c><00:12:28.800><c> like</c><00:12:29.040><c> making</c><00:12:29.200><c> a</c><00:12:29.440><c> phone</c>

00:12:29.670 --> 00:12:29.680 align:start position:0%
Um synchronous is like making a phone
 

00:12:29.680 --> 00:12:31.350 align:start position:0%
Um synchronous is like making a phone
call.<00:12:30.320><c> Synchronous</c><00:12:30.800><c> sends</c><00:12:31.040><c> can</c><00:12:31.200><c> only</c>

00:12:31.350 --> 00:12:31.360 align:start position:0%
call. Synchronous sends can only
 

00:12:31.360 --> 00:12:32.550 align:start position:0%
call. Synchronous sends can only
complete<00:12:31.600><c> when</c><00:12:31.680><c> the</c><00:12:31.760><c> matching</c><00:12:32.079><c> receivers</c><00:12:32.399><c> has</c>

00:12:32.550 --> 00:12:32.560 align:start position:0%
complete when the matching receivers has
 

00:12:32.560 --> 00:12:35.829 align:start position:0%
complete when the matching receivers has
been<00:12:32.800><c> posted.</c><00:12:33.440><c> That</c><00:12:33.680><c> in</c><00:12:33.839><c> NPI</c><00:12:34.240><c> is</c><00:12:34.399><c> NPIS</c><00:12:35.120><c> send.</c>

00:12:35.829 --> 00:12:35.839 align:start position:0%
been posted. That in NPI is NPIS send.
 

00:12:35.839 --> 00:12:37.110 align:start position:0%
been posted. That in NPI is NPIS send.
And<00:12:36.000><c> what</c><00:12:36.240><c> that's</c><00:12:36.480><c> like</c><00:12:36.639><c> making</c><00:12:36.800><c> a</c><00:12:36.959><c> phone</c>

00:12:37.110 --> 00:12:37.120 align:start position:0%
And what that's like making a phone
 

00:12:37.120 --> 00:12:38.790 align:start position:0%
And what that's like making a phone
call.<00:12:37.360><c> You</c><00:12:37.519><c> pick</c><00:12:37.600><c> up</c><00:12:37.760><c> the</c><00:12:37.920><c> phone</c><00:12:38.160><c> and</c><00:12:38.399><c> you</c><00:12:38.560><c> wait</c>

00:12:38.790 --> 00:12:38.800 align:start position:0%
call. You pick up the phone and you wait
 

00:12:38.800 --> 00:12:41.190 align:start position:0%
call. You pick up the phone and you wait
on<00:12:39.040><c> the</c><00:12:39.200><c> phone</c><00:12:39.519><c> until</c><00:12:39.839><c> someone</c><00:12:40.639><c> picks</c><00:12:40.880><c> up</c><00:12:41.040><c> at</c>

00:12:41.190 --> 00:12:41.200 align:start position:0%
on the phone until someone picks up at
 

00:12:41.200 --> 00:12:42.949 align:start position:0%
on the phone until someone picks up at
the<00:12:41.360><c> other</c><00:12:41.440><c> end.</c><00:12:41.839><c> You</c><00:12:42.079><c> wait</c><00:12:42.399><c> until</c><00:12:42.800><c> the</c>

00:12:42.949 --> 00:12:42.959 align:start position:0%
the other end. You wait until the
 

00:12:42.959 --> 00:12:47.030 align:start position:0%
the other end. You wait until the
receive<00:12:43.360><c> is</c><00:12:43.600><c> posted.</c><00:12:44.560><c> And</c><00:12:44.880><c> that</c><00:12:45.839><c> um</c><00:12:46.639><c> clearly</c>

00:12:47.030 --> 00:12:47.040 align:start position:0%
receive is posted. And that um clearly
 

00:12:47.040 --> 00:12:51.030 align:start position:0%
receive is posted. And that um clearly
can<00:12:47.200><c> lead</c><00:12:47.360><c> to</c><00:12:47.519><c> deadlock</c><00:12:48.560><c> um</c><00:12:49.120><c> um</c><00:12:49.360><c> but</c><00:12:50.000><c> um</c><00:12:50.639><c> but</c>

00:12:51.030 --> 00:12:51.040 align:start position:0%
can lead to deadlock um um but um but
 

00:12:51.040 --> 00:12:53.509 align:start position:0%
can lead to deadlock um um but um but
does<00:12:51.200><c> not</c><00:12:51.440><c> require</c><00:12:51.839><c> any</c><00:12:52.399><c> copying.</c><00:12:52.959><c> Okay.</c><00:12:53.360><c> So</c>

00:12:53.509 --> 00:12:53.519 align:start position:0%
does not require any copying. Okay. So
 

00:12:53.519 --> 00:12:55.110 align:start position:0%
does not require any copying. Okay. So
you'd<00:12:53.760><c> want</c><00:12:53.920><c> to</c><00:12:54.000><c> do</c><00:12:54.079><c> that</c><00:12:54.240><c> for</c><00:12:54.480><c> large</c><00:12:54.720><c> messages</c>

00:12:55.110 --> 00:12:55.120 align:start position:0%
you'd want to do that for large messages
 

00:12:55.120 --> 00:12:57.670 align:start position:0%
you'd want to do that for large messages
where<00:12:55.279><c> you</c><00:12:55.360><c> might</c><00:12:55.519><c> not</c><00:12:55.680><c> want</c><00:12:55.760><c> to</c><00:12:56.399><c> to</c><00:12:56.720><c> copy</c><00:12:57.519><c> you</c>

00:12:57.670 --> 00:12:57.680 align:start position:0%
where you might not want to to copy you
 

00:12:57.680 --> 00:12:59.590 align:start position:0%
where you might not want to to copy you
might<00:12:57.839><c> not</c><00:12:58.000><c> have</c><00:12:58.240><c> room</c><00:12:58.480><c> to</c><00:12:58.720><c> copy</c><00:12:58.959><c> the</c><00:12:59.200><c> data</c>

00:12:59.590 --> 00:12:59.600 align:start position:0%
might not have room to copy the data
 

00:12:59.600 --> 00:13:02.310 align:start position:0%
might not have room to copy the data
locally.

00:13:02.310 --> 00:13:02.320 align:start position:0%
locally.
 

00:13:02.320 --> 00:13:07.670 align:start position:0%
locally.
Um<00:13:03.279><c> NPL</c><00:13:04.240><c> ready</c><00:13:04.560><c> send</c><00:13:05.120><c> it</c><00:13:05.519><c> it</c><00:13:05.760><c> it's</c><00:13:06.160><c> mad.</c><00:13:07.040><c> Okay.</c>

00:13:07.670 --> 00:13:07.680 align:start position:0%
Um NPL ready send it it it's mad. Okay.
 

00:13:07.680 --> 00:13:10.230 align:start position:0%
Um NPL ready send it it it's mad. Okay.
ready<00:13:08.000><c> send</c><00:13:08.959><c> a</c><00:13:09.120><c> ready</c><00:13:09.440><c> send</c><00:13:09.680><c> which</c><00:13:09.920><c> nobody</c>

00:13:10.230 --> 00:13:10.240 align:start position:0%
ready send a ready send which nobody
 

00:13:10.240 --> 00:13:11.670 align:start position:0%
ready send a ready send which nobody
ever<00:13:10.399><c> uses</c><00:13:10.639><c> and</c><00:13:10.800><c> I</c><00:13:10.959><c> don't</c><00:13:11.040><c> even</c><00:13:11.279><c> mention</c><00:13:11.519><c> it</c>

00:13:11.670 --> 00:13:11.680 align:start position:0%
ever uses and I don't even mention it
 

00:13:11.680 --> 00:13:14.629 align:start position:0%
ever uses and I don't even mention it
anymore<00:13:11.920><c> in</c><00:13:12.240><c> my</c><00:13:12.639><c> um</c><00:13:12.880><c> introductory</c><00:13:13.440><c> course</c><00:13:14.480><c> um</c>

00:13:14.629 --> 00:13:14.639 align:start position:0%
anymore in my um introductory course um
 

00:13:14.639 --> 00:13:17.829 align:start position:0%
anymore in my um introductory course um
is<00:13:14.880><c> it</c><00:13:15.200><c> requires</c><00:13:15.600><c> there</c><00:13:15.920><c> to</c><00:13:16.079><c> have</c><00:13:16.240><c> been</c><00:13:17.120><c> um</c><00:13:17.600><c> a</c>

00:13:17.829 --> 00:13:17.839 align:start position:0%
is it requires there to have been um a
 

00:13:17.839 --> 00:13:20.550 align:start position:0%
is it requires there to have been um a
receive<00:13:18.240><c> already</c><00:13:18.639><c> posted</c>

00:13:20.550 --> 00:13:20.560 align:start position:0%
receive already posted
 

00:13:20.560 --> 00:13:22.470 align:start position:0%
receive already posted
that's<00:13:20.959><c> it's</c><00:13:21.360><c> madness</c><00:13:21.760><c> and</c><00:13:21.920><c> you</c><00:13:22.079><c> should</c><00:13:22.240><c> never</c>

00:13:22.470 --> 00:13:22.480 align:start position:0%
that's it's madness and you should never
 

00:13:22.480 --> 00:13:24.790 align:start position:0%
that's it's madness and you should never
use<00:13:22.639><c> it</c><00:13:23.120><c> um</c><00:13:23.760><c> so</c><00:13:24.000><c> it's</c><00:13:24.240><c> only</c><00:13:24.399><c> there</c><00:13:24.560><c> for</c>

00:13:24.790 --> 00:13:24.800 align:start position:0%
use it um so it's only there for
 

00:13:24.800 --> 00:13:26.870 align:start position:0%
use it um so it's only there for
historical<00:13:25.279><c> reasons</c><00:13:25.680><c> I</c><00:13:25.839><c> think</c><00:13:26.399><c> the</c><00:13:26.639><c> what</c><00:13:26.800><c> I</c>

00:13:26.870 --> 00:13:26.880 align:start position:0%
historical reasons I think the what I
 

00:13:26.880 --> 00:13:28.310 align:start position:0%
historical reasons I think the what I
really<00:13:27.040><c> want</c><00:13:27.200><c> to</c><00:13:27.279><c> constant</c><00:13:27.519><c> here</c><00:13:27.680><c> is</c><00:13:27.920><c> standard</c>

00:13:28.310 --> 00:13:28.320 align:start position:0%
really want to constant here is standard
 

00:13:28.320 --> 00:13:30.710 align:start position:0%
really want to constant here is standard
send<00:13:28.720><c> okay</c><00:13:29.360><c> so</c><00:13:29.680><c> standard</c><00:13:30.079><c> send</c><00:13:30.240><c> is</c><00:13:30.399><c> what</c><00:13:30.560><c> most</c>

00:13:30.710 --> 00:13:30.720 align:start position:0%
send okay so standard send is what most
 

00:13:30.720 --> 00:13:33.350 align:start position:0%
send okay so standard send is what most
people<00:13:30.880><c> use</c><00:13:31.120><c> NPI</c><00:13:31.680><c> send</c><00:13:32.639><c> and</c><00:13:32.959><c> somewhat</c>

00:13:33.350 --> 00:13:33.360 align:start position:0%
people use NPI send and somewhat
 

00:13:33.360 --> 00:13:35.750 align:start position:0%
people use NPI send and somewhat
strangely<00:13:34.560><c> standard</c><00:13:34.959><c> send</c><00:13:35.200><c> can</c><00:13:35.360><c> be</c><00:13:35.519><c> either</c>

00:13:35.750 --> 00:13:35.760 align:start position:0%
strangely standard send can be either
 

00:13:35.760 --> 00:13:37.829 align:start position:0%
strangely standard send can be either
buffered<00:13:36.399><c> or</c><00:13:36.720><c> synchronous</c>

00:13:37.829 --> 00:13:37.839 align:start position:0%
buffered or synchronous
 

00:13:37.839 --> 00:13:39.269 align:start position:0%
buffered or synchronous
depending<00:13:38.160><c> on</c><00:13:38.240><c> the</c><00:13:38.399><c> availability</c><00:13:38.800><c> of</c><00:13:38.959><c> buffer</c>

00:13:39.269 --> 00:13:39.279 align:start position:0%
depending on the availability of buffer
 

00:13:39.279 --> 00:13:42.790 align:start position:0%
depending on the availability of buffer
space.<00:13:39.920><c> And</c><00:13:40.000><c> so</c><00:13:40.320><c> so</c><00:13:40.320><c> so</c><00:13:40.720><c> so</c><00:13:41.519><c> you</c><00:13:41.760><c> might</c><00:13:42.000><c> ask</c><00:13:42.639><c> um</c>

00:13:42.790 --> 00:13:42.800 align:start position:0%
space. And so so so so you might ask um
 

00:13:42.800 --> 00:13:45.750 align:start position:0%
space. And so so so so you might ask um
if<00:13:43.040><c> I</c><00:13:43.200><c> do</c><00:13:43.440><c> standard</c><00:13:43.920><c> send</c><00:13:44.959><c> you</c><00:13:44.959><c> you</c><00:13:45.440><c> think</c><00:13:45.600><c> I</c>

00:13:45.750 --> 00:13:45.760 align:start position:0%
if I do standard send you you think I
 

00:13:45.760 --> 00:13:47.430 align:start position:0%
if I do standard send you you think I
can<00:13:45.920><c> do</c><00:13:46.160><c> I</c><00:13:46.399><c> can</c><00:13:46.480><c> do</c><00:13:46.560><c> explicitly</c><00:13:47.040><c> buffered</c>

00:13:47.430 --> 00:13:47.440 align:start position:0%
can do I can do explicitly buffered
 

00:13:47.440 --> 00:13:50.230 align:start position:0%
can do I can do explicitly buffered
sends<00:13:47.680><c> in</c><00:13:47.839><c> NPI</c><00:13:48.399><c> where</c><00:13:49.120><c> NPI</c><00:13:49.600><c> takes</c><00:13:49.760><c> a</c><00:13:49.920><c> copy</c><00:13:50.079><c> of</c>

00:13:50.230 --> 00:13:50.240 align:start position:0%
sends in NPI where NPI takes a copy of
 

00:13:50.240 --> 00:13:52.230 align:start position:0%
sends in NPI where NPI takes a copy of
the<00:13:50.399><c> message</c><00:13:50.720><c> returns</c><00:13:51.040><c> control</c><00:13:51.360><c> to</c><00:13:51.600><c> me</c><00:13:51.920><c> and</c>

00:13:52.230 --> 00:13:52.240 align:start position:0%
the message returns control to me and
 

00:13:52.240 --> 00:13:53.829 align:start position:0%
the message returns control to me and
delivers<00:13:52.560><c> the</c><00:13:52.800><c> message</c><00:13:53.040><c> sometime</c><00:13:53.440><c> in</c><00:13:53.680><c> the</c>

00:13:53.829 --> 00:13:53.839 align:start position:0%
delivers the message sometime in the
 

00:13:53.839 --> 00:13:56.389 align:start position:0%
delivers the message sometime in the
future.<00:13:54.800><c> I</c><00:13:55.040><c> can</c><00:13:55.120><c> do</c><00:13:55.279><c> explicitly</c><00:13:55.920><c> synchronous</c>

00:13:56.389 --> 00:13:56.399 align:start position:0%
future. I can do explicitly synchronous
 

00:13:56.399 --> 00:13:57.670 align:start position:0%
future. I can do explicitly synchronous
sends<00:13:56.720><c> where</c><00:13:56.800><c> it's</c><00:13:56.959><c> like</c><00:13:57.199><c> making</c><00:13:57.360><c> a</c><00:13:57.519><c> phone</c>

00:13:57.670 --> 00:13:57.680 align:start position:0%
sends where it's like making a phone
 

00:13:57.680 --> 00:14:00.389 align:start position:0%
sends where it's like making a phone
call.<00:13:58.399><c> NPI</c><00:13:58.880><c> synchronous</c><00:13:59.279><c> send</c><00:13:59.519><c> waits</c><00:14:00.079><c> until</c>

00:14:00.389 --> 00:14:00.399 align:start position:0%
call. NPI synchronous send waits until
 

00:14:00.399 --> 00:14:01.829 align:start position:0%
call. NPI synchronous send waits until
the<00:14:00.560><c> receive</c><00:14:00.880><c> is</c><00:14:01.040><c> posted.</c><00:14:01.440><c> There's</c><00:14:01.680><c> no</c>

00:14:01.829 --> 00:14:01.839 align:start position:0%
the receive is posted. There's no
 

00:14:01.839 --> 00:14:03.509 align:start position:0%
the receive is posted. There's no
explicit<00:14:02.240><c> copying</c><00:14:02.639><c> but</c><00:14:02.880><c> does</c><00:14:03.040><c> not</c><00:14:03.199><c> return</c>

00:14:03.509 --> 00:14:03.519 align:start position:0%
explicit copying but does not return
 

00:14:03.519 --> 00:14:06.150 align:start position:0%
explicit copying but does not return
control<00:14:03.920><c> to</c><00:14:04.079><c> me</c><00:14:04.720><c> until</c><00:14:05.199><c> the</c><00:14:05.440><c> receive</c><00:14:05.839><c> has</c><00:14:06.000><c> been</c>

00:14:06.150 --> 00:14:06.160 align:start position:0%
control to me until the receive has been
 

00:14:06.160 --> 00:14:07.590 align:start position:0%
control to me until the receive has been
posted<00:14:06.639><c> in</c><00:14:06.800><c> which</c><00:14:06.959><c> case</c><00:14:07.120><c> I</c><00:14:07.279><c> could</c><00:14:07.440><c> get</c>

00:14:07.590 --> 00:14:07.600 align:start position:0%
posted in which case I could get
 

00:14:07.600 --> 00:14:09.110 align:start position:0%
posted in which case I could get
deadlock<00:14:08.079><c> if</c><00:14:08.240><c> the</c><00:14:08.399><c> receive</c><00:14:08.720><c> was</c><00:14:08.880><c> never</c>

00:14:09.110 --> 00:14:09.120 align:start position:0%
deadlock if the receive was never
 

00:14:09.120 --> 00:14:10.629 align:start position:0%
deadlock if the receive was never
posted.

00:14:10.629 --> 00:14:10.639 align:start position:0%
posted.
 

00:14:10.639 --> 00:14:13.509 align:start position:0%
posted.
The<00:14:11.120><c> the</c><00:14:11.360><c> obvious</c><00:14:11.600><c> question</c><00:14:11.839><c> is</c><00:14:12.160><c> NPI</c><00:14:12.720><c> is</c><00:14:12.959><c> NPI</c>

00:14:13.509 --> 00:14:13.519 align:start position:0%
The the obvious question is NPI is NPI
 

00:14:13.519 --> 00:14:16.150 align:start position:0%
The the obvious question is NPI is NPI
send<00:14:14.240><c> standard</c><00:14:14.720><c> send</c><00:14:15.279><c> buffered</c><00:14:15.839><c> or</c>

00:14:16.150 --> 00:14:16.160 align:start position:0%
send standard send buffered or
 

00:14:16.160 --> 00:14:18.550 align:start position:0%
send standard send buffered or
synchronous?<00:14:17.199><c> Well,</c><00:14:17.680><c> you</c><00:14:17.920><c> don't</c><00:14:18.160><c> know.</c><00:14:18.480><c> And</c>

00:14:18.550 --> 00:14:18.560 align:start position:0%
synchronous? Well, you don't know. And
 

00:14:18.560 --> 00:14:21.430 align:start position:0%
synchronous? Well, you don't know. And
and<00:14:19.040><c> the</c><00:14:19.279><c> logic</c><00:14:19.519><c> is</c><00:14:19.760><c> let</c><00:14:20.079><c> NPI</c><00:14:20.639><c> decide.</c><00:14:21.199><c> That's</c>

00:14:21.430 --> 00:14:21.440 align:start position:0%
and the logic is let NPI decide. That's
 

00:14:21.440 --> 00:14:24.790 align:start position:0%
and the logic is let NPI decide. That's
the<00:14:21.600><c> kind</c><00:14:21.760><c> of</c><00:14:22.399><c> formal</c><00:14:22.880><c> logic.</c><00:14:23.839><c> Don't</c><00:14:24.079><c> tell</c><00:14:24.320><c> NPI</c>

00:14:24.790 --> 00:14:24.800 align:start position:0%
the kind of formal logic. Don't tell NPI
 

00:14:24.800 --> 00:14:26.150 align:start position:0%
the kind of formal logic. Don't tell NPI
whether<00:14:25.040><c> to</c><00:14:25.199><c> do</c><00:14:25.360><c> synchronous</c><00:14:25.839><c> send</c><00:14:26.000><c> or</c>

00:14:26.150 --> 00:14:26.160 align:start position:0%
whether to do synchronous send or
 

00:14:26.160 --> 00:14:28.790 align:start position:0%
whether to do synchronous send or
buffered<00:14:26.639><c> send.</c><00:14:27.199><c> Let</c><00:14:27.440><c> it</c><00:14:27.600><c> decide</c><00:14:28.240><c> and</c><00:14:28.480><c> what</c><00:14:28.639><c> it</c>

00:14:28.790 --> 00:14:28.800 align:start position:0%
buffered send. Let it decide and what it
 

00:14:28.800 --> 00:14:31.670 align:start position:0%
buffered send. Let it decide and what it
thinks<00:14:29.040><c> is</c><00:14:29.279><c> best.</c><00:14:30.320><c> And</c><00:14:30.560><c> what</c><00:14:30.720><c> this</c><00:14:30.880><c> allows</c><00:14:31.199><c> NPI</c>

00:14:31.670 --> 00:14:31.680 align:start position:0%
thinks is best. And what this allows NPI
 

00:14:31.680 --> 00:14:34.069 align:start position:0%
thinks is best. And what this allows NPI
to<00:14:31.839><c> do</c><00:14:31.920><c> in</c><00:14:32.160><c> practice</c><00:14:33.120><c> is</c><00:14:33.360><c> that</c><00:14:33.600><c> for</c><00:14:33.760><c> small</c>

00:14:34.069 --> 00:14:34.079 align:start position:0%
to do in practice is that for small
 

00:14:34.079 --> 00:14:35.910 align:start position:0%
to do in practice is that for small
messages,<00:14:34.560><c> standard</c><00:14:34.959><c> sends</c><00:14:35.279><c> buffered.</c><00:14:35.760><c> It</c>

00:14:35.910 --> 00:14:35.920 align:start position:0%
messages, standard sends buffered. It
 

00:14:35.920 --> 00:14:37.990 align:start position:0%
messages, standard sends buffered. It
takes<00:14:36.079><c> a</c><00:14:36.240><c> copy</c><00:14:36.480><c> and</c><00:14:36.639><c> returns</c><00:14:37.040><c> control</c><00:14:37.360><c> to</c><00:14:37.519><c> you.</c>

00:14:37.990 --> 00:14:38.000 align:start position:0%
takes a copy and returns control to you.
 

00:14:38.000 --> 00:14:40.550 align:start position:0%
takes a copy and returns control to you.
For<00:14:38.240><c> large</c><00:14:38.560><c> messages,</c><00:14:38.959><c> it</c><00:14:39.199><c> is</c><00:14:39.680><c> it</c><00:14:39.920><c> is</c><00:14:40.240><c> becomes</c>

00:14:40.550 --> 00:14:40.560 align:start position:0%
For large messages, it is it is becomes
 

00:14:40.560 --> 00:14:43.350 align:start position:0%
For large messages, it is it is becomes
synchronous<00:14:41.040><c> and</c><00:14:41.279><c> it</c><00:14:41.440><c> waits</c><00:14:42.240><c> for</c><00:14:42.880><c> it</c><00:14:43.120><c> says</c>

00:14:43.350 --> 00:14:43.360 align:start position:0%
synchronous and it waits for it says
 

00:14:43.360 --> 00:14:45.350 align:start position:0%
synchronous and it waits for it says
well<00:14:43.519><c> I</c><00:14:44.000><c> I'd</c><00:14:44.240><c> like</c><00:14:44.320><c> to</c><00:14:44.480><c> be</c><00:14:44.639><c> buffered</c><00:14:45.040><c> basically</c>

00:14:45.350 --> 00:14:45.360 align:start position:0%
well I I'd like to be buffered basically
 

00:14:45.360 --> 00:14:47.590 align:start position:0%
well I I'd like to be buffered basically
because<00:14:45.600><c> that's</c><00:14:45.839><c> nice.</c><00:14:46.399><c> It</c><00:14:46.560><c> means</c><00:14:46.720><c> that</c><00:14:46.959><c> the</c>

00:14:47.590 --> 00:14:47.600 align:start position:0%
because that's nice. It means that the
 

00:14:47.600 --> 00:14:49.990 align:start position:0%
because that's nice. It means that the
the<00:14:47.839><c> sender</c><00:14:48.320><c> can</c><00:14:48.480><c> get</c><00:14:48.639><c> on</c><00:14:49.279><c> uh</c><00:14:49.440><c> doing</c><00:14:49.680><c> other</c>

00:14:49.990 --> 00:14:50.000 align:start position:0%
the sender can get on uh doing other
 

00:14:50.000 --> 00:14:54.310 align:start position:0%
the sender can get on uh doing other
stuff<00:14:50.240><c> straight</c><00:14:50.560><c> away.</c><00:14:51.519><c> Uh</c><00:14:51.920><c> but</c><00:14:52.720><c> um</c><00:14:53.839><c> maybe</c><00:14:54.079><c> I</c>

00:14:54.310 --> 00:14:54.320 align:start position:0%
stuff straight away. Uh but um maybe I
 

00:14:54.320 --> 00:14:56.069 align:start position:0%
stuff straight away. Uh but um maybe I
don't<00:14:54.399><c> have</c><00:14:54.480><c> enough</c><00:14:54.720><c> buffer</c><00:14:55.040><c> space</c><00:14:55.600><c> and</c><00:14:55.839><c> so</c><00:14:55.920><c> if</c>

00:14:56.069 --> 00:14:56.079 align:start position:0%
don't have enough buffer space and so if
 

00:14:56.079 --> 00:14:57.350 align:start position:0%
don't have enough buffer space and so if
I<00:14:56.240><c> don't</c><00:14:56.320><c> have</c><00:14:56.399><c> enough</c><00:14:56.720><c> buffer</c><00:14:57.040><c> space,</c><00:14:57.199><c> I</c>

00:14:57.350 --> 00:14:57.360 align:start position:0%
I don't have enough buffer space, I
 

00:14:57.360 --> 00:14:58.949 align:start position:0%
I don't have enough buffer space, I
won't<00:14:57.519><c> buffer</c><00:14:57.760><c> the</c><00:14:57.920><c> message.</c><00:14:58.240><c> I</c><00:14:58.399><c> will</c><00:14:58.639><c> become</c>

00:14:58.949 --> 00:14:58.959 align:start position:0%
won't buffer the message. I will become
 

00:14:58.959 --> 00:15:00.150 align:start position:0%
won't buffer the message. I will become
synchronous.<00:14:59.360><c> I'll</c><00:14:59.600><c> wait</c><00:14:59.680><c> for</c><00:14:59.839><c> the</c><00:14:59.920><c> receipt</c>

00:15:00.150 --> 00:15:00.160 align:start position:0%
synchronous. I'll wait for the receipt
 

00:15:00.160 --> 00:15:06.389 align:start position:0%
synchronous. I'll wait for the receipt
to<00:15:00.320><c> be</c><00:15:00.480><c> posted.</c><00:15:01.680><c> So</c><00:15:02.320><c> um</c><00:15:03.600><c> so</c><00:15:05.040><c> you</c><00:15:05.360><c> should</c><00:15:05.519><c> not</c>

00:15:06.389 --> 00:15:06.399 align:start position:0%
to be posted. So um so you should not
 

00:15:06.399 --> 00:15:10.150 align:start position:0%
to be posted. So um so you should not
assume<00:15:07.040><c> when</c><00:15:07.279><c> you</c><00:15:07.600><c> issue</c><00:15:08.079><c> an</c><00:15:08.240><c> MPI</c><00:15:08.800><c> send</c><00:15:09.600><c> okay</c>

00:15:10.150 --> 00:15:10.160 align:start position:0%
assume when you issue an MPI send okay
 

00:15:10.160 --> 00:15:11.829 align:start position:0%
assume when you issue an MPI send okay
you<00:15:10.320><c> should</c><00:15:10.560><c> not</c><00:15:10.800><c> assume</c><00:15:11.120><c> that</c><00:15:11.279><c> buffering</c>

00:15:11.829 --> 00:15:11.839 align:start position:0%
you should not assume that buffering
 

00:15:11.839 --> 00:15:14.470 align:start position:0%
you should not assume that buffering
takes<00:15:12.160><c> place</c><00:15:13.519><c> but</c><00:15:13.760><c> you</c><00:15:13.920><c> should</c><00:15:14.000><c> also</c><00:15:14.240><c> not</c>

00:15:14.470 --> 00:15:14.480 align:start position:0%
takes place but you should also not
 

00:15:14.480 --> 00:15:16.389 align:start position:0%
takes place but you should also not
assume<00:15:14.720><c> that</c><00:15:14.880><c> it</c><00:15:15.040><c> doesn't</c><00:15:15.279><c> take</c><00:15:15.519><c> place</c><00:15:16.240><c> you</c>

00:15:16.389 --> 00:15:16.399 align:start position:0%
assume that it doesn't take place you
 

00:15:16.399 --> 00:15:17.829 align:start position:0%
assume that it doesn't take place you
should<00:15:16.560><c> not</c><00:15:16.720><c> assume</c><00:15:16.959><c> that</c><00:15:17.120><c> if</c><00:15:17.440><c> when</c><00:15:17.680><c> the</c>

00:15:17.829 --> 00:15:17.839 align:start position:0%
should not assume that if when the
 

00:15:17.839 --> 00:15:19.430 align:start position:0%
should not assume that if when the
standard<00:15:18.240><c> send</c><00:15:18.480><c> returns</c><00:15:18.959><c> you</c><00:15:19.120><c> don't</c><00:15:19.199><c> know</c><00:15:19.279><c> if</c>

00:15:19.430 --> 00:15:19.440 align:start position:0%
standard send returns you don't know if
 

00:15:19.440 --> 00:15:20.949 align:start position:0%
standard send returns you don't know if
the<00:15:19.600><c> message</c><00:15:19.760><c> has</c><00:15:20.000><c> been</c><00:15:20.079><c> received</c><00:15:20.399><c> or</c><00:15:20.560><c> not</c><00:15:20.800><c> it</c>

00:15:20.949 --> 00:15:20.959 align:start position:0%
the message has been received or not it
 

00:15:20.959 --> 00:15:24.310 align:start position:0%
the message has been received or not it
might<00:15:21.839><c> not</c><00:15:22.720><c> and</c><00:15:22.959><c> this</c><00:15:23.120><c> is</c><00:15:23.440><c> NPI</c><00:15:23.920><c> trying</c><00:15:24.079><c> to</c><00:15:24.160><c> be</c>

00:15:24.310 --> 00:15:24.320 align:start position:0%
might not and this is NPI trying to be
 

00:15:24.320 --> 00:15:25.990 align:start position:0%
might not and this is NPI trying to be
helpful<00:15:24.480><c> but</c><00:15:24.720><c> it</c><00:15:24.880><c> does</c><00:15:25.040><c> cause</c><00:15:25.279><c> a</c><00:15:25.519><c> lot</c><00:15:25.680><c> of</c>

00:15:25.990 --> 00:15:26.000 align:start position:0%
helpful but it does cause a lot of
 

00:15:26.000 --> 00:15:27.990 align:start position:0%
helpful but it does cause a lot of
confusion

00:15:27.990 --> 00:15:28.000 align:start position:0%
confusion
 

00:15:28.000 --> 00:15:30.949 align:start position:0%
confusion
and<00:15:28.240><c> so</c><00:15:28.800><c> uh</c><00:15:29.120><c> we'll</c><00:15:29.360><c> come</c><00:15:29.519><c> back</c><00:15:29.760><c> to</c><00:15:30.000><c> how</c><00:15:30.240><c> that</c><00:15:30.560><c> is</c>

00:15:30.949 --> 00:15:30.959 align:start position:0%
and so uh we'll come back to how that is
 

00:15:30.959 --> 00:15:32.710 align:start position:0%
and so uh we'll come back to how that is
actually<00:15:31.360><c> translate</c><00:15:31.760><c> into</c><00:15:32.000><c> what</c><00:15:32.160><c> NPI</c><00:15:32.560><c> does</c>

00:15:32.710 --> 00:15:32.720 align:start position:0%
actually translate into what NPI does
 

00:15:32.720 --> 00:15:34.629 align:start position:0%
actually translate into what NPI does
under<00:15:32.880><c> the</c><00:15:33.040><c> hood.</c><00:15:33.760><c> Another</c><00:15:34.240><c> few</c><00:15:34.399><c> things</c><00:15:34.560><c> which</c>

00:15:34.629 --> 00:15:34.639 align:start position:0%
under the hood. Another few things which
 

00:15:34.639 --> 00:15:36.230 align:start position:0%
under the hood. Another few things which
you<00:15:34.800><c> may</c><00:15:34.959><c> never</c><00:15:35.120><c> have</c><00:15:35.279><c> thought</c><00:15:35.519><c> of</c><00:15:35.680><c> but</c><00:15:35.920><c> which</c>

00:15:36.230 --> 00:15:36.240 align:start position:0%
you may never have thought of but which
 

00:15:36.240 --> 00:15:40.710 align:start position:0%
you may never have thought of but which
actually<00:15:37.040><c> um</c><00:15:38.480><c> um</c><00:15:39.120><c> affect</c><00:15:39.600><c> how</c><00:15:39.839><c> NPI</c><00:15:40.480><c> is</c>

00:15:40.710 --> 00:15:40.720 align:start position:0%
actually um um affect how NPI is
 

00:15:40.720 --> 00:15:44.230 align:start position:0%
actually um um affect how NPI is
implemented.<00:15:41.920><c> NPI</c><00:15:42.399><c> requires</c><00:15:42.880><c> ordering</c>

00:15:44.230 --> 00:15:44.240 align:start position:0%
implemented. NPI requires ordering
 

00:15:44.240 --> 00:15:45.750 align:start position:0%
implemented. NPI requires ordering
message<00:15:44.560><c> sent</c><00:15:44.800><c> between</c><00:15:44.959><c> two</c><00:15:45.120><c> endpoints</c><00:15:45.519><c> must</c>

00:15:45.750 --> 00:15:45.760 align:start position:0%
message sent between two endpoints must
 

00:15:45.760 --> 00:15:47.829 align:start position:0%
message sent between two endpoints must
be<00:15:45.839><c> non-overtaking.</c>

00:15:47.829 --> 00:15:47.839 align:start position:0%
be non-overtaking.
 

00:15:47.839 --> 00:15:51.509 align:start position:0%
be non-overtaking.
um<00:15:48.320><c> that</c><00:15:49.120><c> actually</c><00:15:49.440><c> is</c><00:15:50.399><c> it's</c><00:15:50.639><c> it's</c><00:15:50.800><c> it's</c>

00:15:51.509 --> 00:15:51.519 align:start position:0%
um that actually is it's it's it's
 

00:15:51.519 --> 00:15:53.030 align:start position:0%
um that actually is it's it's it's
interest<00:15:52.079><c> you</c><00:15:52.079><c> you</c><00:15:52.320><c> never</c><00:15:52.639><c> really</c><00:15:52.880><c> think</c>

00:15:53.030 --> 00:15:53.040 align:start position:0%
interest you you never really think
 

00:15:53.040 --> 00:15:54.949 align:start position:0%
interest you you never really think
about<00:15:53.199><c> that</c><00:15:53.360><c> but</c><00:15:53.600><c> if</c><00:15:53.759><c> NPI</c><00:15:54.240><c> messages</c><00:15:54.560><c> were</c><00:15:54.720><c> not</c>

00:15:54.949 --> 00:15:54.959 align:start position:0%
about that but if NPI messages were not
 

00:15:54.959 --> 00:15:56.470 align:start position:0%
about that but if NPI messages were not
ordered<00:15:55.680><c> then</c><00:15:55.839><c> it</c><00:15:56.000><c> would</c><00:15:56.079><c> be</c><00:15:56.160><c> almost</c>

00:15:56.470 --> 00:15:56.480 align:start position:0%
ordered then it would be almost
 

00:15:56.480 --> 00:15:58.710 align:start position:0%
ordered then it would be almost
impossible<00:15:56.800><c> to</c><00:15:56.959><c> write</c><00:15:57.199><c> a</c><00:15:57.519><c> correct</c><00:15:58.079><c> program</c>

00:15:58.710 --> 00:15:58.720 align:start position:0%
impossible to write a correct program
 

00:15:58.720 --> 00:16:00.150 align:start position:0%
impossible to write a correct program
because<00:15:58.959><c> you'd</c><00:15:59.199><c> send</c><00:15:59.360><c> a</c><00:15:59.519><c> message</c><00:15:59.759><c> with</c><00:16:00.000><c> some</c>

00:16:00.150 --> 00:16:00.160 align:start position:0%
because you'd send a message with some
 

00:16:00.160 --> 00:16:02.389 align:start position:0%
because you'd send a message with some
data<00:16:00.720><c> send</c><00:16:00.959><c> another</c><00:16:01.279><c> message</c><00:16:01.519><c> which</c><00:16:01.759><c> says</c><00:16:02.240><c> uh</c>

00:16:02.389 --> 00:16:02.399 align:start position:0%
data send another message which says uh
 

00:16:02.399 --> 00:16:04.550 align:start position:0%
data send another message which says uh
I'm<00:16:02.639><c> finished</c><00:16:03.360><c> and</c><00:16:03.600><c> the</c><00:16:03.839><c> I'm</c><00:16:04.079><c> finished</c>

00:16:04.550 --> 00:16:04.560 align:start position:0%
I'm finished and the I'm finished
 

00:16:04.560 --> 00:16:06.470 align:start position:0%
I'm finished and the I'm finished
message<00:16:04.959><c> might</c><00:16:05.120><c> overtake</c><00:16:05.519><c> the</c><00:16:05.759><c> Houston</c><00:16:06.160><c> data</c>

00:16:06.470 --> 00:16:06.480 align:start position:0%
message might overtake the Houston data
 

00:16:06.480 --> 00:16:09.189 align:start position:0%
message might overtake the Houston data
message.<00:16:07.199><c> So</c><00:16:07.680><c> um</c><00:16:08.160><c> that</c><00:16:08.480><c> actually</c><00:16:08.720><c> is</c><00:16:08.959><c> quite</c>

00:16:09.189 --> 00:16:09.199 align:start position:0%
message. So um that actually is quite
 

00:16:09.199 --> 00:16:11.350 align:start position:0%
message. So um that actually is quite
important.<00:16:09.920><c> Um</c><00:16:10.240><c> we</c><00:16:10.480><c> often</c><00:16:10.720><c> don't</c><00:16:10.959><c> think</c><00:16:11.120><c> about</c>

00:16:11.350 --> 00:16:11.360 align:start position:0%
important. Um we often don't think about
 

00:16:11.360 --> 00:16:13.829 align:start position:0%
important. Um we often don't think about
it.<00:16:11.920><c> Fairness</c><00:16:12.639><c> NPI</c><00:16:13.120><c> does</c><00:16:13.279><c> not</c><00:16:13.440><c> guarantee</c>

00:16:13.829 --> 00:16:13.839 align:start position:0%
it. Fairness NPI does not guarantee
 

00:16:13.839 --> 00:16:15.509 align:start position:0%
it. Fairness NPI does not guarantee
fairness.<00:16:14.399><c> Fairness</c><00:16:14.800><c> means</c><00:16:15.040><c> for</c><00:16:15.120><c> example</c><00:16:15.360><c> if</c>

00:16:15.509 --> 00:16:15.519 align:start position:0%
fairness. Fairness means for example if
 

00:16:15.519 --> 00:16:18.389 align:start position:0%
fairness. Fairness means for example if
I<00:16:15.680><c> issue</c><00:16:15.920><c> a</c><00:16:16.079><c> receive</c><00:16:16.320><c> from</c><00:16:16.480><c> NPI</c><00:16:17.040><c> any</c><00:16:17.199><c> source</c><00:16:18.160><c> it</c>

00:16:18.389 --> 00:16:18.399 align:start position:0%
I issue a receive from NPI any source it
 

00:16:18.399 --> 00:16:21.910 align:start position:0%
I issue a receive from NPI any source it
will<00:16:18.720><c> receive</c><00:16:19.120><c> messages</c><00:16:20.480><c> from</c><00:16:21.279><c> equally</c><00:16:21.680><c> from</c>

00:16:21.910 --> 00:16:21.920 align:start position:0%
will receive messages from equally from
 

00:16:21.920 --> 00:16:23.910 align:start position:0%
will receive messages from equally from
all<00:16:22.160><c> senders.</c><00:16:22.800><c> Of</c><00:16:22.959><c> course</c><00:16:23.120><c> it</c><00:16:23.279><c> might</c><00:16:23.519><c> it</c><00:16:23.680><c> might</c>

00:16:23.910 --> 00:16:23.920 align:start position:0%
all senders. Of course it might it might
 

00:16:23.920 --> 00:16:25.749 align:start position:0%
all senders. Of course it might it might
preferentially<00:16:24.639><c> always</c><00:16:24.959><c> receive</c><00:16:25.279><c> from</c><00:16:25.440><c> from</c>

00:16:25.749 --> 00:16:25.759 align:start position:0%
preferentially always receive from from
 

00:16:25.759 --> 00:16:29.670 align:start position:0%
preferentially always receive from from
rank<00:16:26.079><c> zero.</c><00:16:27.040><c> Um</c><00:16:28.160><c> so</c><00:16:28.480><c> okay</c><00:16:28.720><c> so</c><00:16:28.959><c> message</c><00:16:29.360><c> times</c>

00:16:29.670 --> 00:16:29.680 align:start position:0%
rank zero. Um so okay so message times
 

00:16:29.680 --> 00:16:32.949 align:start position:0%
rank zero. Um so okay so message times
help<00:16:29.839><c> by</c><00:16:30.000><c> ordering.</c><00:16:30.399><c> So</c><00:16:30.639><c> yet</c><00:16:30.880><c> so</c><00:16:31.120><c> in</c><00:16:31.440><c> in</c><00:16:32.399><c> older</c>

00:16:32.949 --> 00:16:32.959 align:start position:0%
help by ordering. So yet so in in older
 

00:16:32.959 --> 00:16:35.350 align:start position:0%
help by ordering. So yet so in in older
message<00:16:33.360><c> passing</c><00:16:33.839><c> systems</c><00:16:34.639><c> a</c><00:16:34.880><c> message</c>

00:16:35.350 --> 00:16:35.360 align:start position:0%
message passing systems a message
 

00:16:35.360 --> 00:16:36.790 align:start position:0%
message passing systems a message
because<00:16:35.600><c> remember</c><00:16:35.920><c> message</c><00:16:36.160><c> ordering</c><00:16:36.480><c> is</c><00:16:36.639><c> not</c>

00:16:36.790 --> 00:16:36.800 align:start position:0%
because remember message ordering is not
 

00:16:36.800 --> 00:16:37.990 align:start position:0%
because remember message ordering is not
guaranteed<00:16:37.120><c> at</c><00:16:37.279><c> the</c><00:16:37.360><c> hardware</c><00:16:37.680><c> level</c><00:16:37.839><c> but</c>

00:16:37.990 --> 00:16:38.000 align:start position:0%
guaranteed at the hardware level but
 

00:16:38.000 --> 00:16:39.350 align:start position:0%
guaranteed at the hardware level but
when<00:16:38.160><c> you</c><00:16:38.240><c> send</c><00:16:38.320><c> a</c><00:16:38.480><c> message</c><00:16:38.720><c> over</c><00:16:38.880><c> a</c><00:16:39.040><c> modern</c>

00:16:39.350 --> 00:16:39.360 align:start position:0%
when you send a message over a modern
 

00:16:39.360 --> 00:16:40.870 align:start position:0%
when you send a message over a modern
network<00:16:39.759><c> it's</c><00:16:40.079><c> been</c><00:16:40.240><c> the</c><00:16:40.399><c> package</c><00:16:40.720><c> the</c>

00:16:40.870 --> 00:16:40.880 align:start position:0%
network it's been the package the
 

00:16:40.880 --> 00:16:44.470 align:start position:0%
network it's been the package the
packets<00:16:41.199><c> take</c><00:16:41.519><c> different</c><00:16:42.800><c> um</c><00:16:43.920><c> routes</c><00:16:44.240><c> and</c>

00:16:44.470 --> 00:16:44.480 align:start position:0%
packets take different um routes and
 

00:16:44.480 --> 00:16:47.110 align:start position:0%
packets take different um routes and
reassemble<00:16:44.959><c> at</c><00:16:45.120><c> the</c><00:16:45.199><c> other</c><00:16:45.360><c> side</c><00:16:46.240><c> and</c><00:16:46.800><c> early</c>

00:16:47.110 --> 00:16:47.120 align:start position:0%
reassemble at the other side and early
 

00:16:47.120 --> 00:16:48.710 align:start position:0%
reassemble at the other side and early
message<00:16:47.440><c> passing</c><00:16:47.759><c> liies</c><00:16:48.079><c> often</c><00:16:48.320><c> didn't</c>

00:16:48.710 --> 00:16:48.720 align:start position:0%
message passing liies often didn't
 

00:16:48.720 --> 00:16:51.749 align:start position:0%
message passing liies often didn't
didn't<00:16:49.839><c> enforce</c><00:16:50.320><c> message</c><00:16:50.720><c> ordering</c><00:16:51.199><c> and</c><00:16:51.440><c> so</c>

00:16:51.749 --> 00:16:51.759 align:start position:0%
didn't enforce message ordering and so
 

00:16:51.759 --> 00:16:55.110 align:start position:0%
didn't enforce message ordering and so
people<00:16:52.000><c> would</c><00:16:52.240><c> tag</c><00:16:52.560><c> the</c><00:16:52.720><c> messages</c><00:16:53.279><c> themselves</c>

00:16:55.110 --> 00:16:55.120 align:start position:0%
people would tag the messages themselves
 

00:16:55.120 --> 00:16:57.670 align:start position:0%
people would tag the messages themselves
however<00:16:56.079><c> I</c><00:16:56.320><c> very</c><00:16:56.639><c> rarely</c><00:16:56.959><c> you</c><00:16:57.120><c> very</c><00:16:57.360><c> rarely</c>

00:16:57.670 --> 00:16:57.680 align:start position:0%
however I very rarely you very rarely
 

00:16:57.680 --> 00:16:59.430 align:start position:0%
however I very rarely you very rarely
need<00:16:57.920><c> tags</c><00:16:58.399><c> and</c><00:16:58.560><c> the</c><00:16:58.800><c> reason</c><00:16:58.880><c> you</c><00:16:59.120><c> don't</c><00:16:59.279><c> need</c>

00:16:59.430 --> 00:16:59.440 align:start position:0%
need tags and the reason you don't need
 

00:16:59.440 --> 00:17:01.030 align:start position:0%
need tags and the reason you don't need
tags<00:16:59.839><c> is</c><00:17:00.079><c> because</c><00:17:00.240><c> the</c><00:17:00.399><c> messages</c><00:17:00.880><c> are</c>

00:17:01.030 --> 00:17:01.040 align:start position:0%
tags is because the messages are
 

00:17:01.040 --> 00:17:03.350 align:start position:0%
tags is because the messages are
ordered.<00:17:02.000><c> So</c><00:17:02.160><c> if</c><00:17:02.320><c> you</c><00:17:02.399><c> do</c><00:17:02.720><c> if</c><00:17:02.880><c> you</c><00:17:02.959><c> do</c><00:17:03.120><c> two</c>

00:17:03.350 --> 00:17:03.360 align:start position:0%
ordered. So if you do if you do two
 

00:17:03.360 --> 00:17:05.189 align:start position:0%
ordered. So if you do if you do two
sends<00:17:03.600><c> and</c><00:17:03.839><c> two</c><00:17:04.000><c> receives</c><00:17:04.480><c> will</c><00:17:04.720><c> match</c><00:17:04.880><c> in</c><00:17:05.039><c> the</c>

00:17:05.189 --> 00:17:05.199 align:start position:0%
sends and two receives will match in the
 

00:17:05.199 --> 00:17:09.029 align:start position:0%
sends and two receives will match in the
order<00:17:05.360><c> they</c><00:17:05.520><c> were</c><00:17:05.679><c> sent.</c><00:17:06.160><c> So</c><00:17:06.480><c> actually</c><00:17:07.520><c> um</c><00:17:08.880><c> you</c>

00:17:09.029 --> 00:17:09.039 align:start position:0%
order they were sent. So actually um you
 

00:17:09.039 --> 00:17:11.510 align:start position:0%
order they were sent. So actually um you
you<00:17:09.360><c> could</c><00:17:09.600><c> use</c><00:17:09.839><c> tags</c>

00:17:11.510 --> 00:17:11.520 align:start position:0%
you could use tags
 

00:17:11.520 --> 00:17:13.590 align:start position:0%
you could use tags
but<00:17:11.760><c> often</c><00:17:12.160><c> you</c><00:17:12.400><c> don't</c><00:17:12.559><c> need</c><00:17:12.720><c> to</c><00:17:12.959><c> if</c><00:17:13.199><c> you</c><00:17:13.360><c> if</c>

00:17:13.590 --> 00:17:13.600 align:start position:0%
but often you don't need to if you if
 

00:17:13.600 --> 00:17:15.189 align:start position:0%
but often you don't need to if you if
you<00:17:13.679><c> know</c><00:17:13.760><c> the</c><00:17:14.000><c> messages</c><00:17:14.319><c> are</c><00:17:14.400><c> ordered.</c><00:17:14.959><c> I'll</c>

00:17:15.189 --> 00:17:15.199 align:start position:0%
you know the messages are ordered. I'll
 

00:17:15.199 --> 00:17:16.870 align:start position:0%
you know the messages are ordered. I'll
cover<00:17:15.600><c> have</c><00:17:15.679><c> an</c><00:17:15.839><c> example</c><00:17:16.240><c> like</c><00:17:16.400><c> later</c><00:17:16.559><c> on</c>

00:17:16.870 --> 00:17:16.880 align:start position:0%
cover have an example like later on
 

00:17:16.880 --> 00:17:20.870 align:start position:0%
cover have an example like later on
maybe<00:17:18.079><c> maybe</c><00:17:18.640><c> illustrates</c><00:17:19.039><c> that.</c><00:17:20.240><c> But</c><00:17:20.400><c> yes</c>

00:17:20.870 --> 00:17:20.880 align:start position:0%
maybe maybe illustrates that. But yes
 

00:17:20.880 --> 00:17:22.630 align:start position:0%
maybe maybe illustrates that. But yes
tags<00:17:21.360><c> can</c><00:17:21.520><c> help</c><00:17:21.679><c> the</c><00:17:21.919><c> ordering</c><00:17:22.240><c> but</c><00:17:22.480><c> in</c>

00:17:22.630 --> 00:17:22.640 align:start position:0%
tags can help the ordering but in
 

00:17:22.640 --> 00:17:24.309 align:start position:0%
tags can help the ordering but in
practice<00:17:23.120><c> you</c><00:17:23.360><c> often</c><00:17:23.679><c> don't</c><00:17:23.839><c> need</c><00:17:23.919><c> them.</c><00:17:24.160><c> If</c>

00:17:24.309 --> 00:17:24.319 align:start position:0%
practice you often don't need them. If
 

00:17:24.319 --> 00:17:25.909 align:start position:0%
practice you often don't need them. If
you<00:17:24.480><c> know</c><00:17:24.559><c> them,</c><00:17:24.880><c> if</c><00:17:25.039><c> you</c><00:17:25.199><c> if</c><00:17:25.439><c> you</c><00:17:25.600><c> understand</c>

00:17:25.909 --> 00:17:25.919 align:start position:0%
you know them, if you if you understand
 

00:17:25.919 --> 00:17:27.750 align:start position:0%
you know them, if you if you understand
the<00:17:26.160><c> messages</c><00:17:26.480><c> are</c><00:17:26.720><c> ordered,</c><00:17:27.280><c> then</c><00:17:27.520><c> you</c><00:17:27.679><c> don't</c>

00:17:27.750 --> 00:17:27.760 align:start position:0%
the messages are ordered, then you don't
 

00:17:27.760 --> 00:17:29.430 align:start position:0%
the messages are ordered, then you don't
need<00:17:28.000><c> tags</c><00:17:28.400><c> because</c><00:17:28.640><c> you</c><00:17:28.799><c> have</c><00:17:28.880><c> a</c><00:17:29.039><c> guarantee</c>

00:17:29.430 --> 00:17:29.440 align:start position:0%
need tags because you have a guarantee
 

00:17:29.440 --> 00:17:32.230 align:start position:0%
need tags because you have a guarantee
of<00:17:29.600><c> what</c><00:17:29.760><c> order</c><00:17:30.000><c> they</c><00:17:30.559><c> they</c><00:17:31.039><c> arrive</c><00:17:31.360><c> in</c><00:17:31.840><c> or</c><00:17:32.080><c> or</c>

00:17:32.230 --> 00:17:32.240 align:start position:0%
of what order they they arrive in or or
 

00:17:32.240 --> 00:17:33.430 align:start position:0%
of what order they they arrive in or or
what<00:17:32.400><c> order</c><00:17:32.559><c> they'll</c><00:17:32.799><c> be</c><00:17:32.960><c> received</c><00:17:33.280><c> in</c>

00:17:33.430 --> 00:17:33.440 align:start position:0%
what order they'll be received in
 

00:17:33.440 --> 00:17:37.830 align:start position:0%
what order they'll be received in
regards<00:17:33.760><c> to</c><00:17:33.919><c> the</c><00:17:34.160><c> tag.</c><00:17:35.200><c> Um</c>

00:17:37.830 --> 00:17:37.840 align:start position:0%
regards to the tag. Um
 

00:17:37.840 --> 00:17:41.510 align:start position:0%
regards to the tag. Um
so<00:17:38.480><c> um</c><00:17:39.520><c> the</c><00:17:39.760><c> buff</c><00:17:40.480><c> the</c><00:17:40.720><c> exercise</c><00:17:41.120><c> we're</c><00:17:41.360><c> going</c>

00:17:41.510 --> 00:17:41.520 align:start position:0%
so um the buff the exercise we're going
 

00:17:41.520 --> 00:17:44.070 align:start position:0%
so um the buff the exercise we're going
to<00:17:41.679><c> do</c><00:17:42.000><c> after</c><00:17:42.400><c> lunch</c><00:17:42.640><c> will</c><00:17:42.880><c> allow</c><00:17:43.120><c> us</c><00:17:43.280><c> to</c><00:17:43.520><c> to</c><00:17:43.600><c> to</c>

00:17:44.070 --> 00:17:44.080 align:start position:0%
to do after lunch will allow us to to to
 

00:17:44.080 --> 00:17:48.549 align:start position:0%
to do after lunch will allow us to to to
to<00:17:44.880><c> uh</c><00:17:45.760><c> in</c><00:17:46.240><c> will</c><00:17:46.480><c> allow</c><00:17:46.720><c> us</c><00:17:46.880><c> to</c><00:17:47.039><c> infer</c><00:17:47.440><c> that</c><00:17:48.240><c> it</c>

00:17:48.549 --> 00:17:48.559 align:start position:0%
to uh in will allow us to infer that it
 

00:17:48.559 --> 00:17:51.350 align:start position:0%
to uh in will allow us to infer that it
can<00:17:48.799><c> be</c><00:17:48.960><c> configured</c><00:17:50.080><c> u</c><00:17:50.240><c> by</c><00:17:50.640><c> there</c><00:17:50.880><c> will</c><00:17:51.200><c> be</c>

00:17:51.350 --> 00:17:51.360 align:start position:0%
can be configured u by there will be
 

00:17:51.360 --> 00:17:56.070 align:start position:0%
can be configured u by there will be
some<00:17:51.679><c> magic</c><00:17:52.080><c> environment</c><00:17:52.559><c> variable</c><00:17:53.200><c> MPI</c>

00:17:56.070 --> 00:17:56.080 align:start position:0%
some magic environment variable MPI
 

00:17:56.080 --> 00:17:58.950 align:start position:0%
some magic environment variable MPI
eager<00:17:56.480><c> limit</c><00:17:56.799><c> or</c><00:17:57.280><c> it's</c><00:17:57.679><c> probably</c><00:17:58.000><c> about</c><00:17:58.320><c> 10</c><00:17:58.640><c> k</c>

00:17:58.950 --> 00:17:58.960 align:start position:0%
eager limit or it's probably about 10 k
 

00:17:58.960 --> 00:18:03.510 align:start position:0%
eager limit or it's probably about 10 k
10<00:17:59.200><c> kilobytes</c><00:18:00.480><c> something</c><00:18:00.960><c> like</c><00:18:01.280><c> that</c>

00:18:03.510 --> 00:18:03.520 align:start position:0%
10 kilobytes something like that
 

00:18:03.520 --> 00:18:05.830 align:start position:0%
10 kilobytes something like that
a<00:18:03.760><c> few</c><00:18:03.919><c> tens</c><00:18:04.160><c> of</c><00:18:04.320><c> kilobytes</c><00:18:05.039><c> is</c><00:18:05.360><c> sort</c><00:18:05.600><c> of</c><00:18:05.679><c> a</c>

00:18:05.830 --> 00:18:05.840 align:start position:0%
a few tens of kilobytes is sort of a
 

00:18:05.840 --> 00:18:09.029 align:start position:0%
a few tens of kilobytes is sort of a
standard<00:18:06.240><c> figure.</c><00:18:07.280><c> Um</c><00:18:07.919><c> it</c><00:18:08.160><c> it</c><00:18:08.640><c> can</c><00:18:08.880><c> be</c>

00:18:09.029 --> 00:18:09.039 align:start position:0%
standard figure. Um it it can be
 

00:18:09.039 --> 00:18:11.190 align:start position:0%
standard figure. Um it it can be
configured<00:18:09.440><c> but</c><00:18:09.679><c> not</c><00:18:09.840><c> in</c><00:18:10.000><c> a</c><00:18:10.240><c> portable</c><00:18:10.720><c> way.</c>

00:18:11.190 --> 00:18:11.200 align:start position:0%
configured but not in a portable way.
 

00:18:11.200 --> 00:18:13.110 align:start position:0%
configured but not in a portable way.
There<00:18:11.360><c> will</c><00:18:11.520><c> be</c><00:18:11.600><c> some</c><00:18:11.840><c> magic</c><00:18:12.400><c> there</c><00:18:12.640><c> will</c><00:18:12.799><c> be</c>

00:18:13.110 --> 00:18:13.120 align:start position:0%
There will be some magic there will be
 

00:18:13.120 --> 00:18:15.909 align:start position:0%
There will be some magic there will be
some<00:18:13.360><c> magic</c><00:18:13.840><c> NPIC</c><00:18:14.880><c> environment</c><00:18:15.440><c> variable</c>

00:18:15.909 --> 00:18:15.919 align:start position:0%
some magic NPIC environment variable
 

00:18:15.919 --> 00:18:19.990 align:start position:0%
some magic NPIC environment variable
which<00:18:16.240><c> allows</c><00:18:16.480><c> you</c><00:18:16.640><c> to</c><00:18:16.799><c> configure</c><00:18:17.280><c> it.</c><00:18:18.640><c> Um</c><00:18:19.760><c> on</c>

00:18:19.990 --> 00:18:20.000 align:start position:0%
which allows you to configure it. Um on
 

00:18:20.000 --> 00:18:23.350 align:start position:0%
which allows you to configure it. Um on
Archer<00:18:20.480><c> 2</c><00:18:20.640><c> it's</c><00:18:20.960><c> even</c><00:18:21.200><c> more</c><00:18:21.440><c> complicated</c>

00:18:23.350 --> 00:18:23.360 align:start position:0%
Archer 2 it's even more complicated
 

00:18:23.360 --> 00:18:27.350 align:start position:0%
Archer 2 it's even more complicated
because<00:18:24.400><c> um</c>

00:18:27.350 --> 00:18:27.360 align:start position:0%
because um
 

00:18:27.360 --> 00:18:29.669 align:start position:0%
because um
the<00:18:27.600><c> buffer</c><00:18:28.000><c> size</c><00:18:28.640><c> large</c><00:18:28.960><c> messages</c><00:18:29.280><c> are</c><00:18:29.440><c> split</c>

00:18:29.669 --> 00:18:29.679 align:start position:0%
the buffer size large messages are split
 

00:18:29.679 --> 00:18:31.110 align:start position:0%
the buffer size large messages are split
into<00:18:29.919><c> lots</c><00:18:30.160><c> of</c><00:18:30.240><c> small</c><00:18:30.480><c> messages</c><00:18:30.799><c> which</c><00:18:31.039><c> are</c>

00:18:31.110 --> 00:18:31.120 align:start position:0%
into lots of small messages which are
 

00:18:31.120 --> 00:18:33.270 align:start position:0%
into lots of small messages which are
each<00:18:31.280><c> individually</c><00:18:31.760><c> buffered.</c><00:18:32.720><c> So</c><00:18:32.960><c> when</c><00:18:33.200><c> you</c>

00:18:33.270 --> 00:18:33.280 align:start position:0%
each individually buffered. So when you
 

00:18:33.280 --> 00:18:34.950 align:start position:0%
each individually buffered. So when you
have<00:18:33.360><c> a</c><00:18:33.440><c> buffer</c><00:18:33.760><c> size</c><00:18:34.000><c> of</c><00:18:34.160><c> 10</c><00:18:34.400><c> kilobytes</c>

00:18:34.950 --> 00:18:34.960 align:start position:0%
have a buffer size of 10 kilobytes
 

00:18:34.960 --> 00:18:36.870 align:start position:0%
have a buffer size of 10 kilobytes
actually<00:18:35.440><c> messages</c><00:18:35.760><c> of</c><00:18:35.919><c> 100</c><00:18:36.160><c> kilobytes</c><00:18:36.720><c> could</c>

00:18:36.870 --> 00:18:36.880 align:start position:0%
actually messages of 100 kilobytes could
 

00:18:36.880 --> 00:18:38.310 align:start position:0%
actually messages of 100 kilobytes could
be<00:18:36.960><c> buffered</c><00:18:37.360><c> because</c><00:18:37.440><c> it</c><00:18:37.600><c> splits</c><00:18:37.919><c> into</c><00:18:38.080><c> 10</c>

00:18:38.310 --> 00:18:38.320 align:start position:0%
be buffered because it splits into 10
 

00:18:38.320 --> 00:18:39.669 align:start position:0%
be buffered because it splits into 10
separate<00:18:38.640><c> messages.</c><00:18:39.039><c> It's</c><00:18:39.200><c> slightly</c>

00:18:39.669 --> 00:18:39.679 align:start position:0%
separate messages. It's slightly
 

00:18:39.679 --> 00:18:43.110 align:start position:0%
separate messages. It's slightly
confusing<00:18:40.480><c> but</c><00:18:41.120><c> about</c><00:18:41.520><c> 10</c><00:18:41.840><c> kilobyt</c><00:18:42.400><c> is</c><00:18:42.640><c> about</c>

00:18:43.110 --> 00:18:43.120 align:start position:0%
confusing but about 10 kilobyt is about
 

00:18:43.120 --> 00:18:45.990 align:start position:0%
confusing but about 10 kilobyt is about
I<00:18:43.280><c> would</c><00:18:43.440><c> guess</c><00:18:43.600><c> a</c><00:18:43.840><c> sort</c><00:18:44.080><c> of</c><00:18:44.160><c> standard</c><00:18:44.640><c> figure</c>

00:18:45.990 --> 00:18:46.000 align:start position:0%
I would guess a sort of standard figure
 

00:18:46.000 --> 00:18:48.789 align:start position:0%
I would guess a sort of standard figure
is<00:18:46.080><c> that</c><00:18:46.320><c> hell.</c><00:18:47.280><c> Yeah.</c>

00:18:48.789 --> 00:18:48.799 align:start position:0%
is that hell. Yeah.
 

00:18:48.799 --> 00:18:50.310 align:start position:0%
is that hell. Yeah.
Uh<00:18:49.120><c> resource</c><00:18:49.600><c> there</c><00:18:49.760><c> should</c><00:18:49.919><c> be</c><00:18:50.000><c> a</c><00:18:50.080><c> finite</c>

00:18:50.310 --> 00:18:50.320 align:start position:0%
Uh resource there should be a finite
 

00:18:50.320 --> 00:18:51.430 align:start position:0%
Uh resource there should be a finite
level<00:18:50.559><c> of</c><00:18:50.559><c> the</c><00:18:50.720><c> resources</c><00:18:51.039><c> required</c><00:18:51.280><c> to</c>

00:18:51.430 --> 00:18:51.440 align:start position:0%
level of the resources required to
 

00:18:51.440 --> 00:18:53.190 align:start position:0%
level of the resources required to
process<00:18:51.760><c> each</c><00:18:51.919><c> message.</c><00:18:52.320><c> That's</c><00:18:52.480><c> why</c><00:18:52.640><c> NPI</c>

00:18:53.190 --> 00:18:53.200 align:start position:0%
process each message. That's why NPI
 

00:18:53.200 --> 00:18:55.270 align:start position:0%
process each message. That's why NPI
send<00:18:53.679><c> cannot</c><00:18:54.080><c> guarantee</c><00:18:54.559><c> to</c><00:18:54.720><c> buffer</c><00:18:55.039><c> every</c>

00:18:55.270 --> 00:18:55.280 align:start position:0%
send cannot guarantee to buffer every
 

00:18:55.280 --> 00:18:57.110 align:start position:0%
send cannot guarantee to buffer every
message<00:18:55.919><c> because</c><00:18:56.160><c> that</c><00:18:56.320><c> would</c><00:18:56.799><c> that</c><00:18:56.960><c> that</c>

00:18:57.110 --> 00:18:57.120 align:start position:0%
message because that would that that
 

00:18:57.120 --> 00:18:59.669 align:start position:0%
message because that would that that
would<00:18:57.600><c> mean</c><00:18:57.760><c> it</c><00:18:57.919><c> would</c><00:18:58.080><c> have</c><00:18:58.240><c> to</c><00:18:58.720><c> um</c><00:18:59.360><c> be</c><00:18:59.520><c> able</c>

00:18:59.669 --> 00:18:59.679 align:start position:0%
would mean it would have to um be able
 

00:18:59.679 --> 00:19:01.190 align:start position:0%
would mean it would have to um be able
to<00:18:59.760><c> to</c><00:19:00.080><c> buffer</c><00:19:00.400><c> an</c><00:19:00.559><c> infinite</c><00:19:00.880><c> number</c><00:19:01.039><c> of</c>

00:19:01.190 --> 00:19:01.200 align:start position:0%
to to buffer an infinite number of
 

00:19:01.200 --> 00:19:03.430 align:start position:0%
to to buffer an infinite number of
messages.<00:19:02.320><c> uh</c><00:19:02.480><c> progress.</c><00:19:02.880><c> We'll</c><00:19:03.120><c> come</c><00:19:03.280><c> back</c>

00:19:03.430 --> 00:19:03.440 align:start position:0%
messages. uh progress. We'll come back
 

00:19:03.440 --> 00:19:05.110 align:start position:0%
messages. uh progress. We'll come back
to<00:19:03.600><c> this</c><00:19:03.840><c> but</c><00:19:04.160><c> outstanding</c><00:19:04.640><c> communication</c>

00:19:05.110 --> 00:19:05.120 align:start position:0%
to this but outstanding communication
 

00:19:05.120 --> 00:19:08.710 align:start position:0%
to this but outstanding communication
should<00:19:05.280><c> be</c><00:19:05.440><c> progressed</c><00:19:05.840><c> where</c><00:19:06.160><c> possible</c>

00:19:08.710 --> 00:19:08.720 align:start position:0%
should be progressed where possible
 

00:19:08.720 --> 00:19:10.150 align:start position:0%
should be progressed where possible
and<00:19:08.880><c> we'll</c><00:19:09.200><c> come</c><00:19:09.280><c> back</c><00:19:09.520><c> to</c><00:19:09.679><c> that</c><00:19:09.919><c> but</c>

00:19:10.150 --> 00:19:10.160 align:start position:0%
and we'll come back to that but
 

00:19:10.160 --> 00:19:14.390 align:start position:0%
and we'll come back to that but
basically<00:19:10.960><c> it</c><00:19:11.280><c> means</c><00:19:11.520><c> that</c><00:19:12.160><c> um</c><00:19:12.960><c> oops</c><00:19:14.160><c> yeah</c>

00:19:14.390 --> 00:19:14.400 align:start position:0%
basically it means that um oops yeah
 

00:19:14.400 --> 00:19:18.549 align:start position:0%
basically it means that um oops yeah
I'll<00:19:14.640><c> talk</c><00:19:14.799><c> about</c><00:19:14.960><c> progression</c><00:19:15.440><c> here.</c><00:19:16.400><c> So</c><00:19:16.880><c> um</c>

00:19:18.549 --> 00:19:18.559 align:start position:0%
I'll talk about progression here. So um
 

00:19:18.559 --> 00:19:20.390 align:start position:0%
I'll talk about progression here. So um
this<00:19:18.720><c> is</c><00:19:18.799><c> a</c><00:19:19.039><c> slightly</c><00:19:19.360><c> contrived</c><00:19:19.840><c> it's</c><00:19:20.000><c> a</c><00:19:20.160><c> very</c>

00:19:20.390 --> 00:19:20.400 align:start position:0%
this is a slightly contrived it's a very
 

00:19:20.400 --> 00:19:22.950 align:start position:0%
this is a slightly contrived it's a very
contrived<00:19:21.039><c> example</c><00:19:21.600><c> but</c><00:19:21.760><c> what</c><00:19:22.000><c> I'm</c><00:19:22.320><c> doing</c><00:19:22.559><c> is</c>

00:19:22.950 --> 00:19:22.960 align:start position:0%
contrived example but what I'm doing is
 

00:19:22.960 --> 00:19:26.950 align:start position:0%
contrived example but what I'm doing is
is<00:19:23.039><c> is</c><00:19:23.360><c> is</c><00:19:23.919><c> rank</c><00:19:24.400><c> one</c><00:19:25.120><c> okay</c><00:19:25.919><c> is</c><00:19:26.240><c> issuing</c><00:19:26.720><c> a</c>

00:19:26.950 --> 00:19:26.960 align:start position:0%
is is is rank one okay is issuing a
 

00:19:26.960 --> 00:19:30.470 align:start position:0%
is is is rank one okay is issuing a
non-blocking<00:19:27.760><c> receive</c><00:19:28.480><c> okay</c><00:19:29.919><c> and</c><00:19:30.080><c> then</c><00:19:30.240><c> it</c>

00:19:30.470 --> 00:19:30.480 align:start position:0%
non-blocking receive okay and then it
 

00:19:30.480 --> 00:19:33.430 align:start position:0%
non-blocking receive okay and then it
immediately<00:19:30.880><c> goes</c><00:19:31.039><c> into</c><00:19:31.200><c> the</c><00:19:31.360><c> barrier</c><00:19:32.000><c> okay</c>

00:19:33.430 --> 00:19:33.440 align:start position:0%
immediately goes into the barrier okay
 

00:19:33.440 --> 00:19:35.590 align:start position:0%
immediately goes into the barrier okay
so<00:19:33.679><c> there</c><00:19:33.919><c> is</c><00:19:34.000><c> a</c><00:19:34.160><c> receive</c><00:19:34.640><c> set</c><00:19:34.880><c> up</c><00:19:35.280><c> so</c><00:19:35.440><c> the</c>

00:19:35.590 --> 00:19:35.600 align:start position:0%
so there is a receive set up so the
 

00:19:35.600 --> 00:19:37.350 align:start position:0%
so there is a receive set up so the
non-blocker<00:19:36.080><c> says</c><00:19:36.240><c> I'm</c><00:19:36.480><c> expecting</c><00:19:36.880><c> some</c><00:19:37.120><c> data</c>

00:19:37.350 --> 00:19:37.360 align:start position:0%
non-blocker says I'm expecting some data
 

00:19:37.360 --> 00:19:39.590 align:start position:0%
non-blocker says I'm expecting some data
from<00:19:37.520><c> rank</c><00:19:37.840><c> one</c><00:19:38.400><c> okay</c><00:19:38.960><c> please</c><00:19:39.200><c> set</c><00:19:39.360><c> up</c><00:19:39.440><c> a</c>

00:19:39.590 --> 00:19:39.600 align:start position:0%
from rank one okay please set up a
 

00:19:39.600 --> 00:19:41.190 align:start position:0%
from rank one okay please set up a
non-blocking<00:19:40.160><c> receive</c><00:19:40.480><c> then</c><00:19:40.720><c> it</c><00:19:40.799><c> goes</c><00:19:40.960><c> into</c>

00:19:41.190 --> 00:19:41.200 align:start position:0%
non-blocking receive then it goes into
 

00:19:41.200 --> 00:19:44.470 align:start position:0%
non-blocking receive then it goes into
the<00:19:41.280><c> barrier</c><00:19:42.160><c> rank</c><00:19:42.640><c> zero</c><00:19:43.520><c> then</c><00:19:43.760><c> sends</c><00:19:44.080><c> to</c><00:19:44.320><c> one</c>

00:19:44.470 --> 00:19:44.480 align:start position:0%
the barrier rank zero then sends to one
 

00:19:44.480 --> 00:19:47.590 align:start position:0%
the barrier rank zero then sends to one
with<00:19:44.640><c> an</c><00:19:44.799><c> NPIS</c><00:19:45.600><c> end.</c><00:19:46.480><c> So</c><00:19:46.720><c> rank</c><00:19:47.039><c> one</c><00:19:47.200><c> is</c><00:19:47.360><c> sitting</c>

00:19:47.590 --> 00:19:47.600 align:start position:0%
with an NPIS end. So rank one is sitting
 

00:19:47.600 --> 00:19:49.669 align:start position:0%
with an NPIS end. So rank one is sitting
here<00:19:47.760><c> in</c><00:19:47.919><c> the</c><00:19:48.080><c> barrier.</c><00:19:48.640><c> Rank</c><00:19:48.960><c> one</c><00:19:49.200><c> is</c><00:19:49.440><c> not</c>

00:19:49.669 --> 00:19:49.679 align:start position:0%
here in the barrier. Rank one is not
 

00:19:49.679 --> 00:19:51.029 align:start position:0%
here in the barrier. Rank one is not
allowed<00:19:49.919><c> to</c><00:19:50.160><c> sit</c><00:19:50.320><c> there</c><00:19:50.400><c> in</c><00:19:50.640><c> the</c><00:19:50.720><c> barrier</c>

00:19:51.029 --> 00:19:51.039 align:start position:0%
allowed to sit there in the barrier
 

00:19:51.039 --> 00:19:53.909 align:start position:0%
allowed to sit there in the barrier
saying<00:19:51.360><c> I'm</c><00:19:51.440><c> in</c><00:19:51.600><c> a</c><00:19:51.760><c> barrier.</c><00:19:52.480><c> Rank</c><00:19:52.880><c> one</c><00:19:53.200><c> or</c><00:19:53.440><c> MP</c>

00:19:53.909 --> 00:19:53.919 align:start position:0%
saying I'm in a barrier. Rank one or MP
 

00:19:53.919 --> 00:19:57.190 align:start position:0%
saying I'm in a barrier. Rank one or MP
is<00:19:54.160><c> is</c><00:19:54.720><c> obliged</c><00:19:55.280><c> to</c><00:19:56.000><c> progress</c><00:19:56.400><c> what</c><00:19:56.559><c> it</c><00:19:56.799><c> so</c>

00:19:57.190 --> 00:19:57.200 align:start position:0%
is is obliged to progress what it so
 

00:19:57.200 --> 00:19:58.630 align:start position:0%
is is obliged to progress what it so
when<00:19:57.440><c> you</c><00:19:57.520><c> think</c><00:19:57.840><c> rank</c><00:19:58.080><c> one</c><00:19:58.160><c> is</c><00:19:58.240><c> in</c><00:19:58.400><c> the</c><00:19:58.480><c> bar.</c>

00:19:58.630 --> 00:19:58.640 align:start position:0%
when you think rank one is in the bar.
 

00:19:58.640 --> 00:19:59.669 align:start position:0%
when you think rank one is in the bar.
It's<00:19:58.799><c> not</c><00:19:58.960><c> sitting</c><00:19:59.120><c> in</c><00:19:59.200><c> the</c><00:19:59.280><c> barrier.</c><00:19:59.520><c> It's</c>

00:19:59.669 --> 00:19:59.679 align:start position:0%
It's not sitting in the barrier. It's
 

00:19:59.679 --> 00:20:01.190 align:start position:0%
It's not sitting in the barrier. It's
actually<00:19:59.919><c> basically</c><00:20:00.240><c> going</c><00:20:00.559><c> well</c><00:20:00.799><c> I'm</c><00:20:00.880><c> in</c><00:20:01.039><c> the</c>

00:20:01.190 --> 00:20:01.200 align:start position:0%
actually basically going well I'm in the
 

00:20:01.200 --> 00:20:03.029 align:start position:0%
actually basically going well I'm in the
barrier<00:20:01.440><c> but</c><00:20:01.600><c> I</c><00:20:01.760><c> better</c><00:20:02.000><c> check.</c><00:20:02.640><c> I've</c><00:20:02.960><c> got</c>

00:20:03.029 --> 00:20:03.039 align:start position:0%
barrier but I better check. I've got
 

00:20:03.039 --> 00:20:05.190 align:start position:0%
barrier but I better check. I've got
this<00:20:03.360><c> outstanding</c><00:20:04.160><c> non-blocking</c><00:20:04.799><c> receiver.</c>

00:20:05.190 --> 00:20:05.200 align:start position:0%
this outstanding non-blocking receiver.
 

00:20:05.200 --> 00:20:07.190 align:start position:0%
this outstanding non-blocking receiver.
I<00:20:05.360><c> better</c><00:20:05.679><c> check.</c><00:20:06.240><c> So</c><00:20:06.400><c> what</c><00:20:06.559><c> it's</c><00:20:06.799><c> doing</c><00:20:06.880><c> is</c>

00:20:07.190 --> 00:20:07.200 align:start position:0%
I better check. So what it's doing is
 

00:20:07.200 --> 00:20:09.029 align:start position:0%
I better check. So what it's doing is
it's<00:20:07.440><c> not</c><00:20:07.600><c> it's</c><00:20:07.840><c> basically</c><00:20:08.240><c> checking</c><00:20:08.640><c> all</c><00:20:08.880><c> the</c>

00:20:09.029 --> 00:20:09.039 align:start position:0%
it's not it's basically checking all the
 

00:20:09.039 --> 00:20:10.390 align:start position:0%
it's not it's basically checking all the
time<00:20:09.360><c> actively</c><00:20:09.760><c> to</c><00:20:09.919><c> see</c><00:20:10.000><c> if</c><00:20:10.080><c> there's</c><00:20:10.240><c> any</c>

00:20:10.390 --> 00:20:10.400 align:start position:0%
time actively to see if there's any
 

00:20:10.400 --> 00:20:12.230 align:start position:0%
time actively to see if there's any
incoming<00:20:10.799><c> messages</c><00:20:11.360><c> because</c><00:20:11.600><c> it</c><00:20:11.840><c> has</c><00:20:12.000><c> to</c>

00:20:12.230 --> 00:20:12.240 align:start position:0%
incoming messages because it has to
 

00:20:12.240 --> 00:20:13.990 align:start position:0%
incoming messages because it has to
progress<00:20:12.640><c> them.</c><00:20:12.960><c> It</c><00:20:13.120><c> has</c><00:20:13.280><c> to</c><00:20:13.440><c> because</c><00:20:13.600><c> if</c><00:20:13.840><c> it</c>

00:20:13.990 --> 00:20:14.000 align:start position:0%
progress them. It has to because if it
 

00:20:14.000 --> 00:20:16.310 align:start position:0%
progress them. It has to because if it
didn't<00:20:14.240><c> progress</c><00:20:14.720><c> descend</c><00:20:15.280><c> from</c><00:20:15.440><c> rank</c><00:20:15.760><c> zero,</c>

00:20:16.310 --> 00:20:16.320 align:start position:0%
didn't progress descend from rank zero,
 

00:20:16.320 --> 00:20:17.909 align:start position:0%
didn't progress descend from rank zero,
rank<00:20:16.640><c> zero</c><00:20:16.880><c> would</c><00:20:17.039><c> never</c><00:20:17.200><c> get</c><00:20:17.360><c> to</c><00:20:17.440><c> the</c><00:20:17.600><c> barrier</c>

00:20:17.909 --> 00:20:17.919 align:start position:0%
rank zero would never get to the barrier
 

00:20:17.919 --> 00:20:20.150 align:start position:0%
rank zero would never get to the barrier
and<00:20:18.080><c> you</c><00:20:18.240><c> would</c><00:20:18.320><c> get</c><00:20:18.480><c> a</c><00:20:18.720><c> deadlock.</c><00:20:19.679><c> So</c><00:20:19.919><c> you</c>

00:20:20.150 --> 00:20:20.160 align:start position:0%
and you would get a deadlock. So you
 

00:20:20.160 --> 00:20:21.909 align:start position:0%
and you would get a deadlock. So you
might<00:20:20.320><c> think</c><00:20:20.559><c> that</c><00:20:20.799><c> when</c><00:20:20.960><c> you</c><00:20:21.120><c> call</c><00:20:21.280><c> a</c><00:20:21.440><c> barrier</c>

00:20:21.909 --> 00:20:21.919 align:start position:0%
might think that when you call a barrier
 

00:20:21.919 --> 00:20:23.350 align:start position:0%
might think that when you call a barrier
it<00:20:22.160><c> it</c><00:20:22.320><c> sits</c><00:20:22.559><c> in</c><00:20:22.640><c> the</c><00:20:22.720><c> right</c><00:20:22.880><c> it</c><00:20:23.039><c> doesn't</c><00:20:23.280><c> what</c>

00:20:23.350 --> 00:20:23.360 align:start position:0%
it it sits in the right it doesn't what
 

00:20:23.360 --> 00:20:25.590 align:start position:0%
it it sits in the right it doesn't what
it's<00:20:23.520><c> doing</c><00:20:23.679><c> is</c><00:20:23.840><c> it's</c><00:20:24.080><c> actively</c><00:20:24.880><c> busy</c><00:20:25.280><c> waiting</c>

00:20:25.590 --> 00:20:25.600 align:start position:0%
it's doing is it's actively busy waiting
 

00:20:25.600 --> 00:20:27.990 align:start position:0%
it's doing is it's actively busy waiting
and<00:20:25.919><c> checking</c><00:20:26.160><c> for</c><00:20:26.400><c> lots</c><00:20:26.640><c> of</c><00:20:26.799><c> stuff</c><00:20:27.039><c> going</c><00:20:27.200><c> on.</c>

00:20:27.990 --> 00:20:28.000 align:start position:0%
and checking for lots of stuff going on.
 

00:20:28.000 --> 00:20:29.350 align:start position:0%
and checking for lots of stuff going on.
Oh<00:20:28.159><c> there's</c><00:20:28.320><c> an</c><00:20:28.400><c> outgoing</c><00:20:28.799><c> message</c><00:20:29.039><c> I</c><00:20:29.200><c> can</c>

00:20:29.350 --> 00:20:29.360 align:start position:0%
Oh there's an outgoing message I can
 

00:20:29.360 --> 00:20:30.470 align:start position:0%
Oh there's an outgoing message I can
progress<00:20:29.679><c> there's</c><00:20:29.919><c> something</c><00:20:30.159><c> coming</c><00:20:30.240><c> in</c>

00:20:30.470 --> 00:20:30.480 align:start position:0%
progress there's something coming in
 

00:20:30.480 --> 00:20:31.750 align:start position:0%
progress there's something coming in
there's<00:20:30.720><c> stuff</c><00:20:30.880><c> going</c><00:20:31.039><c> on.</c><00:20:31.280><c> So</c><00:20:31.440><c> it's</c><00:20:31.600><c> doing</c>

00:20:31.750 --> 00:20:31.760 align:start position:0%
there's stuff going on. So it's doing
 

00:20:31.760 --> 00:20:33.110 align:start position:0%
there's stuff going on. So it's doing
lots<00:20:31.919><c> and</c><00:20:32.080><c> lots</c><00:20:32.240><c> of</c><00:20:32.400><c> stuff.</c><00:20:32.720><c> So</c><00:20:32.880><c> it's</c>

00:20:33.110 --> 00:20:33.120 align:start position:0%
lots and lots of stuff. So it's
 

00:20:33.120 --> 00:20:36.630 align:start position:0%
lots and lots of stuff. So it's
basically<00:20:33.520><c> doing</c><00:20:33.679><c> a</c><00:20:33.919><c> lot</c><00:20:34.080><c> of</c><00:20:34.159><c> stuff.</c><00:20:34.559><c> Okay.</c><00:20:35.760><c> So</c>

00:20:36.630 --> 00:20:36.640 align:start position:0%
basically doing a lot of stuff. Okay. So
 

00:20:36.640 --> 00:20:39.190 align:start position:0%
basically doing a lot of stuff. Okay. So
of<00:20:36.960><c> what</c><00:20:37.280><c> NPI</c><00:20:37.840><c> does</c><00:20:38.159><c> is</c><00:20:38.480><c> basically</c><00:20:38.880><c> when</c><00:20:39.120><c> you</c>

00:20:39.190 --> 00:20:39.200 align:start position:0%
of what NPI does is basically when you
 

00:20:39.200 --> 00:20:41.430 align:start position:0%
of what NPI does is basically when you
call<00:20:39.360><c> an</c><00:20:39.520><c> NPI</c><00:20:40.000><c> routine.</c><00:20:40.720><c> The</c><00:20:40.960><c> other</c><00:20:41.120><c> thing</c><00:20:41.200><c> I</c>

00:20:41.430 --> 00:20:41.440 align:start position:0%
call an NPI routine. The other thing I
 

00:20:41.440 --> 00:20:43.270 align:start position:0%
call an NPI routine. The other thing I
should<00:20:41.520><c> say</c><00:20:41.679><c> is</c><00:20:41.840><c> that</c><00:20:42.080><c> NPI</c><00:20:42.559><c> libraries</c><00:20:43.039><c> are</c>

00:20:43.270 --> 00:20:43.280 align:start position:0%
should say is that NPI libraries are
 

00:20:43.280 --> 00:20:46.549 align:start position:0%
should say is that NPI libraries are
typically<00:20:43.840><c> single</c><00:20:44.240><c> threaded.</c><00:20:45.360><c> So</c><00:20:45.840><c> you</c><00:20:46.000><c> know</c>

00:20:46.549 --> 00:20:46.559 align:start position:0%
typically single threaded. So you know
 

00:20:46.559 --> 00:20:49.909 align:start position:0%
typically single threaded. So you know
um<00:20:47.520><c> you</c><00:20:47.840><c> think</c><00:20:48.080><c> of</c><00:20:48.320><c> there</c><00:20:48.640><c> being</c><00:20:49.039><c> NPI</c><00:20:49.520><c> being</c><00:20:49.679><c> a</c>

00:20:49.909 --> 00:20:49.919 align:start position:0%
um you think of there being NPI being a
 

00:20:49.919 --> 00:20:53.110 align:start position:0%
um you think of there being NPI being a
universal<00:20:51.120><c> always</c><00:20:51.600><c> active</c><00:20:52.240><c> postmaster</c><00:20:52.960><c> or</c>

00:20:53.110 --> 00:20:53.120 align:start position:0%
universal always active postmaster or
 

00:20:53.120 --> 00:20:55.510 align:start position:0%
universal always active postmaster or
postmus<00:20:53.840><c> delivering</c><00:20:54.159><c> your</c><00:20:54.480><c> data.</c><00:20:55.280><c> Actually</c>

00:20:55.510 --> 00:20:55.520 align:start position:0%
postmus delivering your data. Actually
 

00:20:55.520 --> 00:20:57.350 align:start position:0%
postmus delivering your data. Actually
it's<00:20:55.840><c> not.</c><00:20:56.080><c> The</c><00:20:56.159><c> only</c><00:20:56.320><c> time</c><00:20:56.640><c> NPI</c><00:20:57.039><c> can</c><00:20:57.200><c> do</c>

00:20:57.350 --> 00:20:57.360 align:start position:0%
it's not. The only time NPI can do
 

00:20:57.360 --> 00:20:58.950 align:start position:0%
it's not. The only time NPI can do
anything<00:20:57.520><c> is</c><00:20:57.760><c> when</c><00:20:57.919><c> you</c><00:20:58.000><c> call</c><00:20:58.159><c> the</c><00:20:58.400><c> library.</c>

00:20:58.950 --> 00:20:58.960 align:start position:0%
anything is when you call the library.
 

00:20:58.960 --> 00:21:01.190 align:start position:0%
anything is when you call the library.
So<00:20:59.120><c> when</c><00:20:59.280><c> you</c><00:20:59.360><c> call</c><00:20:59.600><c> any</c><00:20:59.840><c> NPI</c><00:21:00.320><c> call</c><00:21:00.559><c> like</c><00:21:00.799><c> NPI</c>

00:21:01.190 --> 00:21:01.200 align:start position:0%
So when you call any NPI call like NPI
 

00:21:01.200 --> 00:21:03.430 align:start position:0%
So when you call any NPI call like NPI
receive<00:21:01.520><c> or</c><00:21:01.679><c> NPI</c><00:21:02.159><c> send</c><00:21:02.720><c> the</c><00:21:02.960><c> first</c><00:21:03.120><c> thing</c><00:21:03.200><c> it</c>

00:21:03.430 --> 00:21:03.440 align:start position:0%
receive or NPI send the first thing it
 

00:21:03.440 --> 00:21:05.110 align:start position:0%
receive or NPI send the first thing it
does<00:21:03.600><c> is</c><00:21:03.840><c> it</c><00:21:04.080><c> ignores</c><00:21:04.400><c> what</c><00:21:04.559><c> you've</c><00:21:04.720><c> asked</c><00:21:04.960><c> it</c>

00:21:05.110 --> 00:21:05.120 align:start position:0%
does is it ignores what you've asked it
 

00:21:05.120 --> 00:21:06.950 align:start position:0%
does is it ignores what you've asked it
to<00:21:05.280><c> do.</c><00:21:05.600><c> It</c><00:21:05.760><c> goes</c><00:21:05.919><c> away</c><00:21:06.080><c> and</c><00:21:06.240><c> says</c><00:21:06.480><c> right</c><00:21:06.720><c> what</c>

00:21:06.950 --> 00:21:06.960 align:start position:0%
to do. It goes away and says right what
 

00:21:06.960 --> 00:21:08.470 align:start position:0%
to do. It goes away and says right what
what<00:21:07.280><c> stuff</c><00:21:07.440><c> is</c><00:21:07.600><c> going</c><00:21:07.760><c> on?</c><00:21:08.000><c> What</c><00:21:08.159><c> do</c><00:21:08.240><c> I</c><00:21:08.400><c> need</c>

00:21:08.470 --> 00:21:08.480 align:start position:0%
what stuff is going on? What do I need
 

00:21:08.480 --> 00:21:10.549 align:start position:0%
what stuff is going on? What do I need
to<00:21:08.640><c> take</c><00:21:08.799><c> care</c><00:21:08.960><c> of?</c><00:21:09.280><c> Okay.</c><00:21:09.919><c> So</c><00:21:10.000><c> it's</c><00:21:10.240><c> like</c><00:21:10.320><c> a</c>

00:21:10.549 --> 00:21:10.559 align:start position:0%
to take care of? Okay. So it's like a
 

00:21:10.559 --> 00:21:12.710 align:start position:0%
to take care of? Okay. So it's like a
manual<00:21:10.880><c> interrupt</c><00:21:11.360><c> and</c><00:21:11.600><c> again</c><00:21:11.760><c> if</c><00:21:12.080><c> NPI</c><00:21:12.480><c> would</c>

00:21:12.710 --> 00:21:12.720 align:start position:0%
manual interrupt and again if NPI would
 

00:21:12.720 --> 00:21:13.990 align:start position:0%
manual interrupt and again if NPI would
defined<00:21:12.960><c> today</c><00:21:13.200><c> it</c><00:21:13.360><c> wouldn't</c><00:21:13.600><c> be</c><00:21:13.679><c> done</c><00:21:13.840><c> it</c>

00:21:13.990 --> 00:21:14.000 align:start position:0%
defined today it wouldn't be done it
 

00:21:14.000 --> 00:21:15.270 align:start position:0%
defined today it wouldn't be done it
wouldn't<00:21:14.159><c> be</c><00:21:14.240><c> done</c><00:21:14.400><c> like</c><00:21:14.559><c> that</c><00:21:14.799><c> use</c><00:21:14.960><c> multi-</c>

00:21:15.270 --> 00:21:15.280 align:start position:0%
wouldn't be done like that use multi-
 

00:21:15.280 --> 00:21:17.350 align:start position:0%
wouldn't be done like that use multi-
threading<00:21:16.159><c> but</c><00:21:16.400><c> I'd</c><00:21:16.640><c> have</c><00:21:16.799><c> some</c><00:21:17.039><c> example</c>

00:21:17.350 --> 00:21:17.360 align:start position:0%
threading but I'd have some example
 

00:21:17.360 --> 00:21:20.070 align:start position:0%
threading but I'd have some example
later<00:21:17.679><c> on</c><00:21:18.000><c> but</c><00:21:18.400><c> message</c><00:21:18.720><c> progressing</c><00:21:19.200><c> NPI</c><00:21:19.840><c> has</c>

00:21:20.070 --> 00:21:20.080 align:start position:0%
later on but message progressing NPI has
 

00:21:20.080 --> 00:21:22.390 align:start position:0%
later on but message progressing NPI has
to<00:21:20.880><c> it</c><00:21:21.120><c> can't</c><00:21:21.360><c> just</c><00:21:21.520><c> sit</c><00:21:21.760><c> there</c><00:21:21.919><c> wait</c><00:21:22.159><c> in</c><00:21:22.320><c> the</c>

00:21:22.390 --> 00:21:22.400 align:start position:0%
to it can't just sit there wait in the
 

00:21:22.400 --> 00:21:24.070 align:start position:0%
to it can't just sit there wait in the
barrier<00:21:22.640><c> it</c><00:21:22.720><c> has</c><00:21:22.880><c> to</c><00:21:23.120><c> actively</c><00:21:23.600><c> progress</c>

00:21:24.070 --> 00:21:24.080 align:start position:0%
barrier it has to actively progress
 

00:21:24.080 --> 00:21:26.310 align:start position:0%
barrier it has to actively progress
things

00:21:26.310 --> 00:21:26.320 align:start position:0%
things
 

00:21:26.320 --> 00:21:28.630 align:start position:0%
things
um<00:21:26.720><c> API</c><00:21:27.440><c> both</c><00:21:27.600><c> blocking</c><00:21:27.840><c> and</c><00:21:28.000><c> non-blocking</c>

00:21:28.630 --> 00:21:28.640 align:start position:0%
um API both blocking and non-blocking
 

00:21:28.640 --> 00:21:30.390 align:start position:0%
um API both blocking and non-blocking
calls<00:21:28.960><c> blocking</c><00:21:29.360><c> calls</c><00:21:29.600><c> say</c><00:21:29.919><c> please</c><00:21:30.159><c> send</c>

00:21:30.390 --> 00:21:30.400 align:start position:0%
calls blocking calls say please send
 

00:21:30.400 --> 00:21:31.830 align:start position:0%
calls blocking calls say please send
this<00:21:30.640><c> message</c><00:21:31.039><c> and</c><00:21:31.120><c> return</c><00:21:31.360><c> to</c><00:21:31.520><c> me</c><00:21:31.600><c> when</c>

00:21:31.830 --> 00:21:31.840 align:start position:0%
this message and return to me when
 

00:21:31.840 --> 00:21:33.830 align:start position:0%
this message and return to me when
you've<00:21:32.000><c> done</c><00:21:32.080><c> it</c><00:21:32.559><c> non-blocking</c><00:21:33.200><c> says</c><00:21:33.600><c> send</c>

00:21:33.830 --> 00:21:33.840 align:start position:0%
you've done it non-blocking says send
 

00:21:33.840 --> 00:21:35.590 align:start position:0%
you've done it non-blocking says send
this<00:21:34.000><c> message</c><00:21:34.320><c> sometime</c><00:21:34.720><c> in</c><00:21:34.880><c> the</c><00:21:35.039><c> future</c>

00:21:35.590 --> 00:21:35.600 align:start position:0%
this message sometime in the future
 

00:21:35.600 --> 00:21:37.430 align:start position:0%
this message sometime in the future
giving<00:21:35.760><c> me</c><00:21:35.919><c> back</c><00:21:36.080><c> a</c><00:21:36.320><c> handle</c><00:21:36.640><c> a</c><00:21:36.880><c> request</c><00:21:37.200><c> which</c>

00:21:37.430 --> 00:21:37.440 align:start position:0%
giving me back a handle a request which
 

00:21:37.440 --> 00:21:39.029 align:start position:0%
giving me back a handle a request which
allow<00:21:37.679><c> me</c><00:21:37.840><c> to</c><00:21:37.919><c> say</c><00:21:38.159><c> later</c><00:21:38.320><c> on</c><00:21:38.559><c> has</c><00:21:38.640><c> the</c><00:21:38.799><c> message</c>

00:21:39.029 --> 00:21:39.039 align:start position:0%
allow me to say later on has the message
 

00:21:39.039 --> 00:21:41.350 align:start position:0%
allow me to say later on has the message
been<00:21:39.280><c> delivered</c><00:21:39.520><c> So</c><00:21:40.400><c> actually</c><00:21:40.799><c> low-level</c>

00:21:41.350 --> 00:21:41.360 align:start position:0%
been delivered So actually low-level
 

00:21:41.360 --> 00:21:42.950 align:start position:0%
been delivered So actually low-level
network<00:21:41.679><c> protocols</c><00:21:42.159><c> is</c><00:21:42.400><c> typically</c><00:21:42.880><c> are</c>

00:21:42.950 --> 00:21:42.960 align:start position:0%
network protocols is typically are
 

00:21:42.960 --> 00:21:45.669 align:start position:0%
network protocols is typically are
actually<00:21:43.200><c> non-blocking.</c><00:21:44.640><c> So</c><00:21:44.880><c> actually</c><00:21:45.600><c> um</c>

00:21:45.669 --> 00:21:45.679 align:start position:0%
actually non-blocking. So actually um
 

00:21:45.679 --> 00:21:47.350 align:start position:0%
actually non-blocking. So actually um
the<00:21:45.919><c> native</c><00:21:46.320><c> thing</c><00:21:46.480><c> for</c><00:21:46.720><c> a</c><00:21:46.880><c> network</c><00:21:47.120><c> is</c>

00:21:47.350 --> 00:21:47.360 align:start position:0%
the native thing for a network is
 

00:21:47.360 --> 00:21:49.350 align:start position:0%
the native thing for a network is
probably<00:21:47.600><c> non-blocking</c><00:21:48.640><c> and</c><00:21:48.880><c> I</c><00:21:49.039><c> said</c><00:21:49.200><c> you</c>

00:21:49.350 --> 00:21:49.360 align:start position:0%
probably non-blocking and I said you
 

00:21:49.360 --> 00:21:52.310 align:start position:0%
probably non-blocking and I said you
know<00:21:49.520><c> when</c><00:21:49.760><c> I</c><00:21:50.000><c> say</c><00:21:50.720><c> blocking</c><00:21:51.280><c> when</c><00:21:51.440><c> I</c><00:21:51.600><c> do</c><00:21:52.000><c> uh</c>

00:21:52.310 --> 00:21:52.320 align:start position:0%
know when I say blocking when I do uh
 

00:21:52.320 --> 00:21:54.710 align:start position:0%
know when I say blocking when I do uh
when<00:21:52.559><c> I</c><00:21:52.720><c> say</c><00:21:52.960><c> please</c><00:21:53.280><c> send</c><00:21:53.440><c> this</c><00:21:53.760><c> message</c><00:21:54.400><c> if</c><00:21:54.559><c> I</c>

00:21:54.710 --> 00:21:54.720 align:start position:0%
when I say please send this message if I
 

00:21:54.720 --> 00:21:58.149 align:start position:0%
when I say please send this message if I
do<00:21:54.880><c> synchronous</c><00:21:55.520><c> send</c><00:21:56.640><c> in</c><00:21:56.960><c> conceptually</c><00:21:57.600><c> NPI</c>

00:21:58.149 --> 00:21:58.159 align:start position:0%
do synchronous send in conceptually NPI
 

00:21:58.159 --> 00:22:00.070 align:start position:0%
do synchronous send in conceptually NPI
sitting<00:21:58.400><c> there</c><00:21:58.799><c> waiting</c><00:21:59.520><c> for</c><00:21:59.760><c> someone</c><00:21:59.919><c> to</c>

00:22:00.070 --> 00:22:00.080 align:start position:0%
sitting there waiting for someone to
 

00:22:00.080 --> 00:22:01.510 align:start position:0%
sitting there waiting for someone to
pick<00:22:00.240><c> up</c><00:22:00.320><c> the</c><00:22:00.480><c> phone</c><00:22:00.799><c> in</c><00:22:00.960><c> practice</c><00:22:01.280><c> it's</c>

00:22:01.510 --> 00:22:01.520 align:start position:0%
pick up the phone in practice it's
 

00:22:01.520 --> 00:22:02.630 align:start position:0%
pick up the phone in practice it's
probably<00:22:01.760><c> running</c><00:22:02.000><c> around</c><00:22:02.159><c> doing</c><00:22:02.400><c> lots</c><00:22:02.559><c> of</c>

00:22:02.630 --> 00:22:02.640 align:start position:0%
probably running around doing lots of
 

00:22:02.640 --> 00:22:04.950 align:start position:0%
probably running around doing lots of
bookkeeping.<00:22:03.679><c> It's</c><00:22:03.919><c> it's</c><00:22:04.000><c> it's</c><00:22:04.640><c> slightly</c>

00:22:04.950 --> 00:22:04.960 align:start position:0%
bookkeeping. It's it's it's slightly
 

00:22:04.960 --> 00:22:06.710 align:start position:0%
bookkeeping. It's it's it's slightly
subtle,<00:22:05.360><c> but</c><00:22:05.520><c> I</c><00:22:05.760><c> think</c><00:22:06.000><c> it's</c><00:22:06.320><c> important</c><00:22:06.480><c> to</c>

00:22:06.710 --> 00:22:06.720 align:start position:0%
subtle, but I think it's important to
 

00:22:06.720 --> 00:22:07.510 align:start position:0%
subtle, but I think it's important to
understand<00:22:06.960><c> that</c><00:22:07.120><c> blocking</c><00:22:07.440><c> and</c>

00:22:07.510 --> 00:22:07.520 align:start position:0%
understand that blocking and
 

00:22:07.520 --> 00:22:09.270 align:start position:0%
understand that blocking and
non-blocking<00:22:08.080><c> both</c><00:22:08.320><c> exist.</c><00:22:08.880><c> But</c><00:22:09.039><c> it's</c>

00:22:09.270 --> 00:22:09.280 align:start position:0%
non-blocking both exist. But it's
 

00:22:09.280 --> 00:22:11.430 align:start position:0%
non-blocking both exist. But it's
interesting<00:22:10.320><c> point</c><00:22:10.720><c> although</c><00:22:10.960><c> we</c><00:22:11.120><c> think</c><00:22:11.280><c> with</c>

00:22:11.430 --> 00:22:11.440 align:start position:0%
interesting point although we think with
 

00:22:11.440 --> 00:22:13.750 align:start position:0%
interesting point although we think with
blocking<00:22:11.760><c> is</c><00:22:11.919><c> the</c><00:22:12.080><c> the</c><00:22:12.559><c> is</c><00:22:12.720><c> the</c><00:22:13.039><c> the</c><00:22:13.440><c> obvious</c>

00:22:13.750 --> 00:22:13.760 align:start position:0%
blocking is the the is the the obvious
 

00:22:13.760 --> 00:22:15.110 align:start position:0%
blocking is the the is the the obvious
thing<00:22:13.919><c> and</c><00:22:14.080><c> non-blocking</c><00:22:14.559><c> is</c><00:22:14.720><c> slightly</c>

00:22:15.110 --> 00:22:15.120 align:start position:0%
thing and non-blocking is slightly
 

00:22:15.120 --> 00:22:17.270 align:start position:0%
thing and non-blocking is slightly
complicated<00:22:15.919><c> at</c><00:22:16.159><c> the</c><00:22:16.320><c> network</c><00:22:16.640><c> level</c><00:22:16.960><c> most</c>

00:22:17.270 --> 00:22:17.280 align:start position:0%
complicated at the network level most
 

00:22:17.280 --> 00:22:19.750 align:start position:0%
complicated at the network level most
networks<00:22:18.159><c> natively</c><00:22:18.640><c> use</c><00:22:18.799><c> non-blocking</c><00:22:19.520><c> calls</c>

00:22:19.750 --> 00:22:19.760 align:start position:0%
networks natively use non-blocking calls
 

00:22:19.760 --> 00:22:21.110 align:start position:0%
networks natively use non-blocking calls
to<00:22:20.000><c> allow</c><00:22:20.159><c> them</c><00:22:20.320><c> to</c><00:22:20.400><c> do</c><00:22:20.559><c> lots</c><00:22:20.720><c> of</c><00:22:20.799><c> things</c><00:22:20.960><c> at</c>

00:22:21.110 --> 00:22:21.120 align:start position:0%
to allow them to do lots of things at
 

00:22:21.120 --> 00:22:23.029 align:start position:0%
to allow them to do lots of things at
once.

00:22:23.029 --> 00:22:23.039 align:start position:0%
once.
 

00:22:23.039 --> 00:22:26.070 align:start position:0%
once.
I've<00:22:23.280><c> lost</c><00:22:23.520><c> my</c><00:22:23.679><c> cursor.</c><00:22:24.720><c> So,</c><00:22:25.360><c> uh,</c>

00:22:26.070 --> 00:22:26.080 align:start position:0%
I've lost my cursor. So, uh,
 

00:22:26.080 --> 00:22:29.990 align:start position:0%
I've lost my cursor. So, uh,
pointto-point<00:22:26.880><c> example,</c><00:22:28.159><c> um,</c><00:22:28.480><c> you</c><00:22:28.640><c> know,</c><00:22:29.679><c> if</c>

00:22:29.990 --> 00:22:30.000 align:start position:0%
pointto-point example, um, you know, if
 

00:22:30.000 --> 00:22:34.070 align:start position:0%
pointto-point example, um, you know, if
I,<00:22:30.559><c> um,</c><00:22:30.720><c> if</c><00:22:30.960><c> I'm</c><00:22:31.200><c> doing,</c><00:22:31.679><c> um,</c><00:22:32.640><c> if</c><00:22:32.960><c> I'm</c><00:22:33.200><c> doing,</c>

00:22:34.070 --> 00:22:34.080 align:start position:0%
I, um, if I'm doing, um, if I'm doing,
 

00:22:34.080 --> 00:22:36.070 align:start position:0%
I, um, if I'm doing, um, if I'm doing,
um,

00:22:36.070 --> 00:22:36.080 align:start position:0%
um,
 

00:22:36.080 --> 00:22:39.750 align:start position:0%
um,
uh,<00:22:37.360><c> a</c><00:22:37.520><c> halo</c><00:22:37.919><c> swapping,</c><00:22:38.400><c> okay,</c><00:22:39.200><c> I</c><00:22:39.360><c> want</c><00:22:39.600><c> to</c>

00:22:39.750 --> 00:22:39.760 align:start position:0%
uh, a halo swapping, okay, I want to
 

00:22:39.760 --> 00:22:41.669 align:start position:0%
uh, a halo swapping, okay, I want to
receive<00:22:40.080><c> data</c><00:22:40.400><c> from</c><00:22:40.559><c> my</c><00:22:40.720><c> up</c><00:22:40.960><c> neighbor,</c>

00:22:41.669 --> 00:22:41.679 align:start position:0%
receive data from my up neighbor,
 

00:22:41.679 --> 00:22:44.230 align:start position:0%
receive data from my up neighbor,
receive<00:22:42.000><c> data</c><00:22:42.240><c> from</c><00:22:42.400><c> my</c><00:22:42.559><c> down</c><00:22:42.799><c> neighbor,</c><00:22:43.600><c> send</c>

00:22:44.230 --> 00:22:44.240 align:start position:0%
receive data from my down neighbor, send
 

00:22:44.240 --> 00:22:45.909 align:start position:0%
receive data from my down neighbor, send
to<00:22:44.480><c> my</c><00:22:44.640><c> down</c><00:22:44.880><c> neighbor,</c><00:22:45.200><c> and</c><00:22:45.360><c> send</c><00:22:45.520><c> to</c><00:22:45.600><c> my</c><00:22:45.760><c> up</c>

00:22:45.909 --> 00:22:45.919 align:start position:0%
to my down neighbor, and send to my up
 

00:22:45.919 --> 00:22:47.190 align:start position:0%
to my down neighbor, and send to my up
neighbor.<00:22:46.159><c> I</c><00:22:46.320><c> want</c><00:22:46.400><c> to</c><00:22:46.480><c> do</c><00:22:46.559><c> a</c><00:22:46.720><c> send</c><00:22:46.880><c> and</c><00:22:47.039><c> a</c>

00:22:47.190 --> 00:22:47.200 align:start position:0%
neighbor. I want to do a send and a
 

00:22:47.200 --> 00:22:49.110 align:start position:0%
neighbor. I want to do a send and a
receive.<00:22:47.760><c> The</c><00:22:48.000><c> problem</c><00:22:48.159><c> with</c><00:22:48.320><c> NPI</c><00:22:48.720><c> is</c><00:22:48.880><c> if</c><00:22:48.960><c> I</c>

00:22:49.110 --> 00:22:49.120 align:start position:0%
receive. The problem with NPI is if I
 

00:22:49.120 --> 00:22:52.549 align:start position:0%
receive. The problem with NPI is if I
did<00:22:49.280><c> NPI</c><00:22:49.760><c> receive</c><00:22:50.159><c> here,</c><00:22:50.640><c> okay,</c><00:22:51.919><c> then</c><00:22:52.240><c> this</c>

00:22:52.549 --> 00:22:52.559 align:start position:0%
did NPI receive here, okay, then this
 

00:22:52.559 --> 00:22:55.190 align:start position:0%
did NPI receive here, okay, then this
would<00:22:52.799><c> deadlock</c><00:22:53.520><c> because</c><00:22:53.760><c> it</c><00:22:54.000><c> would</c><00:22:54.080><c> be</c><00:22:54.799><c> then</c>

00:22:55.190 --> 00:22:55.200 align:start position:0%
would deadlock because it would be then
 

00:22:55.200 --> 00:22:56.710 align:start position:0%
would deadlock because it would be then
then<00:22:55.679><c> because</c><00:22:56.000><c> everyone</c><00:22:56.320><c> would</c><00:22:56.480><c> be</c><00:22:56.559><c> sitting</c>

00:22:56.710 --> 00:22:56.720 align:start position:0%
then because everyone would be sitting
 

00:22:56.720 --> 00:22:57.990 align:start position:0%
then because everyone would be sitting
in<00:22:56.880><c> the</c><00:22:56.960><c> receive</c><00:22:57.200><c> and</c><00:22:57.280><c> nobody</c><00:22:57.600><c> would</c><00:22:57.760><c> get</c><00:22:57.919><c> to</c>

00:22:57.990 --> 00:22:58.000 align:start position:0%
in the receive and nobody would get to
 

00:22:58.000 --> 00:22:59.510 align:start position:0%
in the receive and nobody would get to
the<00:22:58.159><c> send.</c><00:22:58.480><c> Okay,</c><00:22:58.640><c> that's</c><00:22:58.880><c> the</c><00:22:59.039><c> problem</c><00:22:59.280><c> about</c>

00:22:59.510 --> 00:22:59.520 align:start position:0%
the send. Okay, that's the problem about
 

00:22:59.520 --> 00:23:01.830 align:start position:0%
the send. Okay, that's the problem about
about<00:22:59.840><c> blocking</c><00:23:00.320><c> calls.</c><00:23:01.039><c> If</c><00:23:01.280><c> everybody</c><00:23:01.600><c> calls</c>

00:23:01.830 --> 00:23:01.840 align:start position:0%
about blocking calls. If everybody calls
 

00:23:01.840 --> 00:23:04.070 align:start position:0%
about blocking calls. If everybody calls
the<00:23:02.000><c> receive</c><00:23:02.480><c> first</c><00:23:02.960><c> and</c><00:23:03.200><c> not</c><00:23:03.440><c> and</c><00:23:03.760><c> if</c><00:23:03.919><c> you</c>

00:23:04.070 --> 00:23:04.080 align:start position:0%
the receive first and not and if you
 

00:23:04.080 --> 00:23:05.270 align:start position:0%
the receive first and not and if you
want<00:23:04.159><c> to</c><00:23:04.240><c> do</c><00:23:04.400><c> the</c><00:23:04.559><c> receive</c><00:23:04.799><c> first,</c><00:23:05.039><c> if</c>

00:23:05.270 --> 00:23:05.280 align:start position:0%
want to do the receive first, if
 

00:23:05.280 --> 00:23:06.470 align:start position:0%
want to do the receive first, if
everyone<00:23:05.440><c> calls</c><00:23:05.679><c> the</c><00:23:05.840><c> receive,</c><00:23:06.159><c> everyone's</c>

00:23:06.470 --> 00:23:06.480 align:start position:0%
everyone calls the receive, everyone's
 

00:23:06.480 --> 00:23:08.149 align:start position:0%
everyone calls the receive, everyone's
sitting<00:23:06.640><c> in</c><00:23:06.799><c> the</c><00:23:06.960><c> receive</c><00:23:07.679><c> saying</c><00:23:07.919><c> where's</c>

00:23:08.149 --> 00:23:08.159 align:start position:0%
sitting in the receive saying where's
 

00:23:08.159 --> 00:23:09.909 align:start position:0%
sitting in the receive saying where's
the<00:23:08.320><c> send</c><00:23:08.559><c> but</c><00:23:08.720><c> nobody's</c><00:23:09.120><c> going</c><00:23:09.200><c> to</c><00:23:09.360><c> the</c><00:23:09.520><c> send.</c>

00:23:09.909 --> 00:23:09.919 align:start position:0%
the send but nobody's going to the send.
 

00:23:09.919 --> 00:23:12.390 align:start position:0%
the send but nobody's going to the send.
Okay,<00:23:10.080><c> you</c><00:23:10.240><c> get</c><00:23:10.320><c> this</c><00:23:10.480><c> catch</c><00:23:10.880><c> 22.</c><00:23:12.000><c> So</c><00:23:12.159><c> that's</c>

00:23:12.390 --> 00:23:12.400 align:start position:0%
Okay, you get this catch 22. So that's
 

00:23:12.400 --> 00:23:13.909 align:start position:0%
Okay, you get this catch 22. So that's
where<00:23:12.559><c> you</c><00:23:12.640><c> use</c><00:23:12.799><c> non-blocking.</c><00:23:13.520><c> You</c><00:23:13.679><c> say</c>

00:23:13.909 --> 00:23:13.919 align:start position:0%
where you use non-blocking. You say
 

00:23:13.919 --> 00:23:16.310 align:start position:0%
where you use non-blocking. You say
please<00:23:14.640><c> I'm</c><00:23:14.960><c> expecting</c><00:23:15.360><c> some</c><00:23:15.600><c> me</c><00:23:15.919><c> some</c><00:23:16.159><c> data</c>

00:23:16.310 --> 00:23:16.320 align:start position:0%
please I'm expecting some me some data
 

00:23:16.320 --> 00:23:18.310 align:start position:0%
please I'm expecting some me some data
from<00:23:16.480><c> my</c><00:23:16.640><c> up</c><00:23:16.880><c> neighbor.</c><00:23:17.440><c> I'm</c><00:23:17.679><c> expecting</c><00:23:18.159><c> some</c>

00:23:18.310 --> 00:23:18.320 align:start position:0%
from my up neighbor. I'm expecting some
 

00:23:18.320 --> 00:23:21.029 align:start position:0%
from my up neighbor. I'm expecting some
data<00:23:18.559><c> from</c><00:23:18.720><c> my</c><00:23:18.880><c> down</c><00:23:19.200><c> neighbor.</c><00:23:19.679><c> Okay.</c><00:23:20.799><c> But</c>

00:23:21.029 --> 00:23:21.039 align:start position:0%
data from my down neighbor. Okay. But
 

00:23:21.039 --> 00:23:23.510 align:start position:0%
data from my down neighbor. Okay. But
basically<00:23:22.000><c> return</c><00:23:22.400><c> control</c><00:23:22.720><c> to</c><00:23:22.880><c> me</c><00:23:23.039><c> issue</c><00:23:23.360><c> a</c>

00:23:23.510 --> 00:23:23.520 align:start position:0%
basically return control to me issue a
 

00:23:23.520 --> 00:23:26.230 align:start position:0%
basically return control to me issue a
non-blocking<00:23:24.240><c> call</c><00:23:24.720><c> where</c><00:23:24.960><c> I</c><00:23:25.120><c> I</c><00:23:25.280><c> I</c><00:23:25.360><c> I</c><00:23:25.840><c> get</c><00:23:26.000><c> a</c>

00:23:26.230 --> 00:23:26.240 align:start position:0%
non-blocking call where I I I I get a
 

00:23:26.240 --> 00:23:28.549 align:start position:0%
non-blocking call where I I I I get a
reference<00:23:26.640><c> to</c><00:23:26.880><c> this</c><00:23:27.120><c> to</c><00:23:27.360><c> this</c><00:23:27.919><c> communication</c>

00:23:28.549 --> 00:23:28.559 align:start position:0%
reference to this to this communication
 

00:23:28.559 --> 00:23:31.029 align:start position:0%
reference to this to this communication
in<00:23:28.799><c> this</c><00:23:28.960><c> request</c><00:23:29.360><c> which</c><00:23:29.520><c> is</c><00:23:29.679><c> like</c><00:23:29.840><c> a</c><00:23:30.000><c> ticket.</c>

00:23:31.029 --> 00:23:31.039 align:start position:0%
in this request which is like a ticket.
 

00:23:31.039 --> 00:23:33.029 align:start position:0%
in this request which is like a ticket.
And<00:23:31.200><c> then</c><00:23:31.440><c> I</c><00:23:31.600><c> can</c><00:23:31.760><c> do</c><00:23:31.840><c> the</c><00:23:32.000><c> sends</c><00:23:32.400><c> down</c><00:23:32.640><c> and</c><00:23:32.799><c> up.</c>

00:23:33.029 --> 00:23:33.039 align:start position:0%
And then I can do the sends down and up.
 

00:23:33.039 --> 00:23:35.430 align:start position:0%
And then I can do the sends down and up.
Whoops.<00:23:33.520><c> Sorry.</c><00:23:33.840><c> Which</c><00:23:34.080><c> match.</c><00:23:34.799><c> And</c><00:23:34.960><c> then</c><00:23:35.120><c> I</c>

00:23:35.430 --> 00:23:35.440 align:start position:0%
Whoops. Sorry. Which match. And then I
 

00:23:35.440 --> 00:23:37.430 align:start position:0%
Whoops. Sorry. Which match. And then I
have<00:23:35.600><c> to</c><00:23:35.760><c> wait</c><00:23:36.240><c> for</c><00:23:36.400><c> these</c><00:23:36.720><c> to</c><00:23:36.880><c> complete.</c><00:23:37.280><c> So</c>

00:23:37.430 --> 00:23:37.440 align:start position:0%
have to wait for these to complete. So
 

00:23:37.440 --> 00:23:39.270 align:start position:0%
have to wait for these to complete. So
this<00:23:37.840><c> this</c><00:23:38.159><c> means</c><00:23:38.400><c> that</c><00:23:38.559><c> I</c><00:23:38.720><c> know</c><00:23:38.880><c> at</c><00:23:39.120><c> this</c>

00:23:39.270 --> 00:23:39.280 align:start position:0%
this this means that I know at this
 

00:23:39.280 --> 00:23:41.270 align:start position:0%
this this means that I know at this
point<00:23:39.440><c> that</c><00:23:39.679><c> my</c><00:23:40.000><c> send</c><00:23:40.320><c> has</c><00:23:40.480><c> gone</c><00:23:40.799><c> down</c><00:23:40.960><c> and</c><00:23:41.120><c> my</c>

00:23:41.270 --> 00:23:41.280 align:start position:0%
point that my send has gone down and my
 

00:23:41.280 --> 00:23:43.830 align:start position:0%
point that my send has gone down and my
send<00:23:41.600><c> has</c><00:23:41.760><c> gone</c><00:23:42.000><c> up.</c><00:23:42.400><c> I</c><00:23:42.720><c> don't</c><00:23:42.960><c> know</c><00:23:43.120><c> if</c><00:23:43.440><c> I</c><00:23:43.600><c> this</c>

00:23:43.830 --> 00:23:43.840 align:start position:0%
send has gone up. I don't know if I this
 

00:23:43.840 --> 00:23:45.590 align:start position:0%
send has gone up. I don't know if I this
data<00:23:44.159><c> has</c><00:23:44.320><c> been</c><00:23:44.480><c> received.</c><00:23:45.039><c> So</c><00:23:45.200><c> I</c><00:23:45.360><c> have</c><00:23:45.440><c> to</c>

00:23:45.590 --> 00:23:45.600 align:start position:0%
data has been received. So I have to
 

00:23:45.600 --> 00:23:47.909 align:start position:0%
data has been received. So I have to
wait<00:23:45.840><c> on</c><00:23:46.080><c> these</c><00:23:46.400><c> to</c><00:23:46.559><c> complete.</c><00:23:47.520><c> And</c><00:23:47.679><c> it's</c>

00:23:47.909 --> 00:23:47.919 align:start position:0%
wait on these to complete. And it's
 

00:23:47.919 --> 00:23:49.909 align:start position:0%
wait on these to complete. And it's
that's<00:23:48.159><c> why</c><00:23:48.320><c> you</c><00:23:48.480><c> use</c><00:23:48.640><c> non-blocking.</c><00:23:49.520><c> It's</c><00:23:49.679><c> to</c>

00:23:49.909 --> 00:23:49.919 align:start position:0%
that's why you use non-blocking. It's to
 

00:23:49.919 --> 00:23:52.470 align:start position:0%
that's why you use non-blocking. It's to
avoid<00:23:50.320><c> deadlock.</c><00:23:51.200><c> Coming</c><00:23:51.440><c> back</c><00:23:51.600><c> to</c><00:23:51.760><c> what</c><00:23:52.080><c> Mark</c>

00:23:52.470 --> 00:23:52.480 align:start position:0%
avoid deadlock. Coming back to what Mark
 

00:23:52.480 --> 00:23:55.029 align:start position:0%
avoid deadlock. Coming back to what Mark
said<00:23:52.640><c> about</c><00:23:52.880><c> ordering,</c>

00:23:55.029 --> 00:23:55.039 align:start position:0%
said about ordering,
 

00:23:55.039 --> 00:23:59.590 align:start position:0%
said about ordering,
you<00:23:55.280><c> might</c><00:23:55.520><c> worry</c><00:23:56.320><c> that</c><00:23:57.280><c> um</c>

00:23:59.590 --> 00:23:59.600 align:start position:0%
you might worry that um
 

00:23:59.600 --> 00:24:05.830 align:start position:0%
you might worry that um
that<00:24:00.880><c> um</c><00:24:01.919><c> if</c><00:24:02.320><c> if</c><00:24:02.720><c> you</c><00:24:02.960><c> are</c><00:24:03.520><c> um</c><00:24:04.720><c> if</c><00:24:05.039><c> you're</c>

00:24:05.830 --> 00:24:05.840 align:start position:0%
that um if if you are um if you're
 

00:24:05.840 --> 00:24:08.630 align:start position:0%
that um if if you are um if you're
running<00:24:06.080><c> this</c><00:24:06.240><c> on</c><00:24:06.480><c> say</c><00:24:06.720><c> two</c><00:24:06.960><c> processes,</c>

00:24:08.630 --> 00:24:08.640 align:start position:0%
running this on say two processes,
 

00:24:08.640 --> 00:24:10.470 align:start position:0%
running this on say two processes,
your<00:24:08.880><c> up</c><00:24:09.039><c> and</c><00:24:09.200><c> your</c><00:24:09.360><c> down</c><00:24:09.679><c> neighbor</c><00:24:10.000><c> are</c><00:24:10.159><c> the</c>

00:24:10.470 --> 00:24:10.480 align:start position:0%
your up and your down neighbor are the
 

00:24:10.480 --> 00:24:13.750 align:start position:0%
your up and your down neighbor are the
same<00:24:10.880><c> process.</c><00:24:11.600><c> Okay,</c><00:24:12.559><c> so</c><00:24:12.799><c> you're</c><00:24:13.039><c> saying</c><00:24:13.520><c> I</c>

00:24:13.750 --> 00:24:13.760 align:start position:0%
same process. Okay, so you're saying I
 

00:24:13.760 --> 00:24:15.350 align:start position:0%
same process. Okay, so you're saying I
want<00:24:13.919><c> to</c><00:24:14.080><c> receive</c><00:24:14.400><c> two</c><00:24:14.640><c> messages.</c><00:24:15.200><c> So</c>

00:24:15.350 --> 00:24:15.360 align:start position:0%
want to receive two messages. So
 

00:24:15.360 --> 00:24:17.510 align:start position:0%
want to receive two messages. So
building<00:24:15.760><c> on</c><00:24:15.919><c> rank</c><00:24:16.159><c> zero</c><00:24:16.400><c> and</c><00:24:16.559><c> rank</c><00:24:16.799><c> one</c><00:24:17.279><c> and</c>

00:24:17.510 --> 00:24:17.520 align:start position:0%
building on rank zero and rank one and
 

00:24:17.520 --> 00:24:20.070 align:start position:0%
building on rank zero and rank one and
I've<00:24:17.760><c> got</c><00:24:18.320><c> cyclic</c><00:24:18.720><c> boundary</c><00:24:19.120><c> conditions.</c><00:24:19.840><c> My</c>

00:24:20.070 --> 00:24:20.080 align:start position:0%
I've got cyclic boundary conditions. My
 

00:24:20.080 --> 00:24:21.750 align:start position:0%
I've got cyclic boundary conditions. My
up<00:24:20.400><c> neighbor,</c><00:24:20.640><c> if</c><00:24:20.799><c> I'm</c><00:24:20.960><c> rank</c><00:24:21.120><c> zero,</c><00:24:21.440><c> my</c><00:24:21.600><c> up</c>

00:24:21.750 --> 00:24:21.760 align:start position:0%
up neighbor, if I'm rank zero, my up
 

00:24:21.760 --> 00:24:23.510 align:start position:0%
up neighbor, if I'm rank zero, my up
neighbor,<00:24:22.080><c> my</c><00:24:22.240><c> down</c><00:24:22.400><c> neighbor</c><00:24:22.720><c> are</c><00:24:22.960><c> both</c><00:24:23.120><c> rank</c>

00:24:23.510 --> 00:24:23.520 align:start position:0%
neighbor, my down neighbor are both rank
 

00:24:23.520 --> 00:24:25.750 align:start position:0%
neighbor, my down neighbor are both rank
one.<00:24:23.840><c> Okay,</c><00:24:24.400><c> so</c><00:24:24.559><c> I'm</c><00:24:24.799><c> receiving</c><00:24:25.200><c> two</c><00:24:25.360><c> messages</c>

00:24:25.750 --> 00:24:25.760 align:start position:0%
one. Okay, so I'm receiving two messages
 

00:24:25.760 --> 00:24:29.110 align:start position:0%
one. Okay, so I'm receiving two messages
from<00:24:25.919><c> rank</c><00:24:26.320><c> one.</c><00:24:27.440><c> Okay,</c><00:24:28.240><c> and</c><00:24:28.559><c> sending</c><00:24:28.880><c> two</c>

00:24:29.110 --> 00:24:29.120 align:start position:0%
from rank one. Okay, and sending two
 

00:24:29.120 --> 00:24:31.510 align:start position:0%
from rank one. Okay, and sending two
messages<00:24:29.360><c> to</c><00:24:29.600><c> rank</c><00:24:29.840><c> one.</c><00:24:30.559><c> How</c><00:24:30.799><c> do</c><00:24:30.880><c> I</c><00:24:31.120><c> make</c><00:24:31.279><c> sure</c>

00:24:31.510 --> 00:24:31.520 align:start position:0%
messages to rank one. How do I make sure
 

00:24:31.520 --> 00:24:33.190 align:start position:0%
messages to rank one. How do I make sure
that<00:24:31.600><c> the</c><00:24:31.840><c> correct</c><00:24:32.159><c> receive</c><00:24:32.640><c> matches</c><00:24:32.960><c> the</c>

00:24:33.190 --> 00:24:33.200 align:start position:0%
that the correct receive matches the
 

00:24:33.200 --> 00:24:36.070 align:start position:0%
that the correct receive matches the
correct<00:24:33.600><c> send?</c><00:24:34.320><c> Well,</c><00:24:34.559><c> I</c><00:24:34.720><c> could</c><00:24:34.880><c> use</c><00:24:35.200><c> tags,</c>

00:24:36.070 --> 00:24:36.080 align:start position:0%
correct send? Well, I could use tags,
 

00:24:36.080 --> 00:24:39.430 align:start position:0%
correct send? Well, I could use tags,
but<00:24:36.480><c> actually</c><00:24:37.279><c> if</c><00:24:37.520><c> I</c><00:24:37.760><c> order</c><00:24:38.080><c> them</c><00:24:38.559><c> then</c><00:24:38.880><c> this</c>

00:24:39.430 --> 00:24:39.440 align:start position:0%
but actually if I order them then this
 

00:24:39.440 --> 00:24:41.750 align:start position:0%
but actually if I order them then this
because<00:24:39.760><c> the</c><00:24:40.159><c> first</c><00:24:40.720><c> receive</c><00:24:41.039><c> I</c><00:24:41.360><c> choose</c><00:24:41.600><c> from</c>

00:24:41.750 --> 00:24:41.760 align:start position:0%
because the first receive I choose from
 

00:24:41.760 --> 00:24:44.390 align:start position:0%
because the first receive I choose from
my<00:24:41.919><c> up</c><00:24:42.159><c> neighbor,</c><00:24:42.960><c> okay,</c><00:24:43.520><c> as</c><00:24:43.760><c> a</c><00:24:43.840><c> receive</c><00:24:44.159><c> from</c>

00:24:44.390 --> 00:24:44.400 align:start position:0%
my up neighbor, okay, as a receive from
 

00:24:44.400 --> 00:24:46.789 align:start position:0%
my up neighbor, okay, as a receive from
my<00:24:44.559><c> up</c><00:24:44.799><c> neighbor,</c><00:24:45.360><c> my</c><00:24:45.600><c> first</c><00:24:45.919><c> send</c><00:24:46.159><c> is</c><00:24:46.400><c> to</c><00:24:46.640><c> the</c>

00:24:46.789 --> 00:24:46.799 align:start position:0%
my up neighbor, my first send is to the
 

00:24:46.799 --> 00:24:48.390 align:start position:0%
my up neighbor, my first send is to the
down<00:24:47.039><c> neighbor.</c><00:24:47.600><c> And</c><00:24:47.760><c> so,</c><00:24:48.000><c> because</c><00:24:48.159><c> I've</c>

00:24:48.390 --> 00:24:48.400 align:start position:0%
down neighbor. And so, because I've
 

00:24:48.400 --> 00:24:50.549 align:start position:0%
down neighbor. And so, because I've
carefully<00:24:48.799><c> ordered</c><00:24:49.200><c> these,</c><00:24:49.760><c> this</c><00:24:50.000><c> code</c><00:24:50.320><c> will</c>

00:24:50.549 --> 00:24:50.559 align:start position:0%
carefully ordered these, this code will
 

00:24:50.559 --> 00:24:52.950 align:start position:0%
carefully ordered these, this code will
always<00:24:50.880><c> work.</c><00:24:51.840><c> If</c><00:24:52.080><c> I</c><00:24:52.240><c> hadn't</c><00:24:52.559><c> carefully</c>

00:24:52.950 --> 00:24:52.960 align:start position:0%
always work. If I hadn't carefully
 

00:24:52.960 --> 00:24:54.470 align:start position:0%
always work. If I hadn't carefully
ordered<00:24:53.279><c> them,</c><00:24:53.520><c> it</c><00:24:53.760><c> could</c><00:24:53.919><c> potentially</c><00:24:54.320><c> have</c>

00:24:54.470 --> 00:24:54.480 align:start position:0%
ordered them, it could potentially have
 

00:24:54.480 --> 00:24:56.149 align:start position:0%
ordered them, it could potentially have
gone<00:24:54.640><c> wrong</c><00:24:54.880><c> on</c><00:24:55.120><c> small</c><00:24:55.360><c> numbers</c><00:24:55.600><c> of</c><00:24:55.760><c> processes</c>

00:24:56.149 --> 00:24:56.159 align:start position:0%
gone wrong on small numbers of processes
 

00:24:56.159 --> 00:24:57.669 align:start position:0%
gone wrong on small numbers of processes
where<00:24:56.400><c> my</c><00:24:56.559><c> up</c><00:24:56.720><c> and</c><00:24:56.880><c> down</c><00:24:57.039><c> neighbor</c><00:24:57.360><c> are</c><00:24:57.520><c> the</c>

00:24:57.669 --> 00:24:57.679 align:start position:0%
where my up and down neighbor are the
 

00:24:57.679 --> 00:24:59.430 align:start position:0%
where my up and down neighbor are the
same.<00:24:58.159><c> And</c><00:24:58.320><c> in</c><00:24:58.480><c> that</c><00:24:58.640><c> case,</c><00:24:58.880><c> I</c><00:24:59.120><c> could</c><00:24:59.279><c> have</c>

00:24:59.430 --> 00:24:59.440 align:start position:0%
same. And in that case, I could have
 

00:24:59.440 --> 00:25:01.430 align:start position:0%
same. And in that case, I could have
used<00:24:59.679><c> tags.</c><00:25:00.400><c> But</c><00:25:00.559><c> you</c><00:25:00.720><c> don't</c><00:25:00.960><c> have</c><00:25:01.039><c> to</c><00:25:01.279><c> use</c>

00:25:01.430 --> 00:25:01.440 align:start position:0%
used tags. But you don't have to use
 

00:25:01.440 --> 00:25:03.029 align:start position:0%
used tags. But you don't have to use
tags<00:25:01.840><c> if</c><00:25:02.000><c> you</c><00:25:02.159><c> understand</c><00:25:02.480><c> how</c><00:25:02.720><c> message</c>

00:25:03.029 --> 00:25:03.039 align:start position:0%
tags if you understand how message
 

00:25:03.039 --> 00:25:04.710 align:start position:0%
tags if you understand how message
matching<00:25:03.440><c> works.</c><00:25:03.840><c> So</c><00:25:04.000><c> it's</c><00:25:04.240><c> important</c><00:25:04.480><c> that</c>

00:25:04.710 --> 00:25:04.720 align:start position:0%
matching works. So it's important that
 

00:25:04.720 --> 00:25:07.110 align:start position:0%
matching works. So it's important that
that<00:25:05.039><c> send</c><00:25:05.440><c> down</c>

00:25:07.110 --> 00:25:07.120 align:start position:0%
that send down
 

00:25:07.120 --> 00:25:09.430 align:start position:0%
that send down
is<00:25:07.360><c> guaranteed</c><00:25:07.840><c> to</c><00:25:08.080><c> match</c><00:25:08.400><c> that</c><00:25:08.720><c> receive</c><00:25:09.120><c> up</c>

00:25:09.430 --> 00:25:09.440 align:start position:0%
is guaranteed to match that receive up
 

00:25:09.440 --> 00:25:11.269 align:start position:0%
is guaranteed to match that receive up
because<00:25:09.679><c> that</c><00:25:09.919><c> receiver</c><00:25:10.320><c> was</c><00:25:10.480><c> posted</c><00:25:10.960><c> first.</c>

00:25:11.269 --> 00:25:11.279 align:start position:0%
because that receiver was posted first.
 

00:25:11.279 --> 00:25:12.870 align:start position:0%
because that receiver was posted first.
So<00:25:11.440><c> even</c><00:25:11.600><c> if</c><00:25:11.760><c> the</c><00:25:12.000><c> down</c><00:25:12.240><c> neighbor</c><00:25:12.480><c> and</c><00:25:12.559><c> the</c><00:25:12.720><c> up</c>

00:25:12.870 --> 00:25:12.880 align:start position:0%
So even if the down neighbor and the up
 

00:25:12.880 --> 00:25:14.870 align:start position:0%
So even if the down neighbor and the up
neighbor<00:25:13.120><c> are</c><00:25:13.279><c> the</c><00:25:13.440><c> same</c><00:25:14.159><c> then</c><00:25:14.400><c> this</c><00:25:14.640><c> code</c>

00:25:14.870 --> 00:25:14.880 align:start position:0%
neighbor are the same then this code
 

00:25:14.880 --> 00:25:16.870 align:start position:0%
neighbor are the same then this code
will<00:25:15.120><c> work.</c><00:25:15.760><c> That's</c><00:25:15.919><c> a</c><00:25:16.080><c> slight</c><00:25:16.320><c> subtlety</c><00:25:16.720><c> and</c>

00:25:16.870 --> 00:25:16.880 align:start position:0%
will work. That's a slight subtlety and
 

00:25:16.880 --> 00:25:19.029 align:start position:0%
will work. That's a slight subtlety and
the<00:25:17.039><c> main</c><00:25:17.200><c> reason</c><00:25:17.360><c> here</c><00:25:17.600><c> is</c><00:25:17.760><c> is</c><00:25:17.919><c> to</c><00:25:18.159><c> show</c><00:25:18.799><c> why</c>

00:25:19.029 --> 00:25:19.039 align:start position:0%
the main reason here is is to show why
 

00:25:19.039 --> 00:25:22.549 align:start position:0%
the main reason here is is to show why
you<00:25:19.200><c> use</c><00:25:19.279><c> non-blocking</c><00:25:19.919><c> communications.</c>

00:25:22.549 --> 00:25:22.559 align:start position:0%
you use non-blocking communications.
 

00:25:22.559 --> 00:25:25.110 align:start position:0%
you use non-blocking communications.
Um<00:25:23.279><c> NPI</c><00:25:23.679><c> also</c><00:25:23.919><c> has</c><00:25:24.559><c> persistent</c>

00:25:25.110 --> 00:25:25.120 align:start position:0%
Um NPI also has persistent
 

00:25:25.120 --> 00:25:26.470 align:start position:0%
Um NPI also has persistent
communications.<00:25:25.600><c> It's</c><00:25:25.840><c> a</c><00:25:26.000><c> bit</c><00:25:26.080><c> strange</c><00:25:26.320><c> in</c>

00:25:26.470 --> 00:25:26.480 align:start position:0%
communications. It's a bit strange in
 

00:25:26.480 --> 00:25:28.789 align:start position:0%
communications. It's a bit strange in
NPI<00:25:27.039><c> that</c>

00:25:28.789 --> 00:25:28.799 align:start position:0%
NPI that
 

00:25:28.799 --> 00:25:31.669 align:start position:0%
NPI that
um<00:25:29.919><c> every</c><00:25:30.159><c> time</c><00:25:30.320><c> you</c><00:25:30.480><c> call</c><00:25:30.640><c> it</c><00:25:30.960><c> if</c><00:25:31.120><c> you</c><00:25:31.200><c> do</c><00:25:31.360><c> halo</c>

00:25:31.669 --> 00:25:31.679 align:start position:0%
um every time you call it if you do halo
 

00:25:31.679 --> 00:25:33.750 align:start position:0%
um every time you call it if you do halo
swapping<00:25:32.080><c> you're</c><00:25:32.320><c> calling</c><00:25:32.480><c> an</c><00:25:32.640><c> MPI</c><00:25:33.200><c> send</c><00:25:33.360><c> of</c><00:25:33.600><c> a</c>

00:25:33.750 --> 00:25:33.760 align:start position:0%
swapping you're calling an MPI send of a
 

00:25:33.760 --> 00:25:37.029 align:start position:0%
swapping you're calling an MPI send of a
particular<00:25:34.080><c> buffer</c><00:25:34.960><c> to</c><00:25:35.200><c> a</c><00:25:36.080><c> the</c><00:25:36.400><c> parameters</c><00:25:36.799><c> to</c>

00:25:37.029 --> 00:25:37.039 align:start position:0%
particular buffer to a the parameters to
 

00:25:37.039 --> 00:25:38.710 align:start position:0%
particular buffer to a the parameters to
your<00:25:37.200><c> send</c><00:25:37.520><c> are</c><00:25:37.679><c> the</c><00:25:37.919><c> same</c><00:25:38.080><c> and</c><00:25:38.240><c> you</c><00:25:38.400><c> call</c><00:25:38.559><c> it</c>

00:25:38.710 --> 00:25:38.720 align:start position:0%
your send are the same and you call it
 

00:25:38.720 --> 00:25:43.669 align:start position:0%
your send are the same and you call it
millions<00:25:39.039><c> of</c><00:25:39.200><c> times.</c><00:25:39.600><c> Okay.</c><00:25:40.559><c> Um</c><00:25:41.520><c> so</c><00:25:42.080><c> MPI</c>

00:25:43.669 --> 00:25:43.679 align:start position:0%
millions of times. Okay. Um so MPI
 

00:25:43.679 --> 00:25:45.430 align:start position:0%
millions of times. Okay. Um so MPI
um<00:25:44.240><c> also</c><00:25:44.559><c> defines</c><00:25:44.960><c> persistent</c>

00:25:45.430 --> 00:25:45.440 align:start position:0%
um also defines persistent
 

00:25:45.440 --> 00:25:47.350 align:start position:0%
um also defines persistent
communications<00:25:46.080><c> where</c><00:25:46.240><c> you</c><00:25:46.400><c> say</c><00:25:46.880><c> here's</c><00:25:47.120><c> an</c>

00:25:47.350 --> 00:25:47.360 align:start position:0%
communications where you say here's an
 

00:25:47.360 --> 00:25:49.750 align:start position:0%
communications where you say here's an
operation<00:25:47.679><c> I</c><00:25:47.840><c> want</c><00:25:48.000><c> to</c><00:25:48.080><c> do</c><00:25:48.240><c> lots</c><00:25:48.559><c> of</c><00:25:48.640><c> times.</c><00:25:49.600><c> So</c>

00:25:49.750 --> 00:25:49.760 align:start position:0%
operation I want to do lots of times. So
 

00:25:49.760 --> 00:25:51.510 align:start position:0%
operation I want to do lots of times. So
you<00:25:49.919><c> initiate</c><00:25:50.320><c> it</c><00:25:50.480><c> and</c><00:25:50.640><c> then</c><00:25:50.720><c> you</c><00:25:50.880><c> say</c><00:25:51.120><c> do</c><00:25:51.279><c> that</c>

00:25:51.510 --> 00:25:51.520 align:start position:0%
you initiate it and then you say do that
 

00:25:51.520 --> 00:25:55.430 align:start position:0%
you initiate it and then you say do that
operation.<00:25:52.960><c> Um,</c><00:25:53.760><c> in</c><00:25:54.000><c> practice</c><00:25:54.799><c> that</c><00:25:55.120><c> doesn't</c>

00:25:55.430 --> 00:25:55.440 align:start position:0%
operation. Um, in practice that doesn't
 

00:25:55.440 --> 00:25:57.110 align:start position:0%
operation. Um, in practice that doesn't
help<00:25:55.760><c> much</c><00:25:56.000><c> because</c><00:25:56.240><c> for</c><00:25:56.480><c> point-to-point</c>

00:25:57.110 --> 00:25:57.120 align:start position:0%
help much because for point-to-point
 

00:25:57.120 --> 00:25:58.710 align:start position:0%
help much because for point-to-point
communication<00:25:57.600><c> the</c><00:25:57.840><c> overhead</c><00:25:58.159><c> of</c><00:25:58.320><c> of</c>

00:25:58.710 --> 00:25:58.720 align:start position:0%
communication the overhead of of
 

00:25:58.720 --> 00:26:00.310 align:start position:0%
communication the overhead of of
processing<00:25:59.200><c> the</c><00:25:59.279><c> argument</c><00:25:59.679><c> list</c><00:25:59.840><c> is</c><00:26:00.080><c> pretty</c>

00:26:00.310 --> 00:26:00.320 align:start position:0%
processing the argument list is pretty
 

00:26:00.320 --> 00:26:03.110 align:start position:0%
processing the argument list is pretty
small.<00:26:01.360><c> Uh,</c><00:26:01.679><c> for</c><00:26:01.919><c> collectives</c><00:26:02.559><c> there's</c><00:26:02.799><c> a</c><00:26:02.960><c> lot</c>

00:26:03.110 --> 00:26:03.120 align:start position:0%
small. Uh, for collectives there's a lot
 

00:26:03.120 --> 00:26:04.950 align:start position:0%
small. Uh, for collectives there's a lot
more<00:26:03.279><c> that</c><00:26:03.520><c> can</c><00:26:03.679><c> be</c><00:26:03.840><c> done.</c><00:26:04.159><c> Okay,</c><00:26:04.400><c> if</c><00:26:04.559><c> you</c><00:26:04.720><c> call</c>

00:26:04.950 --> 00:26:04.960 align:start position:0%
more that can be done. Okay, if you call
 

00:26:04.960 --> 00:26:07.590 align:start position:0%
more that can be done. Okay, if you call
an<00:26:05.120><c> or</c><00:26:05.440><c> reduce</c><00:26:06.400><c> there's</c><00:26:06.799><c> 101</c><00:26:07.360><c> different</c>

00:26:07.590 --> 00:26:07.600 align:start position:0%
an or reduce there's 101 different
 

00:26:07.600 --> 00:26:10.710 align:start position:0%
an or reduce there's 101 different
algorithms<00:26:08.159><c> that</c><00:26:08.640><c> MPI</c><00:26:09.200><c> could</c><00:26:09.360><c> use</c><00:26:09.600><c> to</c><00:26:09.760><c> do</c><00:26:09.919><c> that</c>

00:26:10.710 --> 00:26:10.720 align:start position:0%
algorithms that MPI could use to do that
 

00:26:10.720 --> 00:26:12.390 align:start position:0%
algorithms that MPI could use to do that
and<00:26:10.960><c> which</c><00:26:11.200><c> is</c><00:26:11.360><c> the</c><00:26:11.520><c> most</c><00:26:11.679><c> efficient</c><00:26:12.080><c> will</c>

00:26:12.390 --> 00:26:12.400 align:start position:0%
and which is the most efficient will
 

00:26:12.400 --> 00:26:14.470 align:start position:0%
and which is the most efficient will
depend<00:26:12.799><c> on</c><00:26:13.440><c> how</c><00:26:13.679><c> many</c><00:26:13.840><c> processes</c><00:26:14.320><c> you're</c>

00:26:14.470 --> 00:26:14.480 align:start position:0%
depend on how many processes you're
 

00:26:14.480 --> 00:26:16.950 align:start position:0%
depend on how many processes you're
running<00:26:14.640><c> in</c><00:26:14.880><c> how</c><00:26:15.039><c> big</c><00:26:15.200><c> the</c><00:26:15.360><c> buffer</c><00:26:15.679><c> sizes</c><00:26:16.000><c> are</c>

00:26:16.950 --> 00:26:16.960 align:start position:0%
running in how big the buffer sizes are
 

00:26:16.960 --> 00:26:19.110 align:start position:0%
running in how big the buffer sizes are
and<00:26:17.279><c> so</c>

00:26:19.110 --> 00:26:19.120 align:start position:0%
and so
 

00:26:19.120 --> 00:26:20.870 align:start position:0%
and so
persistent<00:26:19.600><c> collectives</c><00:26:20.080><c> are</c><00:26:20.240><c> now</c><00:26:20.400><c> a</c><00:26:20.480><c> part</c><00:26:20.640><c> of</c>

00:26:20.870 --> 00:26:20.880 align:start position:0%
persistent collectives are now a part of
 

00:26:20.880 --> 00:26:23.669 align:start position:0%
persistent collectives are now a part of
MPI.<00:26:21.760><c> Um</c><00:26:22.640><c> but</c><00:26:22.799><c> they</c><00:26:23.039><c> have</c><00:26:23.200><c> actually</c><00:26:23.440><c> been</c>

00:26:23.669 --> 00:26:23.679 align:start position:0%
MPI. Um but they have actually been
 

00:26:23.679 --> 00:26:25.830 align:start position:0%
MPI. Um but they have actually been
persistent<00:26:24.559><c> operations</c><00:26:25.120><c> have</c><00:26:25.279><c> been</c><00:26:25.360><c> a</c><00:26:25.520><c> part</c><00:26:25.679><c> I</c>

00:26:25.830 --> 00:26:25.840 align:start position:0%
persistent operations have been a part I
 

00:26:25.840 --> 00:26:27.350 align:start position:0%
persistent operations have been a part I
have<00:26:25.919><c> an</c><00:26:26.080><c> example</c><00:26:26.320><c> later</c><00:26:26.559><c> on</c><00:26:26.880><c> have</c><00:26:27.120><c> been</c><00:26:27.200><c> a</c>

00:26:27.350 --> 00:26:27.360 align:start position:0%
have an example later on have been a
 

00:26:27.360 --> 00:26:29.830 align:start position:0%
have an example later on have been a
part<00:26:27.520><c> of</c><00:26:27.760><c> NPI</c><00:26:28.799><c> for</c><00:26:29.039><c> many</c><00:26:29.279><c> years</c><00:26:29.520><c> but</c><00:26:29.679><c> they</c>

00:26:29.830 --> 00:26:29.840 align:start position:0%
part of NPI for many years but they
 

00:26:29.840 --> 00:26:32.230 align:start position:0%
part of NPI for many years but they
weren't<00:26:30.080><c> much</c><00:26:30.320><c> use</c><00:26:31.200><c> persistent</c><00:26:31.600><c> claims</c><00:26:32.000><c> are</c>

00:26:32.230 --> 00:26:32.240 align:start position:0%
weren't much use persistent claims are
 

00:26:32.240 --> 00:26:34.789 align:start position:0%
weren't much use persistent claims are
in<00:26:32.400><c> principle</c><00:26:33.120><c> very</c><00:26:33.520><c> useful</c><00:26:34.320><c> because</c><00:26:34.559><c> they</c>

00:26:34.789 --> 00:26:34.799 align:start position:0%
in principle very useful because they
 

00:26:34.799 --> 00:26:37.110 align:start position:0%
in principle very useful because they
allow<00:26:35.039><c> NPI</c><00:26:35.520><c> to</c><00:26:35.679><c> say</c><00:26:35.919><c> David</c><00:26:36.240><c> wants</c><00:26:36.400><c> to</c><00:26:36.480><c> do</c><00:26:36.880><c> by</c><00:26:36.880><c> by</c>

00:26:37.110 --> 00:26:37.120 align:start position:0%
allow NPI to say David wants to do by by
 

00:26:37.120 --> 00:26:38.310 align:start position:0%
allow NPI to say David wants to do by by
saying<00:26:37.279><c> you're</c><00:26:37.440><c> doing</c><00:26:37.600><c> something</c><00:26:38.159><c> you're</c>

00:26:38.310 --> 00:26:38.320 align:start position:0%
saying you're doing something you're
 

00:26:38.320 --> 00:26:39.750 align:start position:0%
saying you're doing something you're
saying<00:26:38.480><c> NPI</c><00:26:38.880><c> I'm</c><00:26:39.039><c> going</c><00:26:39.039><c> to</c><00:26:39.120><c> do</c><00:26:39.200><c> this</c><00:26:39.440><c> lots</c><00:26:39.600><c> and</c>

00:26:39.750 --> 00:26:39.760 align:start position:0%
saying NPI I'm going to do this lots and
 

00:26:39.760 --> 00:26:41.669 align:start position:0%
saying NPI I'm going to do this lots and
lots<00:26:39.919><c> of</c><00:26:40.080><c> times</c><00:26:40.559><c> to</c><00:26:40.799><c> NPI</c><00:26:41.200><c> could</c><00:26:41.279><c> then</c><00:26:41.440><c> say</c><00:26:41.600><c> well</c>

00:26:41.669 --> 00:26:41.679 align:start position:0%
lots of times to NPI could then say well
 

00:26:41.679 --> 00:26:43.190 align:start position:0%
lots of times to NPI could then say well
it's<00:26:41.840><c> worth</c><00:26:42.000><c> me</c><00:26:42.159><c> going</c><00:26:42.320><c> away</c><00:26:42.559><c> and</c><00:26:42.720><c> trying</c><00:26:42.960><c> up</c>

00:26:43.190 --> 00:26:43.200 align:start position:0%
it's worth me going away and trying up
 

00:26:43.200 --> 00:26:44.390 align:start position:0%
it's worth me going away and trying up
50<00:26:43.440><c> different</c><00:26:43.600><c> ways</c><00:26:43.840><c> and</c><00:26:44.000><c> working</c><00:26:44.159><c> out</c><00:26:44.320><c> what</c>

00:26:44.390 --> 00:26:44.400 align:start position:0%
50 different ways and working out what
 

00:26:44.400 --> 00:26:46.710 align:start position:0%
50 different ways and working out what
the<00:26:44.559><c> best</c><00:26:44.720><c> way</c><00:26:44.880><c> is</c>

00:26:46.710 --> 00:26:46.720 align:start position:0%
the best way is
 

00:26:46.720 --> 00:26:48.950 align:start position:0%
the best way is
and<00:26:46.880><c> the</c><00:26:47.039><c> way</c><00:26:47.200><c> that</c><00:26:47.279><c> persistent</c><00:26:47.840><c> works</c><00:26:48.080><c> is</c><00:26:48.720><c> you</c>

00:26:48.950 --> 00:26:48.960 align:start position:0%
and the way that persistent works is you
 

00:26:48.960 --> 00:26:52.470 align:start position:0%
and the way that persistent works is you
don't<00:26:49.520><c> do</c><00:26:50.320><c> NPI</c><00:26:50.880><c> I'll</c><00:26:51.120><c> receive</c><00:26:51.520><c> NPI</c><00:26:52.000><c> I</c><00:26:52.159><c> receive</c>

00:26:52.470 --> 00:26:52.480 align:start position:0%
don't do NPI I'll receive NPI I receive
 

00:26:52.480 --> 00:26:57.510 align:start position:0%
don't do NPI I'll receive NPI I receive
NPI<00:26:52.960><c> send</c><00:26:53.279><c> NPI</c><00:26:53.760><c> send</c><00:26:54.640><c> you</c><00:26:54.880><c> say</c><00:26:55.520><c> um</c><00:26:56.640><c> NPI</c><00:26:57.120><c> receive</c>

00:26:57.510 --> 00:26:57.520 align:start position:0%
NPI send NPI send you say um NPI receive
 

00:26:57.520 --> 00:26:59.590 align:start position:0%
NPI send NPI send you say um NPI receive
in<00:26:57.679><c> it</c><00:26:58.240><c> you're</c><00:26:58.480><c> saying</c><00:26:58.720><c> I</c><00:26:58.880><c> am</c><00:26:59.039><c> going</c><00:26:59.200><c> to</c><00:26:59.360><c> want</c>

00:26:59.590 --> 00:26:59.600 align:start position:0%
in it you're saying I am going to want
 

00:26:59.600 --> 00:27:02.070 align:start position:0%
in it you're saying I am going to want
to<00:26:59.760><c> do</c><00:26:59.919><c> this</c><00:27:00.159><c> operation</c><00:27:00.559><c> in</c><00:27:00.799><c> the</c><00:27:00.960><c> future</c><00:27:01.840><c> I'm</c>

00:27:02.070 --> 00:27:02.080 align:start position:0%
to do this operation in the future I'm
 

00:27:02.080 --> 00:27:03.590 align:start position:0%
to do this operation in the future I'm
going<00:27:02.240><c> to</c><00:27:02.320><c> want</c><00:27:02.400><c> to</c><00:27:02.559><c> do</c><00:27:02.720><c> this</c><00:27:02.799><c> in</c><00:27:02.960><c> the</c><00:27:03.120><c> future</c>

00:27:03.590 --> 00:27:03.600 align:start position:0%
going to want to do this in the future
 

00:27:03.600 --> 00:27:06.390 align:start position:0%
going to want to do this in the future
and<00:27:03.760><c> these</c><00:27:04.159><c> requests</c><00:27:04.799><c> then</c><00:27:05.600><c> so</c><00:27:05.840><c> this</c><00:27:06.080><c> doesn't</c>

00:27:06.390 --> 00:27:06.400 align:start position:0%
and these requests then so this doesn't
 

00:27:06.400 --> 00:27:08.950 align:start position:0%
and these requests then so this doesn't
do<00:27:06.880><c> the</c><00:27:07.200><c> send</c><00:27:07.440><c> and</c><00:27:07.600><c> the</c><00:27:07.760><c> receive</c><00:27:08.400><c> it</c><00:27:08.640><c> just</c><00:27:08.799><c> says</c>

00:27:08.950 --> 00:27:08.960 align:start position:0%
do the send and the receive it just says
 

00:27:08.960 --> 00:27:10.390 align:start position:0%
do the send and the receive it just says
I<00:27:09.200><c> want</c><00:27:09.440><c> going</c><00:27:09.520><c> to</c><00:27:09.679><c> want</c><00:27:09.760><c> to</c><00:27:09.919><c> do</c><00:27:10.000><c> these</c><00:27:10.240><c> with</c>

00:27:10.390 --> 00:27:10.400 align:start position:0%
I want going to want to do these with
 

00:27:10.400 --> 00:27:12.230 align:start position:0%
I want going to want to do these with
all<00:27:10.559><c> these</c><00:27:10.799><c> arguments</c><00:27:11.360><c> these</c><00:27:11.679><c> buffers</c><00:27:12.080><c> and</c>

00:27:12.230 --> 00:27:12.240 align:start position:0%
all these arguments these buffers and
 

00:27:12.240 --> 00:27:14.310 align:start position:0%
all these arguments these buffers and
these<00:27:12.720><c> counts</c><00:27:13.120><c> and</c><00:27:13.279><c> these</c><00:27:13.440><c> data</c><00:27:13.760><c> types</c><00:27:14.000><c> in</c><00:27:14.159><c> the</c>

00:27:14.310 --> 00:27:14.320 align:start position:0%
these counts and these data types in the
 

00:27:14.320 --> 00:27:16.710 align:start position:0%
these counts and these data types in the
future<00:27:15.039><c> you</c><00:27:15.279><c> get</c><00:27:15.440><c> back</c><00:27:15.679><c> these</c><00:27:16.000><c> requests</c><00:27:16.400><c> which</c>

00:27:16.710 --> 00:27:16.720 align:start position:0%
future you get back these requests which
 

00:27:16.720 --> 00:27:18.789 align:start position:0%
future you get back these requests which
refer<00:27:16.960><c> to</c><00:27:17.120><c> these</c><00:27:17.360><c> and</c><00:27:17.520><c> then</c><00:27:17.679><c> you</c><00:27:17.760><c> do</c><00:27:17.919><c> npi</c><00:27:18.480><c> start</c>

00:27:18.789 --> 00:27:18.799 align:start position:0%
refer to these and then you do npi start
 

00:27:18.799 --> 00:27:22.070 align:start position:0%
refer to these and then you do npi start
all<00:27:19.440><c> this</c><00:27:19.679><c> says</c><00:27:20.000><c> start</c><00:27:20.320><c> them</c>

00:27:22.070 --> 00:27:22.080 align:start position:0%
all this says start them
 

00:27:22.080 --> 00:27:24.149 align:start position:0%
all this says start them
So<00:27:22.799><c> again,</c><00:27:23.120><c> for</c><00:27:23.279><c> pointto-point,</c><00:27:23.919><c> it's</c>

00:27:24.149 --> 00:27:24.159 align:start position:0%
So again, for pointto-point, it's
 

00:27:24.159 --> 00:27:26.310 align:start position:0%
So again, for pointto-point, it's
probably<00:27:24.400><c> not</c><00:27:24.640><c> worth</c><00:27:24.880><c> the</c><00:27:25.200><c> effort,</c><00:27:25.840><c> but</c><00:27:26.159><c> for</c>

00:27:26.310 --> 00:27:26.320 align:start position:0%
probably not worth the effort, but for
 

00:27:26.320 --> 00:27:28.390 align:start position:0%
probably not worth the effort, but for
for<00:27:26.480><c> for</c><00:27:27.039><c> collectors,</c><00:27:27.520><c> it</c><00:27:27.760><c> may</c><00:27:27.840><c> be</c><00:27:28.000><c> worth</c><00:27:28.159><c> the</c>

00:27:28.390 --> 00:27:28.400 align:start position:0%
for for collectors, it may be worth the
 

00:27:28.400 --> 00:27:31.750 align:start position:0%
for for collectors, it may be worth the
effort.<00:27:29.039><c> There</c><00:27:29.279><c> is</c><00:27:29.520><c> a</c><00:27:29.679><c> slight</c>

00:27:31.750 --> 00:27:31.760 align:start position:0%
effort. There is a slight
 

00:27:31.760 --> 00:27:33.990 align:start position:0%
effort. There is a slight
um

00:27:33.990 --> 00:27:34.000 align:start position:0%
um
 

00:27:34.000 --> 00:27:37.190 align:start position:0%
um
caveat<00:27:34.480><c> here</c><00:27:34.720><c> that</c><00:27:35.120><c> that</c><00:27:35.360><c> that</c><00:27:35.679><c> the</c><00:27:35.919><c> order</c><00:27:36.240><c> of</c>

00:27:37.190 --> 00:27:37.200 align:start position:0%
caveat here that that that the order of
 

00:27:37.200 --> 00:27:38.789 align:start position:0%
caveat here that that that the order of
persistent<00:27:37.679><c> calls</c><00:27:37.919><c> is</c><00:27:38.159><c> not</c><00:27:38.240><c> guaranteed.</c><00:27:38.720><c> So</c>

00:27:38.789 --> 00:27:38.799 align:start position:0%
persistent calls is not guaranteed. So
 

00:27:38.799 --> 00:27:40.470 align:start position:0%
persistent calls is not guaranteed. So
when<00:27:39.039><c> you</c><00:27:39.120><c> start</c><00:27:39.360><c> all</c><00:27:39.679><c> can</c><00:27:39.760><c> start</c><00:27:40.000><c> them</c><00:27:40.080><c> in</c><00:27:40.240><c> any</c>

00:27:40.470 --> 00:27:40.480 align:start position:0%
when you start all can start them in any
 

00:27:40.480 --> 00:27:42.710 align:start position:0%
when you start all can start them in any
order.<00:27:41.200><c> That</c><00:27:41.360><c> means</c><00:27:41.679><c> to</c><00:27:41.919><c> get</c><00:27:42.080><c> correct</c><00:27:42.400><c> message</c>

00:27:42.710 --> 00:27:42.720 align:start position:0%
order. That means to get correct message
 

00:27:42.720 --> 00:27:44.470 align:start position:0%
order. That means to get correct message
matching,<00:27:43.120><c> you</c><00:27:43.279><c> have</c><00:27:43.360><c> to</c><00:27:43.520><c> use</c><00:27:43.679><c> tags.</c><00:27:44.159><c> It's</c><00:27:44.400><c> a</c>

00:27:44.470 --> 00:27:44.480 align:start position:0%
matching, you have to use tags. It's a
 

00:27:44.480 --> 00:27:47.430 align:start position:0%
matching, you have to use tags. It's a
bit<00:27:44.559><c> of</c><00:27:44.720><c> a</c><00:27:45.919><c> um</c><00:27:46.159><c> but</c><00:27:46.400><c> persistent</c><00:27:46.880><c> calls</c><00:27:47.200><c> I</c><00:27:47.360><c> mean</c>

00:27:47.430 --> 00:27:47.440 align:start position:0%
bit of a um but persistent calls I mean
 

00:27:47.440 --> 00:27:49.350 align:start position:0%
bit of a um but persistent calls I mean
they're<00:27:47.679><c> not</c><00:27:48.159><c> commonly</c><00:27:48.640><c> used</c><00:27:48.880><c> but</c><00:27:49.039><c> they</c><00:27:49.200><c> may</c>

00:27:49.350 --> 00:27:49.360 align:start position:0%
they're not commonly used but they may
 

00:27:49.360 --> 00:27:50.710 align:start position:0%
they're not commonly used but they may
be<00:27:49.520><c> useful</c><00:27:49.840><c> if</c><00:27:50.000><c> you're</c><00:27:50.240><c> doing</c><00:27:50.400><c> lots</c><00:27:50.640><c> of</c>

00:27:50.710 --> 00:27:50.720 align:start position:0%
be useful if you're doing lots of
 

00:27:50.720 --> 00:27:52.549 align:start position:0%
be useful if you're doing lots of
collectives.<00:27:51.440><c> It</c><00:27:51.679><c> depends</c><00:27:52.000><c> on</c><00:27:52.159><c> the</c><00:27:52.320><c> quality</c>

00:27:52.549 --> 00:27:52.559 align:start position:0%
collectives. It depends on the quality
 

00:27:52.559 --> 00:27:55.510 align:start position:0%
collectives. It depends on the quality
of<00:27:52.640><c> the</c><00:27:52.799><c> implementation.</c>

00:27:55.510 --> 00:27:55.520 align:start position:0%
of the implementation.
 

00:27:55.520 --> 00:27:57.110 align:start position:0%
of the implementation.
Uh<00:27:55.840><c> we've</c><00:27:56.159><c> talked</c><00:27:56.320><c> about</c><00:27:56.480><c> derived</c><00:27:56.880><c> data</c>

00:27:57.110 --> 00:27:57.120 align:start position:0%
Uh we've talked about derived data
 

00:27:57.120 --> 00:28:00.710 align:start position:0%
Uh we've talked about derived data
types.<00:27:57.679><c> Um</c>

00:28:00.710 --> 00:28:00.720 align:start position:0%
 
 

00:28:00.720 --> 00:28:04.070 align:start position:0%
 
in<00:28:01.039><c> most</c><00:28:02.320><c> most</c><00:28:03.039><c> implementations</c><00:28:03.679><c> the</c><00:28:03.919><c> very</c>

00:28:04.070 --> 00:28:04.080 align:start position:0%
in most most implementations the very
 

00:28:04.080 --> 00:28:06.470 align:start position:0%
in most most implementations the very
low<00:28:04.399><c> level</c><00:28:05.200><c> abstract</c><00:28:05.760><c> device</c><00:28:06.000><c> interface</c>

00:28:06.470 --> 00:28:06.480 align:start position:0%
low level abstract device interface
 

00:28:06.480 --> 00:28:08.630 align:start position:0%
low level abstract device interface
calls<00:28:06.799><c> are</c><00:28:07.039><c> just</c><00:28:07.679><c> allow</c><00:28:07.919><c> you</c><00:28:08.080><c> to</c><00:28:08.240><c> send</c><00:28:08.399><c> a</c>

00:28:08.630 --> 00:28:08.640 align:start position:0%
calls are just allow you to send a
 

00:28:08.640 --> 00:28:10.630 align:start position:0%
calls are just allow you to send a
certain<00:28:08.960><c> block</c><00:28:09.200><c> of</c><00:28:09.360><c> bytes</c><00:28:09.600><c> from</c><00:28:09.760><c> A</c><00:28:09.919><c> to</c><00:28:10.080><c> B.</c><00:28:10.480><c> So</c>

00:28:10.630 --> 00:28:10.640 align:start position:0%
certain block of bytes from A to B. So
 

00:28:10.640 --> 00:28:12.149 align:start position:0%
certain block of bytes from A to B. So
the<00:28:10.799><c> way</c><00:28:10.880><c> the</c><00:28:11.039><c> derived</c><00:28:11.360><c> data</c><00:28:11.600><c> types</c><00:28:11.840><c> work</c><00:28:12.000><c> is</c>

00:28:12.149 --> 00:28:12.159 align:start position:0%
the way the derived data types work is
 

00:28:12.159 --> 00:28:14.549 align:start position:0%
the way the derived data types work is
NPI<00:28:12.640><c> does</c><00:28:12.880><c> actually</c><00:28:13.279><c> do</c><00:28:13.679><c> actually</c><00:28:14.000><c> does</c><00:28:14.240><c> do</c><00:28:14.399><c> an</c>

00:28:14.549 --> 00:28:14.559 align:start position:0%
NPI does actually do actually does do an
 

00:28:14.559 --> 00:28:18.389 align:start position:0%
NPI does actually do actually does do an
explicit<00:28:15.039><c> copy.</c><00:28:16.399><c> Um</c><00:28:16.960><c> you</c><00:28:17.200><c> can</c><00:28:17.360><c> argue</c><00:28:17.679><c> whether</c>

00:28:18.389 --> 00:28:18.399 align:start position:0%
explicit copy. Um you can argue whether
 

00:28:18.399 --> 00:28:20.389 align:start position:0%
explicit copy. Um you can argue whether
might<00:28:18.640><c> be</c><00:28:19.440><c> someone's</c><00:28:19.760><c> asked</c><00:28:19.919><c> this</c><00:28:20.240><c> question</c>

00:28:20.389 --> 00:28:20.399 align:start position:0%
might be someone's asked this question
 

00:28:20.399 --> 00:28:21.830 align:start position:0%
might be someone's asked this question
already<00:28:20.720><c> is</c><00:28:20.880><c> it</c><00:28:20.960><c> quicker</c><00:28:21.200><c> to</c><00:28:21.279><c> do</c><00:28:21.360><c> the</c><00:28:21.520><c> copy</c>

00:28:21.830 --> 00:28:21.840 align:start position:0%
already is it quicker to do the copy
 

00:28:21.840 --> 00:28:23.909 align:start position:0%
already is it quicker to do the copy
yourself<00:28:22.480><c> with</c><00:28:22.720><c> that</c><00:28:22.799><c> force</c><00:28:23.200><c> array</c><00:28:23.440><c> syntax.</c>

00:28:23.909 --> 00:28:23.919 align:start position:0%
yourself with that force array syntax.
 

00:28:23.919 --> 00:28:27.190 align:start position:0%
yourself with that force array syntax.
It<00:28:24.080><c> might</c><00:28:24.320><c> be</c><00:28:25.600><c> um</c>

00:28:27.190 --> 00:28:27.200 align:start position:0%
It might be um
 

00:28:27.200 --> 00:28:29.269 align:start position:0%
It might be um
I<00:28:27.440><c> still</c><00:28:27.679><c> think</c><00:28:28.159><c> derived</c><00:28:28.559><c> data</c><00:28:28.960><c> are</c><00:28:29.120><c> very</c>

00:28:29.269 --> 00:28:29.279 align:start position:0%
I still think derived data are very
 

00:28:29.279 --> 00:28:30.950 align:start position:0%
I still think derived data are very
useful<00:28:29.520><c> for</c><00:28:29.679><c> elegance</c><00:28:30.240><c> and</c><00:28:30.480><c> they</c><00:28:30.720><c> should</c><00:28:30.880><c> be</c>

00:28:30.950 --> 00:28:30.960 align:start position:0%
useful for elegance and they should be
 

00:28:30.960 --> 00:28:33.110 align:start position:0%
useful for elegance and they should be
implemented<00:28:31.520><c> reasonably</c><00:28:32.559><c> reasonably</c>

00:28:33.110 --> 00:28:33.120 align:start position:0%
implemented reasonably reasonably
 

00:28:33.120 --> 00:28:35.110 align:start position:0%
implemented reasonably reasonably
efficiently<00:28:33.440><c> but</c><00:28:33.679><c> it</c><00:28:33.840><c> is</c><00:28:34.000><c> worth</c><00:28:34.399><c> realizing</c>

00:28:35.110 --> 00:28:35.120 align:start position:0%
efficiently but it is worth realizing
 

00:28:35.120 --> 00:28:36.549 align:start position:0%
efficiently but it is worth realizing
there's<00:28:35.360><c> not</c><00:28:35.440><c> really</c><00:28:35.600><c> any</c><00:28:35.840><c> magic</c><00:28:36.159><c> going</c><00:28:36.320><c> on</c>

00:28:36.549 --> 00:28:36.559 align:start position:0%
there's not really any magic going on
 

00:28:36.559 --> 00:28:39.029 align:start position:0%
there's not really any magic going on
low<00:28:36.799><c> level.</c><00:28:37.039><c> is</c><00:28:37.440><c> probably</c><00:28:38.320><c> copying</c><00:28:38.799><c> the</c><00:28:38.880><c> data</c>

00:28:39.029 --> 00:28:39.039 align:start position:0%
low level. is probably copying the data
 

00:28:39.039 --> 00:28:41.269 align:start position:0%
low level. is probably copying the data
into<00:28:39.200><c> a</c><00:28:39.360><c> continuous</c><00:28:39.840><c> buffer,</c><00:28:40.640><c> sending</c><00:28:40.960><c> it</c><00:28:41.120><c> and</c>

00:28:41.269 --> 00:28:41.279 align:start position:0%
into a continuous buffer, sending it and
 

00:28:41.279 --> 00:28:43.590 align:start position:0%
into a continuous buffer, sending it and
then<00:28:42.000><c> and</c><00:28:42.240><c> unpacking.</c><00:28:42.799><c> It's</c><00:28:42.960><c> doing</c><00:28:43.120><c> a</c><00:28:43.360><c> it's</c>

00:28:43.590 --> 00:28:43.600 align:start position:0%
then and unpacking. It's doing a it's
 

00:28:43.600 --> 00:28:46.630 align:start position:0%
then and unpacking. It's doing a it's
doing<00:28:43.760><c> a</c><00:28:44.159><c> pack</c><00:28:44.880><c> send,</c><00:28:45.279><c> unpack,</c><00:28:45.840><c> copy</c><00:28:46.159><c> in,</c>

00:28:46.630 --> 00:28:46.640 align:start position:0%
doing a pack send, unpack, copy in,
 

00:28:46.640 --> 00:28:50.950 align:start position:0%
doing a pack send, unpack, copy in,
send,<00:28:47.039><c> copy</c><00:28:47.440><c> out</c><00:28:48.000><c> um</c><00:28:49.360><c> mechanism.</c>

00:28:50.950 --> 00:28:50.960 align:start position:0%
send, copy out um mechanism.
 

00:28:50.960 --> 00:28:52.310 align:start position:0%
send, copy out um mechanism.
But<00:28:51.120><c> I</c><00:28:51.279><c> want</c><00:28:51.440><c> the</c><00:28:51.679><c> most</c><00:28:51.840><c> important</c><00:28:52.080><c> part</c><00:28:52.240><c> of</c>

00:28:52.310 --> 00:28:52.320 align:start position:0%
But I want the most important part of
 

00:28:52.320 --> 00:28:53.830 align:start position:0%
But I want the most important part of
this<00:28:52.480><c> lecture</c><00:28:52.720><c> is</c><00:28:52.880><c> is</c><00:28:53.120><c> really</c><00:28:53.279><c> how</c><00:28:53.440><c> does</c><00:28:53.679><c> how</c>

00:28:53.830 --> 00:28:53.840 align:start position:0%
this lecture is is really how does how
 

00:28:53.840 --> 00:28:57.029 align:start position:0%
this lecture is is really how does how
does<00:28:54.000><c> NPI</c><00:28:54.480><c> work</c><00:28:54.640><c> at</c><00:28:54.799><c> the</c><00:28:54.880><c> lowest</c><00:28:55.279><c> level?</c>

00:28:57.029 --> 00:28:57.039 align:start position:0%
does NPI work at the lowest level?
 

00:28:57.039 --> 00:28:59.590 align:start position:0%
does NPI work at the lowest level?
Um<00:28:57.600><c> how</c><00:28:57.760><c> does</c><00:28:57.919><c> NPI</c><00:28:58.399><c> actually</c><00:28:58.720><c> send</c><00:28:58.960><c> data</c><00:28:59.360><c> from</c>

00:28:59.590 --> 00:28:59.600 align:start position:0%
Um how does NPI actually send data from
 

00:28:59.600 --> 00:29:02.549 align:start position:0%
Um how does NPI actually send data from
one<00:28:59.840><c> process</c><00:29:00.240><c> to</c><00:29:00.480><c> another?</c><00:29:01.520><c> And</c><00:29:01.760><c> so</c><00:29:02.000><c> what</c><00:29:02.240><c> will</c>

00:29:02.549 --> 00:29:02.559 align:start position:0%
one process to another? And so what will
 

00:29:02.559 --> 00:29:05.669 align:start position:0%
one process to another? And so what will
happen<00:29:02.799><c> is</c><00:29:03.279><c> that</c><00:29:03.919><c> um</c><00:29:04.559><c> when</c><00:29:04.799><c> you</c><00:29:04.960><c> try</c><00:29:05.120><c> and</c><00:29:05.360><c> send</c>

00:29:05.669 --> 00:29:05.679 align:start position:0%
happen is that um when you try and send
 

00:29:05.679 --> 00:29:11.510 align:start position:0%
happen is that um when you try and send
data<00:29:06.399><c> okay</c><00:29:07.520><c> um</c><00:29:08.799><c> um</c><00:29:09.360><c> you</c><00:29:10.080><c> MPI</c><00:29:10.559><c> needs</c><00:29:10.720><c> a</c><00:29:11.200><c> methods</c>

00:29:11.510 --> 00:29:11.520 align:start position:0%
data okay um um you MPI needs a methods
 

00:29:11.520 --> 00:29:13.350 align:start position:0%
data okay um um you MPI needs a methods
for<00:29:11.679><c> delivering</c><00:29:12.240><c> packets</c><00:29:12.480><c> of</c><00:29:12.640><c> data</c><00:29:12.799><c> to</c><00:29:12.960><c> remote</c>

00:29:13.350 --> 00:29:13.360 align:start position:0%
for delivering packets of data to remote
 

00:29:13.360 --> 00:29:15.269 align:start position:0%
for delivering packets of data to remote
processes.<00:29:14.320><c> They</c><00:29:14.559><c> might</c><00:29:14.720><c> be</c><00:29:14.880><c> your</c><00:29:15.039><c> message</c>

00:29:15.269 --> 00:29:15.279 align:start position:0%
processes. They might be your message
 

00:29:15.279 --> 00:29:16.950 align:start position:0%
processes. They might be your message
but<00:29:15.520><c> in</c><00:29:15.679><c> practice</c><00:29:16.000><c> they</c><00:29:16.240><c> might</c><00:29:16.320><c> be</c><00:29:16.399><c> a</c><00:29:16.559><c> protocol</c>

00:29:16.950 --> 00:29:16.960 align:start position:0%
but in practice they might be a protocol
 

00:29:16.960 --> 00:29:18.310 align:start position:0%
but in practice they might be a protocol
message.<00:29:17.200><c> What</c><00:29:17.360><c> this</c><00:29:17.440><c> means</c><00:29:17.600><c> is</c><00:29:17.760><c> when</c><00:29:17.919><c> you</c><00:29:18.080><c> if</c>

00:29:18.310 --> 00:29:18.320 align:start position:0%
message. What this means is when you if
 

00:29:18.320 --> 00:29:19.669 align:start position:0%
message. What this means is when you if
you<00:29:18.399><c> want</c><00:29:18.480><c> to</c><00:29:18.640><c> send</c><00:29:18.799><c> a</c><00:29:18.960><c> message</c><00:29:19.120><c> to</c><00:29:19.279><c> another</c>

00:29:19.669 --> 00:29:19.679 align:start position:0%
you want to send a message to another
 

00:29:19.679 --> 00:29:21.990 align:start position:0%
you want to send a message to another
process<00:29:20.480><c> what</c><00:29:20.720><c> might</c><00:29:21.039><c> actually</c><00:29:21.440><c> happen</c><00:29:21.760><c> is</c>

00:29:21.990 --> 00:29:22.000 align:start position:0%
process what might actually happen is
 

00:29:22.000 --> 00:29:24.710 align:start position:0%
process what might actually happen is
that<00:29:22.159><c> NPI</c><00:29:22.640><c> sends</c><00:29:22.799><c> a</c><00:29:22.960><c> little</c><00:29:23.120><c> header</c><00:29:23.520><c> saying</c>

00:29:24.710 --> 00:29:24.720 align:start position:0%
that NPI sends a little header saying
 

00:29:24.720 --> 00:29:26.549 align:start position:0%
that NPI sends a little header saying
there's<00:29:24.960><c> a</c><00:29:25.120><c> there's</c><00:29:25.360><c> a</c><00:29:25.520><c> message</c><00:29:25.840><c> incoming.</c>

00:29:26.549 --> 00:29:26.559 align:start position:0%
there's a there's a message incoming.
 

00:29:26.559 --> 00:29:29.029 align:start position:0%
there's a there's a message incoming.
Okay.<00:29:27.520><c> uh</c><00:29:27.679><c> and</c><00:29:27.919><c> then</c><00:29:28.159><c> then</c><00:29:28.399><c> you</c><00:29:28.640><c> will</c><00:29:28.720><c> just</c><00:29:28.880><c> get</c>

00:29:29.029 --> 00:29:29.039 align:start position:0%
Okay. uh and then then you will just get
 

00:29:29.039 --> 00:29:30.470 align:start position:0%
Okay. uh and then then you will just get
that<00:29:29.279><c> will</c><00:29:29.440><c> just</c><00:29:29.600><c> notify</c><00:29:29.919><c> you</c><00:29:30.159><c> there's</c><00:29:30.320><c> a</c>

00:29:30.470 --> 00:29:30.480 align:start position:0%
that will just notify you there's a
 

00:29:30.480 --> 00:29:31.830 align:start position:0%
that will just notify you there's a
message<00:29:30.799><c> that</c><00:29:30.960><c> there's</c><00:29:31.120><c> a</c><00:29:31.279><c> message</c><00:29:31.520><c> waiting</c>

00:29:31.830 --> 00:29:31.840 align:start position:0%
message that there's a message waiting
 

00:29:31.840 --> 00:29:33.750 align:start position:0%
message that there's a message waiting
they<00:29:32.080><c> may</c><00:29:32.159><c> get</c><00:29:32.320><c> back</c><00:29:32.480><c> and</c><00:29:32.640><c> get</c><00:29:32.799><c> the</c><00:29:32.960><c> data</c><00:29:33.200><c> later</c>

00:29:33.750 --> 00:29:33.760 align:start position:0%
they may get back and get the data later
 

00:29:33.760 --> 00:29:38.310 align:start position:0%
they may get back and get the data later
okay<00:29:34.480><c> so</c><00:29:35.120><c> uh</c><00:29:36.159><c> um</c><00:29:37.200><c> so</c><00:29:37.440><c> whenever</c><00:29:37.840><c> a</c><00:29:38.000><c> process</c>

00:29:38.310 --> 00:29:38.320 align:start position:0%
okay so uh um so whenever a process
 

00:29:38.320 --> 00:29:40.789 align:start position:0%
okay so uh um so whenever a process
sends<00:29:38.559><c> an</c><00:29:38.640><c> NPI</c><00:29:39.120><c> message</c><00:29:39.360><c> to</c><00:29:39.520><c> remote</c><00:29:39.840><c> process</c>

00:29:40.789 --> 00:29:40.799 align:start position:0%
sends an NPI message to remote process
 

00:29:40.799 --> 00:29:42.870 align:start position:0%
sends an NPI message to remote process
what<00:29:41.120><c> happens</c><00:29:41.360><c> is</c><00:29:41.520><c> a</c><00:29:41.760><c> good</c><00:29:41.919><c> model</c><00:29:42.240><c> it</c><00:29:42.399><c> sends</c><00:29:42.640><c> an</c>

00:29:42.870 --> 00:29:42.880 align:start position:0%
what happens is a good model it sends an
 

00:29:42.880 --> 00:29:46.630 align:start position:0%
what happens is a good model it sends an
initial<00:29:43.200><c> protocol</c><00:29:43.600><c> message</c><00:29:44.320><c> okay</c><00:29:45.279><c> now</c><00:29:46.000><c> it</c><00:29:46.320><c> may</c>

00:29:46.630 --> 00:29:46.640 align:start position:0%
initial protocol message okay now it may
 

00:29:46.640 --> 00:29:49.110 align:start position:0%
initial protocol message okay now it may
contain<00:29:47.039><c> some</c><00:29:47.360><c> data</c><00:29:47.919><c> but</c><00:29:48.320><c> it</c><00:29:48.559><c> may</c><00:29:48.640><c> also</c><00:29:48.960><c> just</c>

00:29:49.110 --> 00:29:49.120 align:start position:0%
contain some data but it may also just
 

00:29:49.120 --> 00:29:52.549 align:start position:0%
contain some data but it may also just
be<00:29:49.360><c> so</c><00:29:49.520><c> so</c><00:29:49.520><c> so</c><00:29:50.960><c> your</c><00:29:51.120><c> your</c><00:29:51.200><c> your</c><00:29:51.440><c> your</c><00:29:51.679><c> your</c>

00:29:52.549 --> 00:29:52.559 align:start position:0%
be so so so your your your your your
 

00:29:52.559 --> 00:29:55.590 align:start position:0%
be so so so your your your your your
go-to<00:29:53.039><c> model</c><00:29:53.360><c> is</c><00:29:54.240><c> a</c><00:29:54.399><c> process</c><00:29:54.720><c> an</c><00:29:54.880><c> NPI</c><00:29:55.279><c> process</c>

00:29:55.590 --> 00:29:55.600 align:start position:0%
go-to model is a process an NPI process
 

00:29:55.600 --> 00:29:56.870 align:start position:0%
go-to model is a process an NPI process
wants<00:29:55.760><c> to</c><00:29:55.840><c> send</c><00:29:56.000><c> data</c><00:29:56.159><c> to</c><00:29:56.320><c> another</c><00:29:56.559><c> process</c>

00:29:56.870 --> 00:29:56.880 align:start position:0%
wants to send data to another process
 

00:29:56.880 --> 00:29:58.070 align:start position:0%
wants to send data to another process
What<00:29:57.039><c> it</c><00:29:57.120><c> does,</c><00:29:57.279><c> it</c><00:29:57.440><c> actually</c><00:29:57.600><c> just</c><00:29:57.760><c> sends</c><00:29:57.919><c> a</c>

00:29:58.070 --> 00:29:58.080 align:start position:0%
What it does, it actually just sends a
 

00:29:58.080 --> 00:30:00.710 align:start position:0%
What it does, it actually just sends a
little<00:29:58.240><c> header</c><00:29:58.720><c> message</c><00:29:59.039><c> of</c><00:29:59.200><c> maybe</c><00:29:59.760><c> 128</c><00:30:00.320><c> to</c>

00:30:00.710 --> 00:30:00.720 align:start position:0%
little header message of maybe 128 to
 

00:30:00.720 --> 00:30:02.950 align:start position:0%
little header message of maybe 128 to
256<00:30:01.360><c> bytes</c><00:30:01.679><c> saying,</c><00:30:02.000><c> "I've</c><00:30:02.320><c> got</c><00:30:02.480><c> some</c><00:30:02.720><c> data</c>

00:30:02.950 --> 00:30:02.960 align:start position:0%
256 bytes saying, "I've got some data
 

00:30:02.960 --> 00:30:05.110 align:start position:0%
256 bytes saying, "I've got some data
for<00:30:03.200><c> you.</c><00:30:03.679><c> Come</c><00:30:03.919><c> back</c><00:30:04.080><c> to</c><00:30:04.159><c> me</c><00:30:04.399><c> and</c><00:30:04.480><c> and</c><00:30:04.799><c> receive</c>

00:30:05.110 --> 00:30:05.120 align:start position:0%
for you. Come back to me and and receive
 

00:30:05.120 --> 00:30:07.110 align:start position:0%
for you. Come back to me and and receive
it<00:30:05.279><c> when</c><00:30:05.440><c> you're</c><00:30:05.600><c> ready."</c><00:30:06.399><c> So,</c><00:30:06.720><c> do</c><00:30:06.880><c> you</c><00:30:06.960><c> mean</c>

00:30:07.110 --> 00:30:07.120 align:start position:0%
it when you're ready." So, do you mean
 

00:30:07.120 --> 00:30:09.830 align:start position:0%
it when you're ready." So, do you mean
PVM?<00:30:07.600><c> Do</c><00:30:07.760><c> you</c><00:30:07.840><c> mean</c><00:30:08.000><c> the</c><00:30:08.080><c> the</c><00:30:08.480><c> pack</c><00:30:08.799><c> unpacked</c>

00:30:09.830 --> 00:30:09.840 align:start position:0%
PVM? Do you mean the the pack unpacked
 

00:30:09.840 --> 00:30:12.870 align:start position:0%
PVM? Do you mean the the pack unpacked
um<00:30:10.080><c> Mark</c><00:30:10.480><c> or</c><00:30:10.720><c> the</c><00:30:10.960><c> protocol</c><00:30:11.600><c> stuff?</c><00:30:12.480><c> So,</c><00:30:12.720><c> yes,</c>

00:30:12.870 --> 00:30:12.880 align:start position:0%
um Mark or the protocol stuff? So, yes,
 

00:30:12.880 --> 00:30:16.310 align:start position:0%
um Mark or the protocol stuff? So, yes,
PVM<00:30:13.360><c> was</c><00:30:13.600><c> explicit</c><00:30:14.159><c> pack</c><00:30:14.559><c> unpack</c><00:30:15.200><c> model.</c>

00:30:16.310 --> 00:30:16.320 align:start position:0%
PVM was explicit pack unpack model.
 

00:30:16.320 --> 00:30:18.470 align:start position:0%
PVM was explicit pack unpack model.
Yeah,<00:30:16.559><c> I'm</c><00:30:16.799><c> thinking</c><00:30:16.960><c> of</c><00:30:17.200><c> the</c><00:30:17.360><c> days</c><00:30:17.600><c> before</c><00:30:18.000><c> 94</c>

00:30:18.470 --> 00:30:18.480 align:start position:0%
Yeah, I'm thinking of the days before 94
 

00:30:18.480 --> 00:30:20.149 align:start position:0%
Yeah, I'm thinking of the days before 94
before<00:30:18.720><c> MPI,</c><00:30:19.679><c> I</c><00:30:19.840><c> think.</c>

00:30:20.149 --> 00:30:20.159 align:start position:0%
before MPI, I think.
 

00:30:20.159 --> 00:30:23.830 align:start position:0%
before MPI, I think.
Yeah,<00:30:20.960><c> we</c><00:30:21.039><c> had</c><00:30:21.120><c> to</c><00:30:22.399><c> send</c>

00:30:23.830 --> 00:30:23.840 align:start position:0%
Yeah, we had to send
 

00:30:23.840 --> 00:30:27.750 align:start position:0%
Yeah, we had to send
Yeah.<00:30:24.880><c> But</c><00:30:25.120><c> luckily</c><00:30:25.679><c> the</c><00:30:25.919><c> data</c><00:30:26.240><c> types</c><00:30:26.559><c> is</c><00:30:26.799><c> done</c>

00:30:27.750 --> 00:30:27.760 align:start position:0%
Yeah. But luckily the data types is done
 

00:30:27.760 --> 00:30:31.350 align:start position:0%
Yeah. But luckily the data types is done
inevitably<00:30:28.320><c> for</c><00:30:28.559><c> you.</c><00:30:28.799><c> Yeah.</c><00:30:29.200><c> Um</c><00:30:30.320><c> so</c><00:30:31.039><c> many</c>

00:30:31.350 --> 00:30:31.360 align:start position:0%
inevitably for you. Yeah. Um so many
 

00:30:31.360 --> 00:30:33.110 align:start position:0%
inevitably for you. Yeah. Um so many
implementations<00:30:32.000><c> use</c><00:30:32.159><c> a</c><00:30:32.320><c> fixed</c><00:30:32.640><c> size</c><00:30:32.799><c> header</c>

00:30:33.110 --> 00:30:33.120 align:start position:0%
implementations use a fixed size header
 

00:30:33.120 --> 00:30:34.389 align:start position:0%
implementations use a fixed size header
for<00:30:33.279><c> all</c><00:30:33.360><c> message.</c><00:30:33.679><c> What</c><00:30:33.840><c> this</c><00:30:34.000><c> means</c><00:30:34.240><c> is</c>

00:30:34.389 --> 00:30:34.399 align:start position:0%
for all message. What this means is
 

00:30:34.399 --> 00:30:36.950 align:start position:0%
for all message. What this means is
whenever<00:30:34.799><c> you</c><00:30:35.039><c> send</c><00:30:35.919><c> data</c><00:30:36.320><c> to</c><00:30:36.559><c> another</c>

00:30:36.950 --> 00:30:36.960 align:start position:0%
whenever you send data to another
 

00:30:36.960 --> 00:30:39.830 align:start position:0%
whenever you send data to another
process<00:30:37.760><c> what</c><00:30:37.919><c> will</c><00:30:38.159><c> be</c><00:30:38.320><c> sent</c><00:30:38.559><c> will</c><00:30:38.880><c> be</c><00:30:39.520><c> a</c>

00:30:39.830 --> 00:30:39.840 align:start position:0%
process what will be sent will be a
 

00:30:39.840 --> 00:30:42.710 align:start position:0%
process what will be sent will be a
small<00:30:40.080><c> header</c><00:30:40.480><c> message</c><00:30:41.279><c> 128</c><00:30:41.679><c> bytes</c><00:30:42.000><c> of</c><00:30:42.159><c> data</c>

00:30:42.710 --> 00:30:42.720 align:start position:0%
small header message 128 bytes of data
 

00:30:42.720 --> 00:30:43.909 align:start position:0%
small header message 128 bytes of data
and<00:30:42.960><c> there'll</c><00:30:43.120><c> be</c><00:30:43.279><c> enough</c><00:30:43.520><c> field</c><00:30:43.679><c> for</c><00:30:43.840><c> the</c>

00:30:43.909 --> 00:30:43.919 align:start position:0%
and there'll be enough field for the
 

00:30:43.919 --> 00:30:47.029 align:start position:0%
and there'll be enough field for the
envelope.<00:30:44.320><c> You</c><00:30:44.480><c> know</c><00:30:45.679><c> okay</c><00:30:46.640><c> there's</c><00:30:46.880><c> a</c>

00:30:47.029 --> 00:30:47.039 align:start position:0%
envelope. You know okay there's a
 

00:30:47.039 --> 00:30:48.710 align:start position:0%
envelope. You know okay there's a
message<00:30:47.520><c> waiting</c><00:30:47.840><c> from</c><00:30:48.000><c> this</c><00:30:48.240><c> guy</c><00:30:48.399><c> and</c><00:30:48.559><c> it</c>

00:30:48.710 --> 00:30:48.720 align:start position:0%
message waiting from this guy and it
 

00:30:48.720 --> 00:30:50.630 align:start position:0%
message waiting from this guy and it
contains<00:30:48.960><c> this</c><00:30:49.200><c> amount</c><00:30:49.440><c> of</c><00:30:49.520><c> mark.</c><00:30:50.000><c> Obviously,</c>

00:30:50.630 --> 00:30:50.640 align:start position:0%
contains this amount of mark. Obviously,
 

00:30:50.640 --> 00:30:52.710 align:start position:0%
contains this amount of mark. Obviously,
if<00:30:50.880><c> your</c><00:30:51.120><c> message</c><00:30:51.440><c> is</c><00:30:51.679><c> really</c><00:30:52.000><c> small,</c><00:30:52.480><c> it</c>

00:30:52.710 --> 00:30:52.720 align:start position:0%
if your message is really small, it
 

00:30:52.720 --> 00:30:54.230 align:start position:0%
if your message is really small, it
might<00:30:52.880><c> be</c><00:30:52.960><c> able</c><00:30:53.120><c> to</c><00:30:53.279><c> fit</c><00:30:53.440><c> the</c><00:30:53.600><c> data</c><00:30:53.840><c> on</c><00:30:54.080><c> the</c>

00:30:54.230 --> 00:30:54.240 align:start position:0%
might be able to fit the data on the
 

00:30:54.240 --> 00:30:55.830 align:start position:0%
might be able to fit the data on the
protocol<00:30:54.640><c> message</c><00:30:54.880><c> as</c><00:30:55.039><c> well.</c><00:30:55.279><c> That's</c><00:30:55.520><c> not</c><00:30:55.679><c> but</c>

00:30:55.830 --> 00:30:55.840 align:start position:0%
protocol message as well. That's not but
 

00:30:55.840 --> 00:30:57.590 align:start position:0%
protocol message as well. That's not but
that<00:30:56.000><c> that's</c><00:30:56.159><c> your</c><00:30:56.320><c> model.</c><00:30:56.640><c> You</c><00:30:57.039><c> your</c><00:30:57.200><c> go-to</c>

00:30:57.590 --> 00:30:57.600 align:start position:0%
that that's your model. You your go-to
 

00:30:57.600 --> 00:31:01.990 align:start position:0%
that that's your model. You your go-to
model<00:30:57.919><c> should</c><00:30:58.159><c> be</c><00:30:58.799><c> when</c><00:30:58.960><c> I</c><00:30:59.200><c> send</c><00:30:59.520><c> data</c><00:31:00.240><c> um</c><00:31:01.039><c> uh</c>

00:31:01.990 --> 00:31:02.000 align:start position:0%
model should be when I send data um uh
 

00:31:02.000 --> 00:31:05.029 align:start position:0%
model should be when I send data um uh
uh<00:31:02.960><c> when</c><00:31:03.200><c> I</c><00:31:03.360><c> send</c><00:31:03.440><c> a</c><00:31:03.600><c> message</c><00:31:03.840><c> to</c><00:31:04.000><c> NPI,</c><00:31:04.720><c> what's</c>

00:31:05.029 --> 00:31:05.039 align:start position:0%
uh when I send a message to NPI, what's
 

00:31:05.039 --> 00:31:07.110 align:start position:0%
uh when I send a message to NPI, what's
sent<00:31:05.279><c> is</c><00:31:05.520><c> a</c><00:31:05.679><c> little</c><00:31:06.159><c> header,</c><00:31:06.640><c> a</c><00:31:06.880><c> little</c>

00:31:07.110 --> 00:31:07.120 align:start position:0%
sent is a little header, a little
 

00:31:07.120 --> 00:31:08.630 align:start position:0%
sent is a little header, a little
protocol<00:31:07.520><c> message</c><00:31:07.919><c> saying</c><00:31:08.240><c> there's</c><00:31:08.480><c> some</c>

00:31:08.630 --> 00:31:08.640 align:start position:0%
protocol message saying there's some
 

00:31:08.640 --> 00:31:10.310 align:start position:0%
protocol message saying there's some
data<00:31:08.880><c> over</c><00:31:09.120><c> here</c><00:31:09.279><c> for</c><00:31:09.440><c> you.</c><00:31:09.760><c> Come</c><00:31:09.919><c> and</c><00:31:10.080><c> receive</c>

00:31:10.310 --> 00:31:10.320 align:start position:0%
data over here for you. Come and receive
 

00:31:10.320 --> 00:31:12.549 align:start position:0%
data over here for you. Come and receive
it<00:31:10.480><c> when</c><00:31:10.640><c> you're</c><00:31:10.799><c> ready.</c>

00:31:12.549 --> 00:31:12.559 align:start position:0%
it when you're ready.
 

00:31:12.559 --> 00:31:15.190 align:start position:0%
it when you're ready.
Whoops.<00:31:12.960><c> Sorry.</c>

00:31:15.190 --> 00:31:15.200 align:start position:0%
Whoops. Sorry.
 

00:31:15.200 --> 00:31:18.710 align:start position:0%
Whoops. Sorry.
So<00:31:16.399><c> um</c><00:31:16.880><c> so</c><00:31:17.440><c> if</c><00:31:17.760><c> the</c><00:31:18.000><c> receiving</c><00:31:18.399><c> process</c>

00:31:18.710 --> 00:31:18.720 align:start position:0%
So um so if the receiving process
 

00:31:18.720 --> 00:31:20.710 align:start position:0%
So um so if the receiving process
already<00:31:18.960><c> has</c><00:31:19.039><c> a</c><00:31:19.200><c> matching</c><00:31:19.600><c> receive</c><00:31:20.320><c> then</c><00:31:20.559><c> it</c>

00:31:20.710 --> 00:31:20.720 align:start position:0%
already has a matching receive then it
 

00:31:20.720 --> 00:31:23.190 align:start position:0%
already has a matching receive then it
can<00:31:20.880><c> actually</c><00:31:21.279><c> go</c><00:31:21.520><c> back</c><00:31:21.679><c> and</c><00:31:22.000><c> say</c><00:31:22.640><c> okay</c><00:31:22.880><c> I</c><00:31:23.120><c> want</c>

00:31:23.190 --> 00:31:23.200 align:start position:0%
can actually go back and say okay I want
 

00:31:23.200 --> 00:31:25.350 align:start position:0%
can actually go back and say okay I want
to<00:31:23.360><c> receive</c><00:31:23.600><c> the</c><00:31:23.679><c> data</c><00:31:23.919><c> I</c><00:31:24.399><c> know</c><00:31:24.559><c> want</c><00:31:25.039><c> I</c><00:31:25.279><c> know</c>

00:31:25.350 --> 00:31:25.360 align:start position:0%
to receive the data I know want I know
 

00:31:25.360 --> 00:31:28.389 align:start position:0%
to receive the data I know want I know
where<00:31:25.840><c> I</c><00:31:26.159><c> know</c><00:31:26.480><c> where</c><00:31:26.799><c> to</c><00:31:26.960><c> put</c><00:31:27.200><c> it.</c><00:31:27.919><c> If</c><00:31:28.159><c> the</c>

00:31:28.389 --> 00:31:28.399 align:start position:0%
where I know where to put it. If the
 

00:31:28.399 --> 00:31:30.789 align:start position:0%
where I know where to put it. If the
receive<00:31:28.880><c> hasn't</c><00:31:29.279><c> been</c><00:31:29.520><c> issued</c><00:31:30.399><c> what</c><00:31:30.559><c> it</c><00:31:30.720><c> has</c>

00:31:30.789 --> 00:31:30.799 align:start position:0%
receive hasn't been issued what it has
 

00:31:30.799 --> 00:31:32.710 align:start position:0%
receive hasn't been issued what it has
to<00:31:30.960><c> do</c><00:31:31.039><c> is</c><00:31:31.120><c> it</c><00:31:31.279><c> has</c><00:31:31.360><c> to</c><00:31:31.520><c> it</c><00:31:31.760><c> has</c><00:31:31.919><c> to</c><00:31:32.080><c> park</c><00:31:32.399><c> that</c>

00:31:32.710 --> 00:31:32.720 align:start position:0%
to do is it has to it has to park that
 

00:31:32.720 --> 00:31:34.310 align:start position:0%
to do is it has to it has to park that
message<00:31:33.120><c> and</c><00:31:33.360><c> basically</c><00:31:33.760><c> put</c><00:31:33.919><c> it</c><00:31:34.080><c> somewhere</c>

00:31:34.310 --> 00:31:34.320 align:start position:0%
message and basically put it somewhere
 

00:31:34.320 --> 00:31:36.470 align:start position:0%
message and basically put it somewhere
and<00:31:34.480><c> say</c><00:31:34.720><c> well</c><00:31:34.880><c> I'</c><00:31:35.440><c> I've</c><00:31:35.679><c> got</c><00:31:35.760><c> a</c><00:31:36.000><c> send</c><00:31:36.240><c> from</c>

00:31:36.470 --> 00:31:36.480 align:start position:0%
and say well I' I've got a send from
 

00:31:36.480 --> 00:31:38.070 align:start position:0%
and say well I' I've got a send from
this<00:31:36.720><c> guy</c><00:31:37.039><c> but</c><00:31:37.200><c> I</c><00:31:37.360><c> don't</c><00:31:37.440><c> have</c><00:31:37.519><c> a</c><00:31:37.679><c> matching</c>

00:31:38.070 --> 00:31:38.080 align:start position:0%
this guy but I don't have a matching
 

00:31:38.080 --> 00:31:40.230 align:start position:0%
this guy but I don't have a matching
receive<00:31:38.480><c> yet.</c><00:31:38.880><c> Okay,</c><00:31:39.519><c> so</c><00:31:39.679><c> that</c><00:31:39.840><c> tells</c><00:31:40.080><c> you</c>

00:31:40.230 --> 00:31:40.240 align:start position:0%
receive yet. Okay, so that tells you
 

00:31:40.240 --> 00:31:42.549 align:start position:0%
receive yet. Okay, so that tells you
immediately<00:31:40.720><c> that</c><00:31:41.039><c> wherever</c><00:31:41.519><c> possible,</c><00:31:42.399><c> you</c>

00:31:42.549 --> 00:31:42.559 align:start position:0%
immediately that wherever possible, you
 

00:31:42.559 --> 00:31:44.549 align:start position:0%
immediately that wherever possible, you
should<00:31:42.799><c> post</c><00:31:43.120><c> receives</c><00:31:43.600><c> before</c><00:31:43.840><c> the</c><00:31:44.000><c> sends.</c>

00:31:44.549 --> 00:31:44.559 align:start position:0%
should post receives before the sends.
 

00:31:44.559 --> 00:31:46.310 align:start position:0%
should post receives before the sends.
It's<00:31:44.720><c> a</c><00:31:44.880><c> lot</c><00:31:45.039><c> less</c><00:31:45.279><c> work</c><00:31:45.440><c> for</c><00:31:45.679><c> NPI</c><00:31:46.000><c> if</c><00:31:46.159><c> the</c>

00:31:46.310 --> 00:31:46.320 align:start position:0%
It's a lot less work for NPI if the
 

00:31:46.320 --> 00:31:48.310 align:start position:0%
It's a lot less work for NPI if the
receive<00:31:46.720><c> exists</c><00:31:47.440><c> because</c><00:31:47.600><c> when</c><00:31:47.840><c> the</c><00:31:48.000><c> set</c><00:31:48.159><c> when</c>

00:31:48.310 --> 00:31:48.320 align:start position:0%
receive exists because when the set when
 

00:31:48.320 --> 00:31:50.230 align:start position:0%
receive exists because when the set when
the<00:31:48.480><c> send</c><00:31:48.799><c> comes</c><00:31:48.960><c> in,</c><00:31:49.120><c> it</c><00:31:49.279><c> can</c><00:31:49.440><c> match</c><00:31:49.760><c> it</c>

00:31:50.230 --> 00:31:50.240 align:start position:0%
the send comes in, it can match it
 

00:31:50.240 --> 00:31:51.669 align:start position:0%
the send comes in, it can match it
immediately.<00:31:50.799><c> Otherwise,</c><00:31:51.120><c> it</c><00:31:51.279><c> has</c><00:31:51.440><c> to</c><00:31:51.519><c> say,</c>

00:31:51.669 --> 00:31:51.679 align:start position:0%
immediately. Otherwise, it has to say,
 

00:31:51.679 --> 00:31:52.950 align:start position:0%
immediately. Otherwise, it has to say,
well,<00:31:51.840><c> there's</c><00:31:51.919><c> a</c><00:31:52.080><c> send</c><00:31:52.320><c> coming</c><00:31:52.480><c> in,</c><00:31:52.640><c> but</c><00:31:52.880><c> I</c>

00:31:52.950 --> 00:31:52.960 align:start position:0%
well, there's a send coming in, but I
 

00:31:52.960 --> 00:31:53.990 align:start position:0%
well, there's a send coming in, but I
don't<00:31:53.120><c> know</c><00:31:53.200><c> what</c><00:31:53.360><c> to</c><00:31:53.440><c> do</c><00:31:53.519><c> with</c><00:31:53.679><c> it</c><00:31:53.760><c> because</c><00:31:53.919><c> I</c>

00:31:53.990 --> 00:31:54.000 align:start position:0%
don't know what to do with it because I
 

00:31:54.000 --> 00:31:55.430 align:start position:0%
don't know what to do with it because I
don't<00:31:54.159><c> have</c><00:31:54.240><c> a</c><00:31:54.320><c> receive.</c><00:31:54.640><c> It</c><00:31:54.799><c> has</c><00:31:54.880><c> to</c><00:31:55.039><c> park</c><00:31:55.200><c> it</c>

00:31:55.430 --> 00:31:55.440 align:start position:0%
don't have a receive. It has to park it
 

00:31:55.440 --> 00:31:58.549 align:start position:0%
don't have a receive. It has to park it
somewhere<00:31:55.919><c> and</c><00:31:56.080><c> process</c><00:31:56.399><c> it</c><00:31:56.640><c> later</c><00:31:56.880><c> on.</c>

00:31:58.549 --> 00:31:58.559 align:start position:0%
somewhere and process it later on.
 

00:31:58.559 --> 00:32:01.830 align:start position:0%
somewhere and process it later on.
Um,<00:31:59.519><c> also,</c><00:32:00.240><c> um,</c><00:32:00.320><c> if</c><00:32:00.559><c> you</c><00:32:00.640><c> do</c><00:32:00.799><c> a</c><00:32:00.880><c> receive,</c><00:32:01.519><c> yeah,</c>

00:32:01.830 --> 00:32:01.840 align:start position:0%
Um, also, um, if you do a receive, yeah,
 

00:32:01.840 --> 00:32:03.669 align:start position:0%
Um, also, um, if you do a receive, yeah,
when<00:32:02.080><c> you</c><00:32:02.159><c> do</c><00:32:02.320><c> a</c><00:32:02.480><c> receive</c><00:32:02.799><c> call,</c><00:32:03.279><c> the</c><00:32:03.519><c> first</c>

00:32:03.669 --> 00:32:03.679 align:start position:0%
when you do a receive call, the first
 

00:32:03.679 --> 00:32:04.950 align:start position:0%
when you do a receive call, the first
thing<00:32:03.760><c> you</c><00:32:03.919><c> do</c><00:32:04.080><c> is</c><00:32:04.240><c> say,</c><00:32:04.399><c> well,</c><00:32:04.559><c> I</c><00:32:04.720><c> want</c><00:32:04.799><c> to</c>

00:32:04.950 --> 00:32:04.960 align:start position:0%
thing you do is say, well, I want to
 

00:32:04.960 --> 00:32:06.710 align:start position:0%
thing you do is say, well, I want to
receive<00:32:05.200><c> data,</c><00:32:05.440><c> but</c><00:32:05.679><c> maybe</c><00:32:05.919><c> I've</c><00:32:06.240><c> already</c><00:32:06.559><c> had</c>

00:32:06.710 --> 00:32:06.720 align:start position:0%
receive data, but maybe I've already had
 

00:32:06.720 --> 00:32:08.470 align:start position:0%
receive data, but maybe I've already had
a<00:32:06.960><c> ping</c><00:32:07.200><c> from</c><00:32:07.360><c> somebody.</c><00:32:07.760><c> You</c><00:32:07.919><c> look</c><00:32:08.080><c> for</c><00:32:08.240><c> it.</c>

00:32:08.470 --> 00:32:08.480 align:start position:0%
a ping from somebody. You look for it.
 

00:32:08.480 --> 00:32:13.750 align:start position:0%
a ping from somebody. You look for it.
Okay.<00:32:09.600><c> Um</c><00:32:10.559><c> so</c><00:32:11.440><c> again</c><00:32:12.320><c> um</c><00:32:12.880><c> in</c><00:32:13.200><c> practice</c><00:32:13.600><c> there</c>

00:32:13.750 --> 00:32:13.760 align:start position:0%
Okay. Um so again um in practice there
 

00:32:13.760 --> 00:32:15.430 align:start position:0%
Okay. Um so again um in practice there
could<00:32:13.919><c> be</c><00:32:14.080><c> lots</c><00:32:14.240><c> of</c><00:32:14.399><c> different</c><00:32:14.559><c> cues</c><00:32:14.960><c> but</c><00:32:15.200><c> in</c>

00:32:15.430 --> 00:32:15.440 align:start position:0%
could be lots of different cues but in
 

00:32:15.440 --> 00:32:18.470 align:start position:0%
could be lots of different cues but in
practice<00:32:16.640><c> uh</c><00:32:17.120><c> NPI</c><00:32:17.600><c> tends</c><00:32:17.760><c> to</c><00:32:17.919><c> have</c><00:32:18.000><c> a</c><00:32:18.159><c> single</c>

00:32:18.470 --> 00:32:18.480 align:start position:0%
practice uh NPI tends to have a single
 

00:32:18.480 --> 00:32:21.990 align:start position:0%
practice uh NPI tends to have a single
global<00:32:18.880><c> queue.</c><00:32:19.279><c> So</c><00:32:19.840><c> MPI</c><00:32:20.480><c> starts</c><00:32:20.799><c> to</c><00:32:21.039><c> basically</c>

00:32:21.990 --> 00:32:22.000 align:start position:0%
global queue. So MPI starts to basically
 

00:32:22.000 --> 00:32:23.590 align:start position:0%
global queue. So MPI starts to basically
struggle<00:32:22.320><c> if</c><00:32:22.559><c> you</c><00:32:22.720><c> have</c><00:32:22.799><c> lots</c><00:32:23.039><c> and</c><00:32:23.279><c> lots</c><00:32:23.440><c> and</c>

00:32:23.590 --> 00:32:23.600 align:start position:0%
struggle if you have lots and lots and
 

00:32:23.600 --> 00:32:25.029 align:start position:0%
struggle if you have lots and lots and
lots<00:32:23.840><c> of</c><00:32:24.000><c> outstanding</c><00:32:24.480><c> messages</c><00:32:24.880><c> which</c>

00:32:25.029 --> 00:32:25.039 align:start position:0%
lots of outstanding messages which
 

00:32:25.039 --> 00:32:26.710 align:start position:0%
lots of outstanding messages which
aren't<00:32:25.360><c> being</c><00:32:25.519><c> received.</c><00:32:26.000><c> Okay.</c><00:32:26.240><c> Because</c>

00:32:26.710 --> 00:32:26.720 align:start position:0%
aren't being received. Okay. Because
 

00:32:26.720 --> 00:32:28.230 align:start position:0%
aren't being received. Okay. Because
every<00:32:26.960><c> time</c><00:32:27.120><c> it</c><00:32:27.279><c> looks</c><00:32:27.600><c> like</c><00:32:27.760><c> there's</c><00:32:27.919><c> a</c><00:32:28.080><c> huge</c>

00:32:28.230 --> 00:32:28.240 align:start position:0%
every time it looks like there's a huge
 

00:32:28.240 --> 00:32:29.590 align:start position:0%
every time it looks like there's a huge
queue<00:32:28.559><c> of</c><00:32:28.720><c> messages</c><00:32:29.039><c> I</c><00:32:29.120><c> have</c><00:32:29.279><c> to</c><00:32:29.440><c> look</c>

00:32:29.590 --> 00:32:29.600 align:start position:0%
queue of messages I have to look
 

00:32:29.600 --> 00:32:33.430 align:start position:0%
queue of messages I have to look
through.<00:32:30.159><c> Okay.</c><00:32:30.960><c> That's</c><00:32:31.279><c> sort</c><00:32:31.440><c> of</c><00:32:31.600><c> a</c>

00:32:33.430 --> 00:32:33.440 align:start position:0%
through. Okay. That's sort of a
 

00:32:33.440 --> 00:32:36.149 align:start position:0%
through. Okay. That's sort of a
um<00:32:33.760><c> so</c><00:32:34.559><c> how</c><00:32:34.720><c> does</c><00:32:34.880><c> NPI</c><00:32:35.360><c> actually</c><00:32:35.600><c> deliver</c><00:32:35.919><c> the</c>

00:32:36.149 --> 00:32:36.159 align:start position:0%
um so how does NPI actually deliver the
 

00:32:36.159 --> 00:32:41.029 align:start position:0%
um so how does NPI actually deliver the
message?<00:32:36.880><c> Well,</c><00:32:37.440><c> the</c><00:32:37.919><c> um</c><00:32:38.880><c> the</c><00:32:39.200><c> two</c><00:32:40.320><c> most</c><00:32:40.720><c> basic</c>

00:32:41.029 --> 00:32:41.039 align:start position:0%
message? Well, the um the two most basic
 

00:32:41.039 --> 00:32:43.350 align:start position:0%
message? Well, the um the two most basic
ways<00:32:41.279><c> are</c><00:32:41.519><c> eager</c><00:32:41.840><c> and</c><00:32:42.000><c> rendevous</c><00:32:42.799><c> and</c><00:32:43.039><c> these</c>

00:32:43.350 --> 00:32:43.360 align:start position:0%
ways are eager and rendevous and these
 

00:32:43.360 --> 00:32:46.230 align:start position:0%
ways are eager and rendevous and these
map<00:32:43.760><c> quite</c><00:32:44.080><c> nicely</c><00:32:44.480><c> onto</c><00:32:44.880><c> the</c><00:32:45.039><c> thresholds</c><00:32:45.919><c> of</c>

00:32:46.230 --> 00:32:46.240 align:start position:0%
map quite nicely onto the thresholds of
 

00:32:46.240 --> 00:32:49.029 align:start position:0%
map quite nicely onto the thresholds of
MPI<00:32:46.799><c> send</c><00:32:47.039><c> being</c><00:32:47.279><c> buffered</c><00:32:47.760><c> or</c><00:32:47.919><c> or</c><00:32:48.000><c> or</c><00:32:48.320><c> or</c><00:32:48.480><c> or</c>

00:32:49.029 --> 00:32:49.039 align:start position:0%
MPI send being buffered or or or or or
 

00:32:49.039 --> 00:32:51.750 align:start position:0%
MPI send being buffered or or or or or
synchronous.<00:32:49.760><c> Okay.</c><00:32:50.640><c> So,</c><00:32:51.120><c> um</c><00:32:51.279><c> I'll</c><00:32:51.600><c> talk</c>

00:32:51.750 --> 00:32:51.760 align:start position:0%
synchronous. Okay. So, um I'll talk
 

00:32:51.760 --> 00:32:54.470 align:start position:0%
synchronous. Okay. So, um I'll talk
about<00:32:52.000><c> these.</c><00:32:52.960><c> So,</c><00:32:53.360><c> so</c><00:32:53.679><c> the</c><00:32:53.840><c> the</c><00:32:54.000><c> eager</c>

00:32:54.470 --> 00:32:54.480 align:start position:0%
about these. So, so the the eager
 

00:32:54.480 --> 00:32:55.909 align:start position:0%
about these. So, so the the eager
protocol<00:32:54.799><c> and</c><00:32:55.039><c> there's</c><00:32:55.200><c> the</c><00:32:55.279><c> rendevu</c>

00:32:55.909 --> 00:32:55.919 align:start position:0%
protocol and there's the rendevu
 

00:32:55.919 --> 00:32:57.269 align:start position:0%
protocol and there's the rendevu
protocol.<00:32:56.320><c> There's</c><00:32:56.480><c> lots</c><00:32:56.640><c> of</c><00:32:56.720><c> various</c><00:32:57.120><c> these</c>

00:32:57.269 --> 00:32:57.279 align:start position:0%
protocol. There's lots of various these
 

00:32:57.279 --> 00:32:58.549 align:start position:0%
protocol. There's lots of various these
but<00:32:57.360><c> if</c><00:32:57.519><c> you</c><00:32:57.679><c> understand</c><00:32:57.919><c> these</c><00:32:58.159><c> you</c><00:32:58.320><c> got</c><00:32:58.399><c> some</c>

00:32:58.549 --> 00:32:58.559 align:start position:0%
but if you understand these you got some
 

00:32:58.559 --> 00:33:00.630 align:start position:0%
but if you understand these you got some
basic<00:32:58.880><c> model</c><00:32:59.200><c> for</c><00:32:59.360><c> how</c><00:32:59.600><c> things</c><00:32:59.760><c> go</c><00:32:59.919><c> on</c><00:33:00.320><c> under</c>

00:33:00.630 --> 00:33:00.640 align:start position:0%
basic model for how things go on under
 

00:33:00.640 --> 00:33:04.630 align:start position:0%
basic model for how things go on under
the<00:33:00.799><c> hood.</c><00:33:01.679><c> So</c><00:33:01.840><c> the</c><00:33:02.080><c> eager</c><00:33:02.480><c> protocol</c><00:33:03.200><c> okay</c><00:33:04.399><c> the</c>

00:33:04.630 --> 00:33:04.640 align:start position:0%
the hood. So the eager protocol okay the
 

00:33:04.640 --> 00:33:07.110 align:start position:0%
the hood. So the eager protocol okay the
initial<00:33:04.960><c> protocol</c><00:33:05.600><c> contains</c><00:33:06.080><c> the</c><00:33:06.320><c> full</c><00:33:06.799><c> data</c>

00:33:07.110 --> 00:33:07.120 align:start position:0%
initial protocol contains the full data
 

00:33:07.120 --> 00:33:09.190 align:start position:0%
initial protocol contains the full data
for<00:33:07.279><c> the</c><00:33:07.440><c> corresponding</c><00:33:07.919><c> MPI</c><00:33:08.399><c> message.</c><00:33:08.880><c> Okay.</c>

00:33:09.190 --> 00:33:09.200 align:start position:0%
for the corresponding MPI message. Okay.
 

00:33:09.200 --> 00:33:11.269 align:start position:0%
for the corresponding MPI message. Okay.
So<00:33:09.360><c> what</c><00:33:09.600><c> when</c><00:33:09.840><c> you</c><00:33:10.000><c> want</c><00:33:10.159><c> to</c><00:33:10.320><c> send</c><00:33:10.559><c> data</c><00:33:10.960><c> you</c>

00:33:11.269 --> 00:33:11.279 align:start position:0%
So what when you want to send data you
 

00:33:11.279 --> 00:33:14.389 align:start position:0%
So what when you want to send data you
basically<00:33:12.399><c> send</c><00:33:12.960><c> all</c><00:33:13.279><c> the</c><00:33:13.519><c> data</c><00:33:13.919><c> you</c><00:33:14.080><c> send</c><00:33:14.240><c> the</c>

00:33:14.389 --> 00:33:14.399 align:start position:0%
basically send all the data you send the
 

00:33:14.399 --> 00:33:16.470 align:start position:0%
basically send all the data you send the
header<00:33:14.720><c> message</c><00:33:15.120><c> and</c><00:33:15.360><c> you</c><00:33:15.600><c> send</c><00:33:15.760><c> the</c><00:33:16.000><c> data</c><00:33:16.320><c> all</c>

00:33:16.470 --> 00:33:16.480 align:start position:0%
header message and you send the data all
 

00:33:16.480 --> 00:33:19.990 align:start position:0%
header message and you send the data all
the<00:33:16.640><c> way</c><00:33:16.799><c> off</c><00:33:17.039><c> the</c><00:33:17.200><c> remote</c><00:33:17.519><c> process.</c><00:33:18.159><c> Okay.</c><00:33:19.440><c> So</c>

00:33:19.990 --> 00:33:20.000 align:start position:0%
the way off the remote process. Okay. So
 

00:33:20.000 --> 00:33:23.350 align:start position:0%
the way off the remote process. Okay. So
um<00:33:21.200><c> if</c><00:33:21.440><c> there's</c><00:33:21.679><c> no</c><00:33:21.919><c> match</c><00:33:22.159><c> you</c><00:33:22.399><c> receive</c><00:33:23.120><c> the</c>

00:33:23.350 --> 00:33:23.360 align:start position:0%
um if there's no match you receive the
 

00:33:23.360 --> 00:33:24.870 align:start position:0%
um if there's no match you receive the
data<00:33:23.600><c> must</c><00:33:23.760><c> be</c><00:33:23.840><c> buffered</c><00:33:24.159><c> at</c><00:33:24.320><c> the</c><00:33:24.399><c> receiver.</c>

00:33:24.870 --> 00:33:24.880 align:start position:0%
data must be buffered at the receiver.
 

00:33:24.880 --> 00:33:26.630 align:start position:0%
data must be buffered at the receiver.
So<00:33:25.120><c> this</c><00:33:25.360><c> is</c><00:33:25.440><c> what</c><00:33:25.600><c> you'd</c><00:33:25.840><c> like</c><00:33:26.080><c> to</c><00:33:26.240><c> do</c><00:33:26.399><c> when</c>

00:33:26.630 --> 00:33:26.640 align:start position:0%
So this is what you'd like to do when
 

00:33:26.640 --> 00:33:28.789 align:start position:0%
So this is what you'd like to do when
you<00:33:26.720><c> do</c><00:33:26.960><c> NPI</c><00:33:27.519><c> send.</c><00:33:27.840><c> what</c><00:33:28.000><c> you'd</c><00:33:28.159><c> like</c><00:33:28.320><c> NPI</c>

00:33:28.789 --> 00:33:28.799 align:start position:0%
you do NPI send. what you'd like NPI
 

00:33:28.799 --> 00:33:31.590 align:start position:0%
you do NPI send. what you'd like NPI
send<00:33:29.039><c> to</c><00:33:29.200><c> do</c><00:33:29.519><c> is</c><00:33:29.760><c> to</c><00:33:30.080><c> is</c><00:33:30.320><c> is</c><00:33:30.559><c> to</c><00:33:30.720><c> copy</c><00:33:31.039><c> the</c><00:33:31.200><c> data</c>

00:33:31.590 --> 00:33:31.600 align:start position:0%
send to do is to is is to copy the data
 

00:33:31.600 --> 00:33:34.310 align:start position:0%
send to do is to is is to copy the data
over<00:33:31.840><c> to</c><00:33:32.000><c> the</c><00:33:32.159><c> remote</c><00:33:32.480><c> process,</c><00:33:33.679><c> get</c><00:33:33.919><c> back</c><00:33:34.159><c> to</c>

00:33:34.310 --> 00:33:34.320 align:start position:0%
over to the remote process, get back to
 

00:33:34.320 --> 00:33:36.870 align:start position:0%
over to the remote process, get back to
you<00:33:34.480><c> and</c><00:33:34.640><c> then</c><00:33:34.880><c> carry</c><00:33:35.120><c> on.</c><00:33:35.760><c> However,</c><00:33:36.559><c> that</c>

00:33:36.870 --> 00:33:36.880 align:start position:0%
you and then carry on. However, that
 

00:33:36.880 --> 00:33:38.950 align:start position:0%
you and then carry on. However, that
requires<00:33:37.360><c> there</c><00:33:37.600><c> to</c><00:33:37.760><c> be</c><00:33:37.840><c> storage</c><00:33:38.159><c> space</c><00:33:38.640><c> at</c>

00:33:38.950 --> 00:33:38.960 align:start position:0%
requires there to be storage space at
 

00:33:38.960 --> 00:33:41.509 align:start position:0%
requires there to be storage space at
the<00:33:39.120><c> remote</c><00:33:39.600><c> process.</c><00:33:40.559><c> And</c><00:33:40.720><c> so</c><00:33:40.960><c> that's</c><00:33:41.279><c> why</c>

00:33:41.509 --> 00:33:41.519 align:start position:0%
the remote process. And so that's why
 

00:33:41.519 --> 00:33:43.669 align:start position:0%
the remote process. And so that's why
this<00:33:41.840><c> can</c><00:33:42.000><c> only</c><00:33:42.240><c> be</c><00:33:42.480><c> done</c><00:33:42.720><c> for</c><00:33:43.200><c> relatively</c>

00:33:43.669 --> 00:33:43.679 align:start position:0%
this can only be done for relatively
 

00:33:43.679 --> 00:33:45.669 align:start position:0%
this can only be done for relatively
small.<00:33:44.080><c> So</c><00:33:44.240><c> what</c><00:33:44.399><c> the</c><00:33:44.640><c> what</c><00:33:44.799><c> what</c><00:33:44.799><c> what</c><00:33:45.039><c> what</c>

00:33:45.669 --> 00:33:45.679 align:start position:0%
small. So what the what what what what
 

00:33:45.679 --> 00:33:49.110 align:start position:0%
small. So what the what what what what
NPA<00:33:46.159><c> does,</c><00:33:46.320><c> it</c><00:33:46.480><c> reserves</c><00:33:46.960><c> space</c><00:33:47.840><c> for</c><00:33:48.559><c> incoming</c>

00:33:49.110 --> 00:33:49.120 align:start position:0%
NPA does, it reserves space for incoming
 

00:33:49.120 --> 00:33:51.350 align:start position:0%
NPA does, it reserves space for incoming
messages<00:33:49.600><c> up</c><00:33:49.840><c> to</c><00:33:49.919><c> a</c><00:33:50.159><c> certain</c><00:33:50.480><c> size.</c><00:33:51.039><c> So</c><00:33:51.120><c> when</c>

00:33:51.350 --> 00:33:51.360 align:start position:0%
messages up to a certain size. So when
 

00:33:51.360 --> 00:33:52.710 align:start position:0%
messages up to a certain size. So when
you<00:33:51.440><c> send</c><00:33:51.679><c> small</c><00:33:51.919><c> messages,</c><00:33:52.240><c> they</c><00:33:52.480><c> will</c><00:33:52.559><c> be</c>

00:33:52.710 --> 00:33:52.720 align:start position:0%
you send small messages, they will be
 

00:33:52.720 --> 00:33:54.230 align:start position:0%
you send small messages, they will be
delivered<00:33:52.960><c> immediately</c><00:33:53.360><c> because</c><00:33:53.679><c> you</c><00:33:53.840><c> know</c>

00:33:54.230 --> 00:33:54.240 align:start position:0%
delivered immediately because you know
 

00:33:54.240 --> 00:33:55.669 align:start position:0%
delivered immediately because you know
there<00:33:54.399><c> is</c><00:33:54.640><c> enough</c><00:33:54.799><c> buffer</c><00:33:55.200><c> space</c><00:33:55.440><c> on</c><00:33:55.600><c> the</c>

00:33:55.669 --> 00:33:55.679 align:start position:0%
there is enough buffer space on the
 

00:33:55.679 --> 00:33:57.190 align:start position:0%
there is enough buffer space on the
other<00:33:55.840><c> side</c><00:33:56.000><c> to</c><00:33:56.240><c> send</c><00:33:56.399><c> it</c><00:33:56.559><c> straight</c><00:33:56.799><c> over.</c>

00:33:57.190 --> 00:33:57.200 align:start position:0%
other side to send it straight over.
 

00:33:57.200 --> 00:33:58.789 align:start position:0%
other side to send it straight over.
Okay.

00:33:58.789 --> 00:33:58.799 align:start position:0%
Okay.
 

00:33:58.799 --> 00:34:02.789 align:start position:0%
Okay.
So<00:33:59.360><c> um</c><00:34:00.159><c> uh</c><00:34:00.720><c> eager</c><00:34:01.760><c> sends</c><00:34:02.159><c> can</c><00:34:02.320><c> complete</c><00:34:02.640><c> as</c>

00:34:02.789 --> 00:34:02.799 align:start position:0%
So um uh eager sends can complete as
 

00:34:02.799 --> 00:34:04.389 align:start position:0%
So um uh eager sends can complete as
soon<00:34:02.880><c> as</c><00:34:03.039><c> initial</c><00:34:03.200><c> proto</c><00:34:03.760><c> has</c><00:34:03.840><c> been</c><00:34:04.000><c> set.</c><00:34:04.240><c> That</c>

00:34:04.389 --> 00:34:04.399 align:start position:0%
soon as initial proto has been set. That
 

00:34:04.399 --> 00:34:06.149 align:start position:0%
soon as initial proto has been set. That
that<00:34:04.559><c> means</c><00:34:04.799><c> if</c><00:34:04.960><c> you</c><00:34:05.120><c> what</c><00:34:05.440><c> it's</c><00:34:05.600><c> saying</c><00:34:05.760><c> is</c><00:34:06.000><c> if</c>

00:34:06.149 --> 00:34:06.159 align:start position:0%
that means if you what it's saying is if
 

00:34:06.159 --> 00:34:08.069 align:start position:0%
that means if you what it's saying is if
you<00:34:06.240><c> do</c><00:34:06.320><c> an</c><00:34:06.480><c> NPI</c><00:34:06.880><c> send</c><00:34:07.120><c> with</c><00:34:07.279><c> a</c><00:34:07.440><c> small</c><00:34:07.679><c> message</c>

00:34:08.069 --> 00:34:08.079 align:start position:0%
you do an NPI send with a small message
 

00:34:08.079 --> 00:34:11.109 align:start position:0%
you do an NPI send with a small message
size<00:34:08.800><c> NPI</c><00:34:09.200><c> say</c><00:34:09.440><c> that's</c><00:34:09.599><c> a</c><00:34:09.760><c> small</c><00:34:10.000><c> message</c><00:34:10.879><c> I'll</c>

00:34:11.109 --> 00:34:11.119 align:start position:0%
size NPI say that's a small message I'll
 

00:34:11.119 --> 00:34:13.990 align:start position:0%
size NPI say that's a small message I'll
copy<00:34:11.440><c> the</c><00:34:11.599><c> data</c><00:34:11.919><c> over</c><00:34:12.320><c> to</c><00:34:12.480><c> the</c><00:34:12.639><c> remote</c><00:34:12.960><c> process</c>

00:34:13.990 --> 00:34:14.000 align:start position:0%
copy the data over to the remote process
 

00:34:14.000 --> 00:34:17.750 align:start position:0%
copy the data over to the remote process
come<00:34:14.320><c> back</c><00:34:14.639><c> and</c><00:34:14.879><c> the</c><00:34:15.119><c> send</c><00:34:15.440><c> completes.</c><00:34:16.240><c> Okay.</c>

00:34:17.750 --> 00:34:17.760 align:start position:0%
come back and the send completes. Okay.
 

00:34:17.760 --> 00:34:19.829 align:start position:0%
come back and the send completes. Okay.
Um

00:34:19.829 --> 00:34:19.839 align:start position:0%
Um
 

00:34:19.839 --> 00:34:24.710 align:start position:0%
Um
okay.

00:34:24.710 --> 00:34:24.720 align:start position:0%
 
 

00:34:24.720 --> 00:34:28.389 align:start position:0%
 
Um,<00:34:25.839><c> so</c><00:34:26.079><c> I'll</c><00:34:26.320><c> come</c><00:34:26.560><c> back</c><00:34:26.800><c> to</c><00:34:27.280><c> how</c><00:34:27.599><c> MPI</c><00:34:28.159><c> COM</c>

00:34:28.389 --> 00:34:28.399 align:start position:0%
Um, so I'll come back to how MPI COM
 

00:34:28.399 --> 00:34:31.909 align:start position:0%
Um, so I'll come back to how MPI COM
interact<00:34:28.800><c> with</c><00:34:28.960><c> the</c><00:34:29.119><c> cues.</c><00:34:30.079><c> Um,</c>

00:34:31.909 --> 00:34:31.919 align:start position:0%
interact with the cues. Um,
 

00:34:31.919 --> 00:34:34.389 align:start position:0%
interact with the cues. Um,
it<00:34:32.240><c> basically</c><00:34:32.560><c> matches</c><00:34:33.040><c> them.</c><00:34:33.200><c> So,</c><00:34:33.359><c> so</c><00:34:33.599><c> I</c><00:34:33.839><c> do</c>

00:34:34.389 --> 00:34:34.399 align:start position:0%
it basically matches them. So, so I do
 

00:34:34.399 --> 00:34:36.869 align:start position:0%
it basically matches them. So, so I do
so<00:34:34.720><c> as</c><00:34:35.440><c> you</c><00:34:35.760><c> could</c><00:34:36.000><c> have</c><00:34:36.159><c> a</c><00:34:36.320><c> different</c><00:34:36.560><c> queue</c>

00:34:36.869 --> 00:34:36.879 align:start position:0%
so as you could have a different queue
 

00:34:36.879 --> 00:34:39.190 align:start position:0%
so as you could have a different queue
for<00:34:37.119><c> each</c><00:34:37.760><c> um</c><00:34:37.919><c> for</c><00:34:38.159><c> each</c><00:34:38.320><c> communicator,</c><00:34:38.960><c> but</c>

00:34:39.190 --> 00:34:39.200 align:start position:0%
for each um for each communicator, but
 

00:34:39.200 --> 00:34:42.710 align:start position:0%
for each um for each communicator, but
NPI<00:34:39.679><c> tends</c><00:34:40.000><c> not</c><00:34:40.320><c> to</c><00:34:41.280><c> um</c><00:34:42.000><c> tends</c><00:34:42.320><c> to</c><00:34:42.480><c> have</c><00:34:42.560><c> a</c>

00:34:42.710 --> 00:34:42.720 align:start position:0%
NPI tends not to um tends to have a
 

00:34:42.720 --> 00:34:44.710 align:start position:0%
NPI tends not to um tends to have a
single<00:34:43.040><c> global</c><00:34:43.440><c> queue.</c><00:34:43.839><c> I'll</c><00:34:44.079><c> come</c><00:34:44.240><c> back</c><00:34:44.399><c> to</c>

00:34:44.710 --> 00:34:44.720 align:start position:0%
single global queue. I'll come back to
 

00:34:44.720 --> 00:34:47.669 align:start position:0%
single global queue. I'll come back to
the<00:34:44.879><c> end.</c><00:34:45.839><c> Uh,</c><00:34:46.240><c> I</c><00:34:46.560><c> don't</c><00:34:46.800><c> think</c><00:34:46.960><c> it</c><00:34:47.200><c> will</c><00:34:47.359><c> help</c>

00:34:47.669 --> 00:34:47.679 align:start position:0%
the end. Uh, I don't think it will help
 

00:34:47.679 --> 00:34:50.310 align:start position:0%
the end. Uh, I don't think it will help
make<00:34:47.839><c> it</c><00:34:48.000><c> more</c><00:34:48.240><c> efficient.</c><00:34:49.200><c> um</c><00:34:49.760><c> in</c><00:34:50.000><c> principle</c>

00:34:50.310 --> 00:34:50.320 align:start position:0%
make it more efficient. um in principle
 

00:34:50.320 --> 00:34:52.629 align:start position:0%
make it more efficient. um in principle
it<00:34:50.560><c> would</c><00:34:51.520><c> because</c><00:34:51.760><c> you</c><00:34:52.000><c> only</c><00:34:52.159><c> have</c><00:34:52.320><c> to</c><00:34:52.399><c> check</c>

00:34:52.629 --> 00:34:52.639 align:start position:0%
it would because you only have to check
 

00:34:52.639 --> 00:34:54.869 align:start position:0%
it would because you only have to check
for<00:34:52.800><c> messages</c><00:34:53.200><c> in</c><00:34:53.359><c> that</c><00:34:53.599><c> communicator</c><00:34:54.399><c> but</c><00:34:54.639><c> in</c>

00:34:54.869 --> 00:34:54.879 align:start position:0%
for messages in that communicator but in
 

00:34:54.879 --> 00:34:56.149 align:start position:0%
for messages in that communicator but in
practice<00:34:55.200><c> I</c><00:34:55.440><c> don't</c><00:34:55.520><c> think</c><00:34:55.679><c> that's</c><00:34:55.839><c> what's</c>

00:34:56.149 --> 00:34:56.159 align:start position:0%
practice I don't think that's what's
 

00:34:56.159 --> 00:34:59.990 align:start position:0%
practice I don't think that's what's
done.<00:34:56.399><c> I'll</c><00:34:56.639><c> come</c><00:34:56.800><c> back</c><00:34:56.960><c> to</c><00:34:57.119><c> that.</c><00:34:58.400><c> Um</c>

00:34:59.990 --> 00:35:00.000 align:start position:0%
done. I'll come back to that. Um
 

00:35:00.000 --> 00:35:01.750 align:start position:0%
done. I'll come back to that. Um
so<00:35:00.160><c> the</c><00:35:00.320><c> eager</c><00:35:00.720><c> protocol</c><00:35:01.119><c> requires</c><00:35:01.440><c> buffering</c>

00:35:01.750 --> 00:35:01.760 align:start position:0%
so the eager protocol requires buffering
 

00:35:01.760 --> 00:35:03.750 align:start position:0%
so the eager protocol requires buffering
the<00:35:01.920><c> receiving</c><00:35:02.320><c> process</c><00:35:02.640><c> it</c><00:35:03.280><c> requires</c><00:35:03.599><c> the</c>

00:35:03.750 --> 00:35:03.760 align:start position:0%
the receiving process it requires the
 

00:35:03.760 --> 00:35:06.950 align:start position:0%
the receiving process it requires the
receiver<00:35:04.160><c> to</c><00:35:04.320><c> have</c><00:35:04.400><c> the</c><00:35:04.640><c> data</c><00:35:04.880><c> already</c><00:35:05.680><c> um</c>

00:35:06.950 --> 00:35:06.960 align:start position:0%
receiver to have the data already um
 

00:35:06.960 --> 00:35:09.349 align:start position:0%
receiver to have the data already um
allocated<00:35:08.000><c> but</c><00:35:08.240><c> that</c><00:35:08.480><c> means</c><00:35:08.720><c> that</c><00:35:09.119><c> you</c><00:35:09.280><c> know</c>

00:35:09.349 --> 00:35:09.359 align:start position:0%
allocated but that means that you know
 

00:35:09.359 --> 00:35:11.109 align:start position:0%
allocated but that means that you know
because<00:35:09.599><c> NPI</c><00:35:10.079><c> is</c><00:35:10.240><c> only</c><00:35:10.400><c> allowed</c><00:35:10.640><c> to</c><00:35:10.720><c> take</c><00:35:10.880><c> up</c><00:35:10.960><c> a</c>

00:35:11.109 --> 00:35:11.119 align:start position:0%
because NPI is only allowed to take up a
 

00:35:11.119 --> 00:35:13.910 align:start position:0%
because NPI is only allowed to take up a
finite<00:35:11.440><c> amount</c><00:35:11.599><c> of</c><00:35:11.839><c> memory</c><00:35:12.960><c> um</c><00:35:13.359><c> then</c><00:35:13.680><c> there</c>

00:35:13.910 --> 00:35:13.920 align:start position:0%
finite amount of memory um then there
 

00:35:13.920 --> 00:35:16.230 align:start position:0%
finite amount of memory um then there
has<00:35:14.079><c> to</c><00:35:14.160><c> be</c><00:35:14.240><c> a</c><00:35:14.400><c> limit</c><00:35:14.640><c> on</c><00:35:15.440><c> you</c><00:35:15.680><c> can</c><00:35:15.839><c> think</c><00:35:16.000><c> I</c>

00:35:16.230 --> 00:35:16.240 align:start position:0%
has to be a limit on you can think I
 

00:35:16.240 --> 00:35:17.589 align:start position:0%
has to be a limit on you can think I
will<00:35:16.320><c> do</c><00:35:16.480><c> eager</c><00:35:16.800><c> protocol</c><00:35:17.119><c> up</c><00:35:17.280><c> to</c><00:35:17.440><c> 10</c>

00:35:17.589 --> 00:35:17.599 align:start position:0%
will do eager protocol up to 10
 

00:35:17.599 --> 00:35:19.910 align:start position:0%
will do eager protocol up to 10
kilobytes<00:35:18.160><c> but</c><00:35:18.400><c> not</c><00:35:18.560><c> beyond</c><00:35:19.440><c> and</c><00:35:19.680><c> ready</c>

00:35:19.910 --> 00:35:19.920 align:start position:0%
kilobytes but not beyond and ready
 

00:35:19.920 --> 00:35:23.190 align:start position:0%
kilobytes but not beyond and ready
messages<00:35:20.320><c> I'm</c><00:35:20.480><c> not</c><00:35:20.640><c> going</c><00:35:20.720><c> to</c><00:35:20.800><c> talk</c><00:35:21.040><c> about</c>

00:35:23.190 --> 00:35:23.200 align:start position:0%
messages I'm not going to talk about
 

00:35:23.200 --> 00:35:25.670 align:start position:0%
messages I'm not going to talk about
so<00:35:23.680><c> the</c><00:35:23.920><c> rendevu</c><00:35:24.560><c> protocol</c><00:35:24.880><c> is</c><00:35:25.119><c> kind</c><00:35:25.200><c> of</c><00:35:25.280><c> the</c>

00:35:25.670 --> 00:35:25.680 align:start position:0%
so the rendevu protocol is kind of the
 

00:35:25.680 --> 00:35:30.630 align:start position:0%
so the rendevu protocol is kind of the
is<00:35:25.920><c> the</c><00:35:26.079><c> most</c><00:35:26.880><c> um</c><00:35:27.920><c> is</c><00:35:28.240><c> the</c><00:35:28.480><c> most</c>

00:35:30.630 --> 00:35:30.640 align:start position:0%
is the most um is the most
 

00:35:30.640 --> 00:35:32.950 align:start position:0%
is the most um is the most
general<00:35:31.119><c> but</c><00:35:31.599><c> resource</c><00:35:32.000><c> intensive.</c><00:35:32.640><c> What</c>

00:35:32.950 --> 00:35:32.960 align:start position:0%
general but resource intensive. What
 

00:35:32.960 --> 00:35:35.349 align:start position:0%
general but resource intensive. What
happens<00:35:33.200><c> is</c><00:35:34.079><c> uh</c><00:35:34.160><c> in</c><00:35:34.320><c> the</c><00:35:34.400><c> rendev</c><00:35:34.960><c> protocol</c>

00:35:35.349 --> 00:35:35.359 align:start position:0%
happens is uh in the rendev protocol
 

00:35:35.359 --> 00:35:36.470 align:start position:0%
happens is uh in the rendev protocol
when<00:35:35.520><c> you</c><00:35:35.599><c> send</c><00:35:35.680><c> the</c><00:35:35.839><c> initial</c><00:35:36.079><c> protocol</c>

00:35:36.470 --> 00:35:36.480 align:start position:0%
when you send the initial protocol
 

00:35:36.480 --> 00:35:38.310 align:start position:0%
when you send the initial protocol
message<00:35:36.960><c> it</c><00:35:37.200><c> only</c><00:35:37.359><c> contains</c><00:35:37.680><c> the</c><00:35:37.839><c> envelope</c>

00:35:38.310 --> 00:35:38.320 align:start position:0%
message it only contains the envelope
 

00:35:38.320 --> 00:35:39.910 align:start position:0%
message it only contains the envelope
information.<00:35:38.800><c> So</c><00:35:38.960><c> if</c><00:35:39.119><c> you</c><00:35:39.200><c> got</c><00:35:39.599><c> send</c><00:35:39.760><c> a</c>

00:35:39.910 --> 00:35:39.920 align:start position:0%
information. So if you got send a
 

00:35:39.920 --> 00:35:42.630 align:start position:0%
information. So if you got send a
gigabyte<00:35:40.400><c> of</c><00:35:40.560><c> data</c><00:35:41.280><c> what</c><00:35:41.440><c> NPI</c><00:35:42.000><c> does</c><00:35:42.160><c> is</c><00:35:42.400><c> says</c>

00:35:42.630 --> 00:35:42.640 align:start position:0%
gigabyte of data what NPI does is says
 

00:35:42.640 --> 00:35:43.990 align:start position:0%
gigabyte of data what NPI does is says
well<00:35:42.800><c> I</c><00:35:42.960><c> will</c><00:35:43.119><c> actually</c><00:35:43.280><c> just</c><00:35:43.440><c> send</c><00:35:43.599><c> a</c><00:35:43.839><c> little</c>

00:35:43.990 --> 00:35:44.000 align:start position:0%
well I will actually just send a little
 

00:35:44.000 --> 00:35:46.790 align:start position:0%
well I will actually just send a little
header.<00:35:44.400><c> So</c><00:35:44.560><c> I'll</c><00:35:44.800><c> tell</c><00:35:44.960><c> the</c><00:35:45.200><c> other</c><00:35:45.359><c> guy</c><00:35:46.560><c> I've</c>

00:35:46.790 --> 00:35:46.800 align:start position:0%
header. So I'll tell the other guy I've
 

00:35:46.800 --> 00:35:48.550 align:start position:0%
header. So I'll tell the other guy I've
got<00:35:46.960><c> data</c><00:35:47.280><c> for</c><00:35:47.440><c> you.</c><00:35:47.760><c> Okay</c><00:35:48.000><c> so</c><00:35:48.160><c> that</c><00:35:48.240><c> that</c>

00:35:48.550 --> 00:35:48.560 align:start position:0%
got data for you. Okay so that that
 

00:35:48.560 --> 00:35:49.910 align:start position:0%
got data for you. Okay so that that
that's<00:35:48.800><c> it's</c><00:35:48.960><c> called</c><00:35:49.040><c> a</c><00:35:49.200><c> run</c><00:35:49.599><c> because</c><00:35:49.760><c> you</c>

00:35:49.910 --> 00:35:49.920 align:start position:0%
that's it's called a run because you
 

00:35:49.920 --> 00:35:54.069 align:start position:0%
that's it's called a run because you
send<00:35:50.000><c> an</c><00:35:50.240><c> initial</c><00:35:50.560><c> message.</c><00:35:51.119><c> Okay.</c><00:35:52.160><c> Then</c><00:35:53.280><c> when</c>

00:35:54.069 --> 00:35:54.079 align:start position:0%
send an initial message. Okay. Then when
 

00:35:54.079 --> 00:35:56.630 align:start position:0%
send an initial message. Okay. Then when
um<00:35:54.240><c> the</c><00:35:54.480><c> receiver</c><00:35:54.960><c> is</c><00:35:55.200><c> supposed</c><00:35:55.440><c> to</c><00:35:55.680><c> receive</c>

00:35:56.630 --> 00:35:56.640 align:start position:0%
um the receiver is supposed to receive
 

00:35:56.640 --> 00:35:58.550 align:start position:0%
um the receiver is supposed to receive
it<00:35:56.880><c> notices</c><00:35:57.280><c> that</c><00:35:57.440><c> and</c><00:35:57.599><c> then</c><00:35:57.680><c> it</c><00:35:57.839><c> gets</c><00:35:58.079><c> back</c><00:35:58.320><c> to</c>

00:35:58.550 --> 00:35:58.560 align:start position:0%
it notices that and then it gets back to
 

00:35:58.560 --> 00:36:01.190 align:start position:0%
it notices that and then it gets back to
you<00:35:59.200><c> and</c><00:35:59.520><c> says</c><00:35:59.920><c> yes</c><00:36:00.240><c> I'm</c><00:36:00.480><c> ready</c><00:36:00.640><c> for</c><00:36:00.800><c> the</c><00:36:00.960><c> data</c>

00:36:01.190 --> 00:36:01.200 align:start position:0%
you and says yes I'm ready for the data
 

00:36:01.200 --> 00:36:02.790 align:start position:0%
you and says yes I'm ready for the data
and<00:36:01.359><c> then</c><00:36:01.599><c> it's</c><00:36:01.839><c> sent.</c><00:36:02.240><c> So</c><00:36:02.320><c> the</c><00:36:02.480><c> eager</c>

00:36:02.790 --> 00:36:02.800 align:start position:0%
and then it's sent. So the eager
 

00:36:02.800 --> 00:36:04.310 align:start position:0%
and then it's sent. So the eager
protocol<00:36:03.119><c> is</c><00:36:03.280><c> fast</c><00:36:03.520><c> because</c><00:36:03.680><c> it's</c><00:36:03.920><c> fire</c><00:36:04.160><c> and</c>

00:36:04.310 --> 00:36:04.320 align:start position:0%
protocol is fast because it's fire and
 

00:36:04.320 --> 00:36:06.630 align:start position:0%
protocol is fast because it's fire and
forget<00:36:04.720><c> it's</c><00:36:05.040><c> one</c><00:36:05.280><c> copy.</c><00:36:05.920><c> The</c><00:36:06.079><c> Ron</c><00:36:06.400><c> EV</c>

00:36:06.630 --> 00:36:06.640 align:start position:0%
forget it's one copy. The Ron EV
 

00:36:06.640 --> 00:36:07.990 align:start position:0%
forget it's one copy. The Ron EV
protocol<00:36:06.960><c> which</c><00:36:07.119><c> you</c><00:36:07.280><c> have</c><00:36:07.359><c> to</c><00:36:07.440><c> use</c><00:36:07.599><c> for</c><00:36:07.839><c> big</c>

00:36:07.990 --> 00:36:08.000 align:start position:0%
protocol which you have to use for big
 

00:36:08.000 --> 00:36:10.310 align:start position:0%
protocol which you have to use for big
messages<00:36:08.400><c> is</c><00:36:08.560><c> is</c><00:36:08.640><c> is</c><00:36:09.280><c> slower.</c><00:36:09.760><c> You</c><00:36:09.920><c> send</c><00:36:10.079><c> the</c>

00:36:10.310 --> 00:36:10.320 align:start position:0%
messages is is is slower. You send the
 

00:36:10.320 --> 00:36:12.550 align:start position:0%
messages is is is slower. You send the
protocol<00:36:10.720><c> message</c><00:36:11.680><c> then</c><00:36:11.920><c> the</c><00:36:12.079><c> guy</c><00:36:12.240><c> gets</c><00:36:12.400><c> back</c>

00:36:12.550 --> 00:36:12.560 align:start position:0%
protocol message then the guy gets back
 

00:36:12.560 --> 00:36:14.390 align:start position:0%
protocol message then the guy gets back
to<00:36:12.720><c> say</c><00:36:12.960><c> I'm</c><00:36:13.119><c> ready.</c><00:36:13.680><c> Then</c><00:36:13.839><c> you</c><00:36:14.079><c> send</c><00:36:14.240><c> the</c>

00:36:14.390 --> 00:36:14.400 align:start position:0%
to say I'm ready. Then you send the
 

00:36:14.400 --> 00:36:16.150 align:start position:0%
to say I'm ready. Then you send the
data.<00:36:14.720><c> So</c><00:36:14.880><c> it's</c><00:36:15.119><c> there</c><00:36:15.440><c> back</c><00:36:15.680><c> and</c><00:36:15.920><c> there</c>

00:36:16.150 --> 00:36:16.160 align:start position:0%
data. So it's there back and there
 

00:36:16.160 --> 00:36:18.310 align:start position:0%
data. So it's there back and there
again.<00:36:16.640><c> Okay.</c><00:36:17.040><c> So</c><00:36:17.200><c> it's</c><00:36:17.280><c> a</c><00:36:17.440><c> rendevous</c><00:36:18.079><c> because</c>

00:36:18.310 --> 00:36:18.320 align:start position:0%
again. Okay. So it's a rendevous because
 

00:36:18.320 --> 00:36:21.990 align:start position:0%
again. Okay. So it's a rendevous because
there's<00:36:18.560><c> a</c><00:36:19.119><c> a</c><00:36:19.440><c> handshake.</c><00:36:20.320><c> Okay.</c>

00:36:21.990 --> 00:36:22.000 align:start position:0%
there's a a handshake. Okay.
 

00:36:22.000 --> 00:36:25.750 align:start position:0%
there's a a handshake. Okay.
So<00:36:22.640><c> um</c><00:36:23.839><c> um</c>

00:36:25.750 --> 00:36:25.760 align:start position:0%
So um um
 

00:36:25.760 --> 00:36:27.670 align:start position:0%
So um um
it<00:36:26.240><c> for</c><00:36:26.640><c> large</c><00:36:26.960><c> messages</c><00:36:27.280><c> after</c><00:36:27.520><c> the</c>

00:36:27.670 --> 00:36:27.680 align:start position:0%
it for large messages after the
 

00:36:27.680 --> 00:36:30.630 align:start position:0%
it for large messages after the
rendevous<00:36:28.240><c> can't</c><00:36:28.480><c> be</c><00:36:28.640><c> faster</c><00:36:29.040><c> because</c><00:36:29.599><c> so</c><00:36:29.839><c> so</c>

00:36:30.630 --> 00:36:30.640 align:start position:0%
rendevous can't be faster because so so
 

00:36:30.640 --> 00:36:33.750 align:start position:0%
rendevous can't be faster because so so
this<00:36:30.960><c> is</c><00:36:31.440><c> you</c><00:36:31.680><c> might</c><00:36:32.000><c> so</c><00:36:32.240><c> so</c><00:36:32.640><c> basically</c><00:36:33.119><c> you</c>

00:36:33.750 --> 00:36:33.760 align:start position:0%
this is you might so so basically you
 

00:36:33.760 --> 00:36:35.510 align:start position:0%
this is you might so so basically you
when<00:36:34.000><c> you</c><00:36:34.079><c> call</c><00:36:34.320><c> NPI</c><00:36:34.880><c> send</c><00:36:35.119><c> you're</c><00:36:35.359><c> just</c>

00:36:35.510 --> 00:36:35.520 align:start position:0%
when you call NPI send you're just
 

00:36:35.520 --> 00:36:37.990 align:start position:0%
when you call NPI send you're just
telling<00:36:35.760><c> NPI</c><00:36:36.320><c> look</c><00:36:36.960><c> please</c><00:36:37.359><c> deliver</c><00:36:37.760><c> this</c>

00:36:37.990 --> 00:36:38.000 align:start position:0%
telling NPI look please deliver this
 

00:36:38.000 --> 00:36:40.230 align:start position:0%
telling NPI look please deliver this
message<00:36:38.800><c> in</c><00:36:39.119><c> the</c><00:36:39.280><c> most</c><00:36:39.440><c> efficient</c><00:36:39.839><c> way</c><00:36:40.000><c> and</c>

00:36:40.230 --> 00:36:40.240 align:start position:0%
message in the most efficient way and
 

00:36:40.240 --> 00:36:42.150 align:start position:0%
message in the most efficient way and
NPI<00:36:40.640><c> would</c><00:36:40.880><c> decide</c><00:36:41.200><c> whether</c><00:36:41.440><c> it</c><00:36:41.680><c> wants</c><00:36:41.839><c> to</c><00:36:42.000><c> do</c>

00:36:42.150 --> 00:36:42.160 align:start position:0%
NPI would decide whether it wants to do
 

00:36:42.160 --> 00:36:45.750 align:start position:0%
NPI would decide whether it wants to do
it<00:36:42.960><c> asynchronously</c><00:36:44.000><c> in</c><00:36:44.240><c> the</c><00:36:44.400><c> eager</c><00:36:44.880><c> protocol</c>

00:36:45.750 --> 00:36:45.760 align:start position:0%
it asynchronously in the eager protocol
 

00:36:45.760 --> 00:36:47.349 align:start position:0%
it asynchronously in the eager protocol
or<00:36:46.079><c> if</c><00:36:46.240><c> it</c><00:36:46.400><c> do</c><00:36:46.480><c> it</c><00:36:46.640><c> synchronously</c><00:36:47.040><c> during</c><00:36:47.200><c> the</c>

00:36:47.349 --> 00:36:47.359 align:start position:0%
or if it do it synchronously during the
 

00:36:47.359 --> 00:36:49.670 align:start position:0%
or if it do it synchronously during the
rendevu<00:36:48.000><c> protocol</c><00:36:48.720><c> and</c><00:36:49.040><c> hopefully</c><00:36:49.359><c> it</c><00:36:49.520><c> will</c>

00:36:49.670 --> 00:36:49.680 align:start position:0%
rendevu protocol and hopefully it will
 

00:36:49.680 --> 00:36:51.750 align:start position:0%
rendevu protocol and hopefully it will
choose<00:36:49.839><c> to</c><00:36:50.079><c> switch</c><00:36:50.320><c> over</c><00:36:50.560><c> a</c><00:36:50.800><c> sensible</c><00:36:51.280><c> point.</c>

00:36:51.750 --> 00:36:51.760 align:start position:0%
choose to switch over a sensible point.
 

00:36:51.760 --> 00:36:53.589 align:start position:0%
choose to switch over a sensible point.
Okay,<00:36:52.079><c> the</c><00:36:52.320><c> idea</c><00:36:52.480><c> is</c><00:36:52.720><c> you</c><00:36:52.960><c> shouldn't</c><00:36:53.200><c> choose,</c>

00:36:53.589 --> 00:36:53.599 align:start position:0%
Okay, the idea is you shouldn't choose,
 

00:36:53.599 --> 00:36:55.829 align:start position:0%
Okay, the idea is you shouldn't choose,
NPI<00:36:54.160><c> can</c><00:36:54.320><c> choose.</c><00:36:55.119><c> That</c><00:36:55.359><c> does</c><00:36:55.520><c> have</c><00:36:55.599><c> the</c>

00:36:55.829 --> 00:36:55.839 align:start position:0%
NPI can choose. That does have the
 

00:36:55.839 --> 00:36:57.190 align:start position:0%
NPI can choose. That does have the
unfortunate<00:36:56.320><c> side</c><00:36:56.560><c> effect.</c><00:36:56.880><c> You</c><00:36:57.040><c> don't</c><00:36:57.119><c> know</c>

00:36:57.190 --> 00:36:57.200 align:start position:0%
unfortunate side effect. You don't know
 

00:36:57.200 --> 00:36:58.870 align:start position:0%
unfortunate side effect. You don't know
if<00:36:57.440><c> NPI</c><00:36:57.920><c> send</c><00:36:58.079><c> is</c><00:36:58.320><c> synchronous</c><00:36:58.640><c> or</c>

00:36:58.870 --> 00:36:58.880 align:start position:0%
if NPI send is synchronous or
 

00:36:58.880 --> 00:37:01.109 align:start position:0%
if NPI send is synchronous or
asynchronous,<00:36:59.599><c> but</c><00:36:59.839><c> it</c><00:37:00.000><c> has</c><00:37:00.480><c> but</c><00:37:00.720><c> the</c><00:37:00.880><c> benefit</c>

00:37:01.109 --> 00:37:01.119 align:start position:0%
asynchronous, but it has but the benefit
 

00:37:01.119 --> 00:37:03.349 align:start position:0%
asynchronous, but it has but the benefit
is<00:37:01.359><c> NPI</c><00:37:01.920><c> can</c><00:37:02.079><c> choose</c><00:37:02.400><c> to</c><00:37:02.640><c> deliver</c><00:37:02.960><c> messages</c>

00:37:03.349 --> 00:37:03.359 align:start position:0%
is NPI can choose to deliver messages
 

00:37:03.359 --> 00:37:06.230 align:start position:0%
is NPI can choose to deliver messages
sent<00:37:03.760><c> NPI</c><00:37:04.240><c> send</c><00:37:04.800><c> in</c><00:37:05.119><c> the</c><00:37:05.280><c> way</c><00:37:05.359><c> it</c><00:37:05.599><c> thinks</c><00:37:05.920><c> is</c>

00:37:06.230 --> 00:37:06.240 align:start position:0%
sent NPI send in the way it thinks is
 

00:37:06.240 --> 00:37:09.589 align:start position:0%
sent NPI send in the way it thinks is
most<00:37:06.560><c> efficient.</c><00:37:07.280><c> However,</c><00:37:08.720><c> uh</c><00:37:08.800><c> the</c><00:37:09.040><c> rendev</c>

00:37:09.589 --> 00:37:09.599 align:start position:0%
most efficient. However, uh the rendev
 

00:37:09.599 --> 00:37:12.150 align:start position:0%
most efficient. However, uh the rendev
protocol<00:37:10.320><c> which</c><00:37:10.560><c> is</c><00:37:10.800><c> there</c><00:37:11.119><c> back</c><00:37:11.440><c> there</c><00:37:11.680><c> again</c>

00:37:12.150 --> 00:37:12.160 align:start position:0%
protocol which is there back there again
 

00:37:12.160 --> 00:37:14.550 align:start position:0%
protocol which is there back there again
will<00:37:12.480><c> have</c><00:37:12.560><c> a</c><00:37:12.800><c> higher</c><00:37:13.359><c> latency</c><00:37:14.320><c> but</c>

00:37:14.550 --> 00:37:14.560 align:start position:0%
will have a higher latency but
 

00:37:14.560 --> 00:37:16.230 align:start position:0%
will have a higher latency but
potentially<00:37:15.040><c> bigger</c><00:37:15.359><c> bandwidth.</c><00:37:15.760><c> I</c><00:37:15.920><c> mean</c><00:37:16.079><c> so</c>

00:37:16.230 --> 00:37:16.240 align:start position:0%
potentially bigger bandwidth. I mean so
 

00:37:16.240 --> 00:37:17.910 align:start position:0%
potentially bigger bandwidth. I mean so
we<00:37:16.640><c> we'll</c><00:37:16.800><c> see</c><00:37:16.960><c> after</c><00:37:17.119><c> the</c><00:37:17.280><c> break</c><00:37:17.520><c> we'll</c><00:37:17.680><c> run</c><00:37:17.839><c> a</c>

00:37:17.910 --> 00:37:17.920 align:start position:0%
we we'll see after the break we'll run a
 

00:37:17.920 --> 00:37:19.190 align:start position:0%
we we'll see after the break we'll run a
ping<00:37:18.160><c> pong</c><00:37:18.320><c> code</c><00:37:18.480><c> and</c><00:37:18.640><c> try</c><00:37:18.720><c> and</c><00:37:18.880><c> pick</c><00:37:19.040><c> out</c>

00:37:19.190 --> 00:37:19.200 align:start position:0%
ping pong code and try and pick out
 

00:37:19.200 --> 00:37:23.030 align:start position:0%
ping pong code and try and pick out
these<00:37:19.440><c> things.</c><00:37:20.480><c> um</c><00:37:20.880><c> in</c><00:37:21.200><c> practice.</c>

00:37:23.030 --> 00:37:23.040 align:start position:0%
these things. um in practice.
 

00:37:23.040 --> 00:37:26.550 align:start position:0%
these things. um in practice.
So<00:37:23.280><c> what</c><00:37:23.440><c> you</c><00:37:23.680><c> tend</c><00:37:23.920><c> to</c><00:37:24.079><c> see</c><00:37:24.480><c> okay</c><00:37:25.440><c> is</c><00:37:25.760><c> that</c><00:37:26.320><c> if</c>

00:37:26.550 --> 00:37:26.560 align:start position:0%
So what you tend to see okay is that if
 

00:37:26.560 --> 00:37:29.190 align:start position:0%
So what you tend to see okay is that if
you<00:37:26.720><c> pl</c><00:37:27.119><c> the</c><00:37:27.280><c> time</c><00:37:27.440><c> against</c><00:37:27.760><c> the</c><00:37:28.000><c> message</c><00:37:28.320><c> size</c>

00:37:29.190 --> 00:37:29.200 align:start position:0%
you pl the time against the message size
 

00:37:29.200 --> 00:37:31.990 align:start position:0%
you pl the time against the message size
for<00:37:29.440><c> small</c><00:37:29.760><c> messages</c><00:37:30.160><c> you</c><00:37:30.400><c> will</c><00:37:30.560><c> get</c><00:37:30.720><c> this</c><00:37:31.359><c> um</c>

00:37:31.990 --> 00:37:32.000 align:start position:0%
for small messages you will get this um
 

00:37:32.000 --> 00:37:35.990 align:start position:0%
for small messages you will get this um
quick<00:37:32.960><c> um</c><00:37:33.599><c> um</c><00:37:33.839><c> delivery</c><00:37:34.880><c> relatively</c><00:37:35.520><c> constant</c>

00:37:35.990 --> 00:37:36.000 align:start position:0%
quick um um delivery relatively constant
 

00:37:36.000 --> 00:37:38.150 align:start position:0%
quick um um delivery relatively constant
time<00:37:36.640><c> because</c><00:37:36.960><c> NPI</c><00:37:37.440><c> can</c><00:37:37.599><c> just</c><00:37:37.760><c> deliver</c><00:37:38.000><c> the</c>

00:37:38.150 --> 00:37:38.160 align:start position:0%
time because NPI can just deliver the
 

00:37:38.160 --> 00:37:40.870 align:start position:0%
time because NPI can just deliver the
whole<00:37:38.800><c> once</c><00:37:39.520><c> but</c><00:37:39.760><c> at</c><00:37:40.000><c> some</c><00:37:40.240><c> point</c><00:37:40.480><c> when</c><00:37:40.720><c> you</c>

00:37:40.870 --> 00:37:40.880 align:start position:0%
whole once but at some point when you
 

00:37:40.880 --> 00:37:43.190 align:start position:0%
whole once but at some point when you
get<00:37:41.040><c> beyond</c><00:37:41.280><c> this</c><00:37:41.520><c> eager</c><00:37:41.920><c> threshold</c><00:37:42.480><c> NPI</c><00:37:42.960><c> says</c>

00:37:43.190 --> 00:37:43.200 align:start position:0%
get beyond this eager threshold NPI says
 

00:37:43.200 --> 00:37:44.790 align:start position:0%
get beyond this eager threshold NPI says
well<00:37:43.359><c> I</c><00:37:43.440><c> I</c><00:37:43.680><c> have</c><00:37:43.760><c> to</c><00:37:43.839><c> now</c><00:37:44.079><c> do</c><00:37:44.160><c> the</c><00:37:44.240><c> rendev</c>

00:37:44.790 --> 00:37:44.800 align:start position:0%
well I I have to now do the rendev
 

00:37:44.800 --> 00:37:47.270 align:start position:0%
well I I have to now do the rendev
protocol<00:37:45.119><c> I</c><00:37:45.280><c> have</c><00:37:45.440><c> to</c><00:37:45.520><c> do</c><00:37:46.000><c> here's</c><00:37:46.320><c> some</c><00:37:46.560><c> data</c>

00:37:47.270 --> 00:37:47.280 align:start position:0%
protocol I have to do here's some data
 

00:37:47.280 --> 00:37:49.270 align:start position:0%
protocol I have to do here's some data
get<00:37:47.520><c> back</c><00:37:47.680><c> to</c><00:37:47.839><c> you</c><00:37:48.000><c> send</c><00:37:48.160><c> it</c><00:37:48.400><c> later</c><00:37:48.640><c> on</c><00:37:49.040><c> and</c>

00:37:49.270 --> 00:37:49.280 align:start position:0%
get back to you send it later on and
 

00:37:49.280 --> 00:37:51.430 align:start position:0%
get back to you send it later on and
you'll<00:37:49.520><c> see</c><00:37:49.680><c> this</c><00:37:49.839><c> this</c><00:37:50.240><c> jump</c><00:37:50.800><c> so</c><00:37:51.040><c> you</c><00:37:51.200><c> see</c>

00:37:51.430 --> 00:37:51.440 align:start position:0%
you'll see this this jump so you see
 

00:37:51.440 --> 00:37:53.349 align:start position:0%
you'll see this this jump so you see
something<00:37:51.680><c> a</c><00:37:52.079><c> bit</c><00:37:52.320><c> like</c><00:37:52.480><c> this</c><00:37:52.640><c> that</c><00:37:52.960><c> for</c><00:37:53.119><c> small</c>

00:37:53.349 --> 00:37:53.359 align:start position:0%
something a bit like this that for small
 

00:37:53.359 --> 00:37:57.109 align:start position:0%
something a bit like this that for small
messages<00:37:54.160><c> you</c><00:37:54.480><c> get</c><00:37:55.040><c> um</c><00:37:55.760><c> fast</c><00:37:56.240><c> delivery</c><00:37:56.880><c> and</c>

00:37:57.109 --> 00:37:57.119 align:start position:0%
messages you get um fast delivery and
 

00:37:57.119 --> 00:38:00.069 align:start position:0%
messages you get um fast delivery and
above<00:37:57.520><c> some</c><00:37:57.760><c> size</c><00:37:58.079><c> which</c><00:37:58.320><c> is</c><00:37:58.480><c> this</c><00:37:59.200><c> eager</c>

00:38:00.069 --> 00:38:00.079 align:start position:0%
above some size which is this eager
 

00:38:00.079 --> 00:38:02.550 align:start position:0%
above some size which is this eager
limit<00:38:00.720><c> as</c><00:38:00.960><c> it's</c><00:38:01.200><c> called</c><00:38:01.520><c> which</c><00:38:01.680><c> is</c><00:38:01.839><c> be</c><00:38:02.240><c> maybe</c><00:38:02.400><c> a</c>

00:38:02.550 --> 00:38:02.560 align:start position:0%
limit as it's called which is be maybe a
 

00:38:02.560 --> 00:38:04.870 align:start position:0%
limit as it's called which is be maybe a
few<00:38:02.720><c> tens</c><00:38:02.960><c> of</c><00:38:03.119><c> kilobytes</c><00:38:04.000><c> you'll</c><00:38:04.240><c> get</c><00:38:04.400><c> a</c><00:38:04.560><c> jump</c>

00:38:04.870 --> 00:38:04.880 align:start position:0%
few tens of kilobytes you'll get a jump
 

00:38:04.880 --> 00:38:07.109 align:start position:0%
few tens of kilobytes you'll get a jump
and<00:38:05.040><c> then</c><00:38:05.200><c> you'll</c><00:38:05.440><c> get</c><00:38:05.680><c> another</c><00:38:06.400><c> rise</c><00:38:06.720><c> as</c><00:38:06.960><c> you</c>

00:38:07.109 --> 00:38:07.119 align:start position:0%
and then you'll get another rise as you
 

00:38:07.119 --> 00:38:09.270 align:start position:0%
and then you'll get another rise as you
as<00:38:07.359><c> you</c><00:38:07.599><c> have</c><00:38:07.760><c> a</c><00:38:07.839><c> latency</c><00:38:08.320><c> bandwidth</c><00:38:08.720><c> model</c><00:38:09.040><c> up</c>

00:38:09.270 --> 00:38:09.280 align:start position:0%
as you have a latency bandwidth model up
 

00:38:09.280 --> 00:38:11.109 align:start position:0%
as you have a latency bandwidth model up
here

00:38:11.109 --> 00:38:11.119 align:start position:0%
here
 

00:38:11.119 --> 00:38:13.430 align:start position:0%
here
um

00:38:13.430 --> 00:38:13.440 align:start position:0%
um
 

00:38:13.440 --> 00:38:16.790 align:start position:0%
um
actually<00:38:14.480><c> um</c><00:38:15.119><c> there</c><00:38:15.359><c> may</c><00:38:15.520><c> be</c><00:38:15.680><c> other</c><00:38:16.240><c> for</c><00:38:16.560><c> very</c>

00:38:16.790 --> 00:38:16.800 align:start position:0%
actually um there may be other for very
 

00:38:16.800 --> 00:38:18.390 align:start position:0%
actually um there may be other for very
short<00:38:17.119><c> messages</c><00:38:17.599><c> if</c><00:38:17.760><c> you're</c><00:38:17.920><c> just</c><00:38:18.079><c> sending</c>

00:38:18.390 --> 00:38:18.400 align:start position:0%
short messages if you're just sending
 

00:38:18.400 --> 00:38:20.870 align:start position:0%
short messages if you're just sending
one<00:38:19.359><c> a</c><00:38:19.680><c> double</c><00:38:19.920><c> precision</c><00:38:20.240><c> number</c><00:38:20.640><c> eight</c>

00:38:20.870 --> 00:38:20.880 align:start position:0%
one a double precision number eight
 

00:38:20.880 --> 00:38:23.109 align:start position:0%
one a double precision number eight
bytes<00:38:21.520><c> Okay,</c><00:38:22.079><c> the</c><00:38:22.320><c> obvious</c><00:38:22.560><c> thing</c><00:38:22.720><c> to</c><00:38:22.880><c> do</c><00:38:22.960><c> is</c>

00:38:23.109 --> 00:38:23.119 align:start position:0%
bytes Okay, the obvious thing to do is
 

00:38:23.119 --> 00:38:24.470 align:start position:0%
bytes Okay, the obvious thing to do is
just<00:38:23.280><c> to</c><00:38:23.440><c> send</c><00:38:23.599><c> it</c><00:38:23.760><c> on</c><00:38:23.920><c> the</c><00:38:24.000><c> header.</c><00:38:24.320><c> The</c>

00:38:24.470 --> 00:38:24.480 align:start position:0%
just to send it on the header. The
 

00:38:24.480 --> 00:38:26.150 align:start position:0%
just to send it on the header. The
header<00:38:24.800><c> probably</c><00:38:24.960><c> has</c><00:38:25.119><c> some</c><00:38:25.280><c> unused</c><00:38:25.760><c> space</c><00:38:26.000><c> on</c>

00:38:26.150 --> 00:38:26.160 align:start position:0%
header probably has some unused space on
 

00:38:26.160 --> 00:38:28.710 align:start position:0%
header probably has some unused space on
it.<00:38:26.560><c> So</c><00:38:26.800><c> there</c><00:38:26.960><c> will</c><00:38:27.119><c> be</c><00:38:27.280><c> a</c><00:38:27.440><c> a</c><00:38:27.839><c> third</c><00:38:28.240><c> region</c>

00:38:28.710 --> 00:38:28.720 align:start position:0%
it. So there will be a a third region
 

00:38:28.720 --> 00:38:30.870 align:start position:0%
it. So there will be a a third region
which<00:38:28.960><c> is</c><00:38:29.200><c> very</c><00:38:29.520><c> small</c><00:38:29.839><c> messages.</c><00:38:30.480><c> So</c><00:38:30.720><c> this</c>

00:38:30.870 --> 00:38:30.880 align:start position:0%
which is very small messages. So this
 

00:38:30.880 --> 00:38:33.430 align:start position:0%
which is very small messages. So this
this<00:38:31.200><c> corresponds</c><00:38:31.760><c> to</c><00:38:32.000><c> sending</c><00:38:32.640><c> a</c><00:38:32.960><c> protocol</c>

00:38:33.430 --> 00:38:33.440 align:start position:0%
this corresponds to sending a protocol
 

00:38:33.440 --> 00:38:36.150 align:start position:0%
this corresponds to sending a protocol
message<00:38:33.680><c> and</c><00:38:33.920><c> the</c><00:38:34.160><c> data</c><00:38:34.400><c> at</c><00:38:34.640><c> the</c><00:38:34.800><c> same</c><00:38:35.040><c> time.</c>

00:38:36.150 --> 00:38:36.160 align:start position:0%
message and the data at the same time.
 

00:38:36.160 --> 00:38:38.150 align:start position:0%
message and the data at the same time.
This<00:38:36.400><c> corresponds</c><00:38:36.800><c> to</c><00:38:36.880><c> the</c><00:38:37.040><c> rendevous</c><00:38:37.920><c> where</c>

00:38:38.150 --> 00:38:38.160 align:start position:0%
This corresponds to the rendevous where
 

00:38:38.160 --> 00:38:40.230 align:start position:0%
This corresponds to the rendevous where
you<00:38:38.320><c> have</c><00:38:38.400><c> to</c><00:38:38.560><c> send</c><00:38:38.720><c> the</c><00:38:38.880><c> protocol</c><00:38:39.280><c> message</c>

00:38:40.230 --> 00:38:40.240 align:start position:0%
you have to send the protocol message
 

00:38:40.240 --> 00:38:41.589 align:start position:0%
you have to send the protocol message
have<00:38:40.400><c> an</c><00:38:40.640><c> acknowledgement</c><00:38:41.119><c> and</c><00:38:41.280><c> then</c><00:38:41.440><c> send</c>

00:38:41.589 --> 00:38:41.599 align:start position:0%
have an acknowledgement and then send
 

00:38:41.599 --> 00:38:43.670 align:start position:0%
have an acknowledgement and then send
the<00:38:41.760><c> data</c><00:38:42.000><c> later</c><00:38:42.320><c> on.</c><00:38:42.800><c> There</c><00:38:42.960><c> will</c><00:38:43.200><c> possibly</c>

00:38:43.670 --> 00:38:43.680 align:start position:0%
the data later on. There will possibly
 

00:38:43.680 --> 00:38:45.430 align:start position:0%
the data later on. There will possibly
an<00:38:43.920><c> even</c><00:38:44.160><c> faster</c><00:38:44.560><c> region</c><00:38:44.880><c> here</c><00:38:45.040><c> where</c><00:38:45.200><c> you</c>

00:38:45.430 --> 00:38:45.440 align:start position:0%
an even faster region here where you
 

00:38:45.440 --> 00:38:47.349 align:start position:0%
an even faster region here where you
don't<00:38:45.599><c> even</c><00:38:45.839><c> then</c><00:38:46.240><c> send</c><00:38:46.320><c> send</c><00:38:46.480><c> any</c><00:38:46.720><c> data.</c><00:38:47.200><c> you</c>

00:38:47.349 --> 00:38:47.359 align:start position:0%
don't even then send send any data. you
 

00:38:47.359 --> 00:38:49.990 align:start position:0%
don't even then send send any data. you
just<00:38:47.520><c> scribble</c><00:38:47.839><c> it</c><00:38:48.000><c> on</c><00:38:48.240><c> the</c><00:38:48.720><c> on</c><00:38:49.040><c> the</c><00:38:49.440><c> um</c><00:38:49.680><c> on</c><00:38:49.839><c> the</c>

00:38:49.990 --> 00:38:50.000 align:start position:0%
just scribble it on the on the um on the
 

00:38:50.000 --> 00:38:52.150 align:start position:0%
just scribble it on the on the um on the
on<00:38:50.160><c> on</c><00:38:50.400><c> the</c><00:38:50.560><c> protocol.</c><00:38:51.359><c> I</c><00:38:51.520><c> think</c><00:38:51.680><c> of</c><00:38:51.839><c> this</c><00:38:52.000><c> as</c>

00:38:52.150 --> 00:38:52.160 align:start position:0%
on on the protocol. I think of this as
 

00:38:52.160 --> 00:38:54.950 align:start position:0%
on on the protocol. I think of this as
being<00:38:52.320><c> like</c><00:38:52.800><c> a</c><00:38:52.960><c> postcard.</c><00:38:53.760><c> Okay,</c><00:38:54.320><c> for</c><00:38:54.640><c> large</c>

00:38:54.950 --> 00:38:54.960 align:start position:0%
being like a postcard. Okay, for large
 

00:38:54.960 --> 00:38:56.230 align:start position:0%
being like a postcard. Okay, for large
if<00:38:55.119><c> you're</c><00:38:55.280><c> sending</c><00:38:55.520><c> large</c><00:38:55.760><c> amounts</c><00:38:56.079><c> of</c>

00:38:56.230 --> 00:38:56.240 align:start position:0%
if you're sending large amounts of
 

00:38:56.240 --> 00:38:57.910 align:start position:0%
if you're sending large amounts of
information,<00:38:56.800><c> you</c><00:38:57.040><c> have</c><00:38:57.119><c> an</c><00:38:57.280><c> envelope,</c><00:38:57.760><c> you</c>

00:38:57.910 --> 00:38:57.920 align:start position:0%
information, you have an envelope, you
 

00:38:57.920 --> 00:39:01.030 align:start position:0%
information, you have an envelope, you
put<00:38:58.000><c> the</c><00:38:58.160><c> data</c><00:38:58.480><c> inside,</c><00:38:59.440><c> okay,</c><00:38:59.920><c> as</c><00:39:00.160><c> a</c><00:39:00.400><c> letter,</c>

00:39:01.030 --> 00:39:01.040 align:start position:0%
put the data inside, okay, as a letter,
 

00:39:01.040 --> 00:39:02.630 align:start position:0%
put the data inside, okay, as a letter,
but<00:39:01.280><c> for</c><00:39:01.520><c> very</c><00:39:01.760><c> small</c><00:39:02.000><c> messages</c><00:39:02.320><c> when</c><00:39:02.480><c> you're</c>

00:39:02.630 --> 00:39:02.640 align:start position:0%
but for very small messages when you're
 

00:39:02.640 --> 00:39:05.430 align:start position:0%
but for very small messages when you're
on<00:39:02.800><c> holiday,</c><00:39:03.200><c> you</c><00:39:03.359><c> just</c><00:39:03.760><c> a</c><00:39:04.000><c> postcard</c><00:39:04.560><c> has</c><00:39:05.200><c> the</c>

00:39:05.430 --> 00:39:05.440 align:start position:0%
on holiday, you just a postcard has the
 

00:39:05.440 --> 00:39:07.270 align:start position:0%
on holiday, you just a postcard has the
data<00:39:06.000><c> on</c><00:39:06.240><c> the</c><00:39:06.400><c> protocol</c><00:39:06.800><c> message.</c>

00:39:07.270 --> 00:39:07.280 align:start position:0%
data on the protocol message.
 

00:39:07.280 --> 00:39:09.190 align:start position:0%
data on the protocol message.
Everything's<00:39:07.599><c> on</c><00:39:07.839><c> in</c><00:39:08.079><c> one</c><00:39:08.320><c> place.</c><00:39:08.880><c> So</c><00:39:08.960><c> there</c>

00:39:09.190 --> 00:39:09.200 align:start position:0%
Everything's on in one place. So there
 

00:39:09.200 --> 00:39:11.030 align:start position:0%
Everything's on in one place. So there
will<00:39:09.359><c> be</c><00:39:09.680><c> at</c><00:39:09.760><c> least</c><00:39:10.079><c> three</c><00:39:10.320><c> regions</c><00:39:10.800><c> very</c>

00:39:11.030 --> 00:39:11.040 align:start position:0%
will be at least three regions very
 

00:39:11.040 --> 00:39:14.310 align:start position:0%
will be at least three regions very
small<00:39:11.359><c> messages</c><00:39:12.079><c> intermediate.</c><00:39:13.200><c> Um,</c><00:39:13.839><c> so</c><00:39:14.079><c> this</c>

00:39:14.310 --> 00:39:14.320 align:start position:0%
small messages intermediate. Um, so this
 

00:39:14.320 --> 00:39:16.390 align:start position:0%
small messages intermediate. Um, so this
is<00:39:14.480><c> where</c><00:39:14.880><c> so</c><00:39:15.359><c> Izzy</c><00:39:15.760><c> gets</c><00:39:15.920><c> two</c><00:39:16.079><c> messages</c>

00:39:16.390 --> 00:39:16.400 align:start position:0%
is where so Izzy gets two messages
 

00:39:16.400 --> 00:39:17.510 align:start position:0%
is where so Izzy gets two messages
heaven<00:39:16.560><c> and</c><00:39:16.640><c> dangerous</c><00:39:16.960><c> in</c><00:39:17.119><c> at</c><00:39:17.280><c> the</c><00:39:17.440><c> same</c>

00:39:17.510 --> 00:39:17.520 align:start position:0%
heaven and dangerous in at the same
 

00:39:17.520 --> 00:39:22.710 align:start position:0%
heaven and dangerous in at the same
time.<00:39:18.560><c> So</c><00:39:18.800><c> I</c><00:39:19.040><c> actually</c><00:39:20.400><c> this</c><00:39:20.640><c> is</c>

00:39:22.710 --> 00:39:22.720 align:start position:0%
time. So I actually this is
 

00:39:22.720 --> 00:39:27.270 align:start position:0%
time. So I actually this is
I<00:39:23.119><c> think</c><00:39:24.240><c> it</c><00:39:24.560><c> is</c><00:39:24.720><c> two</c><00:39:24.960><c> messages.</c><00:39:25.680><c> Yeah,</c><00:39:26.880><c> I</c>

00:39:27.270 --> 00:39:27.280 align:start position:0%
I think it is two messages. Yeah, I
 

00:39:27.280 --> 00:39:30.710 align:start position:0%
I think it is two messages. Yeah, I
think<00:39:27.440><c> it</c><00:39:27.680><c> is</c><00:39:29.119><c> a</c><00:39:29.359><c> header</c><00:39:29.760><c> sent</c><00:39:29.920><c> to</c><00:39:30.000><c> the</c><00:39:30.240><c> receive</c>

00:39:30.710 --> 00:39:30.720 align:start position:0%
think it is a header sent to the receive
 

00:39:30.720 --> 00:39:34.630 align:start position:0%
think it is a header sent to the receive
Q<00:39:31.599><c> and</c><00:39:31.839><c> the</c><00:39:32.079><c> data</c><00:39:32.480><c> sent</c><00:39:32.720><c> to</c><00:39:32.960><c> the</c><00:39:33.119><c> buffer</c><00:39:33.520><c> space.</c>

00:39:34.630 --> 00:39:34.640 align:start position:0%
Q and the data sent to the buffer space.
 

00:39:34.640 --> 00:39:36.630 align:start position:0%
Q and the data sent to the buffer space.
But<00:39:34.800><c> I</c><00:39:35.040><c> was</c><00:39:35.520><c> that</c><00:39:35.680><c> that</c><00:39:36.000><c> question</c><00:39:36.400><c> always</c>

00:39:36.630 --> 00:39:36.640 align:start position:0%
But I was that that question always
 

00:39:36.640 --> 00:39:38.950 align:start position:0%
But I was that that question always
occur.<00:39:36.960><c> I</c><00:39:37.119><c> need</c><00:39:37.599><c> and</c><00:39:37.839><c> that</c><00:39:38.079><c> is</c><00:39:38.240><c> my</c><00:39:38.400><c> model.</c><00:39:38.800><c> So</c>

00:39:38.950 --> 00:39:38.960 align:start position:0%
occur. I need and that is my model. So
 

00:39:38.960 --> 00:39:41.670 align:start position:0%
occur. I need and that is my model. So
Jerry,<00:39:39.359><c> that</c><00:39:39.520><c> is</c><00:39:39.680><c> my</c><00:39:39.839><c> model.</c><00:39:40.880><c> Okay,</c><00:39:41.440><c> it</c>

00:39:41.670 --> 00:39:41.680 align:start position:0%
Jerry, that is my model. Okay, it
 

00:39:41.680 --> 00:39:44.069 align:start position:0%
Jerry, that is my model. Okay, it
doesn't<00:39:42.000><c> have</c><00:39:42.160><c> to</c><00:39:42.320><c> be.</c><00:39:43.520><c> You</c><00:39:43.760><c> could</c><00:39:43.920><c> have</c>

00:39:44.069 --> 00:39:44.079 align:start position:0%
doesn't have to be. You could have
 

00:39:44.079 --> 00:39:45.750 align:start position:0%
doesn't have to be. You could have
variable<00:39:44.560><c> length</c><00:39:44.800><c> headers</c><00:39:45.200><c> in</c><00:39:45.359><c> which</c><00:39:45.440><c> case</c><00:39:45.599><c> an</c>

00:39:45.750 --> 00:39:45.760 align:start position:0%
variable length headers in which case an
 

00:39:45.760 --> 00:39:47.910 align:start position:0%
variable length headers in which case an
ego<00:39:46.079><c> mesh</c><00:39:46.320><c> would</c><00:39:46.480><c> just</c><00:39:46.640><c> be</c><00:39:46.960><c> a</c><00:39:47.200><c> mesh</c><00:39:47.440><c> with</c><00:39:47.599><c> a</c><00:39:47.760><c> big</c>

00:39:47.910 --> 00:39:47.920 align:start position:0%
ego mesh would just be a mesh with a big
 

00:39:47.920 --> 00:39:50.390 align:start position:0%
ego mesh would just be a mesh with a big
header.<00:39:48.720><c> I</c><00:39:49.040><c> don't</c><00:39:49.359><c> believe</c><00:39:49.680><c> that's</c><00:39:50.000><c> what's</c>

00:39:50.390 --> 00:39:50.400 align:start position:0%
header. I don't believe that's what's
 

00:39:50.400 --> 00:39:52.710 align:start position:0%
header. I don't believe that's what's
done.<00:39:51.280><c> My</c><00:39:51.599><c> understanding</c><00:39:52.079><c> is</c><00:39:52.320><c> that</c><00:39:52.480><c> it's</c>

00:39:52.710 --> 00:39:52.720 align:start position:0%
done. My understanding is that it's
 

00:39:52.720 --> 00:39:54.069 align:start position:0%
done. My understanding is that it's
typically<00:39:53.040><c> two</c><00:39:53.200><c> messages.</c><00:39:53.520><c> It's</c><00:39:53.599><c> a</c><00:39:53.760><c> very</c><00:39:53.920><c> good</c>

00:39:54.069 --> 00:39:54.079 align:start position:0%
typically two messages. It's a very good
 

00:39:54.079 --> 00:39:55.670 align:start position:0%
typically two messages. It's a very good
question<00:39:54.400><c> and</c><00:39:54.640><c> I</c><00:39:54.800><c> was</c><00:39:55.040><c> actually</c><00:39:55.359><c> I</c><00:39:55.520><c> was</c>

00:39:55.670 --> 00:39:55.680 align:start position:0%
question and I was actually I was
 

00:39:55.680 --> 00:39:58.310 align:start position:0%
question and I was actually I was
slightly<00:39:56.320><c> evading</c><00:39:56.880><c> that</c><00:39:57.760><c> discussion</c><00:39:58.160><c> because</c>

00:39:58.310 --> 00:39:58.320 align:start position:0%
slightly evading that discussion because
 

00:39:58.320 --> 00:40:00.150 align:start position:0%
slightly evading that discussion because
I<00:39:58.560><c> didn't</c><00:39:58.720><c> know</c><00:39:58.880><c> the</c><00:39:59.119><c> answer</c><00:39:59.599><c> and</c><00:39:59.839><c> you</c><00:40:00.000><c> picked</c>

00:40:00.150 --> 00:40:00.160 align:start position:0%
I didn't know the answer and you picked
 

00:40:00.160 --> 00:40:02.390 align:start position:0%
I didn't know the answer and you picked
me<00:40:00.240><c> up</c><00:40:00.400><c> on</c><00:40:00.480><c> it.</c><00:40:00.720><c> But</c><00:40:01.200><c> my</c><00:40:01.520><c> model</c><00:40:01.839><c> is</c><00:40:02.079><c> that</c><00:40:02.240><c> it's</c>

00:40:02.390 --> 00:40:02.400 align:start position:0%
me up on it. But my model is that it's
 

00:40:02.400 --> 00:40:04.870 align:start position:0%
me up on it. But my model is that it's
two<00:40:02.640><c> messages.</c><00:40:03.599><c> A</c><00:40:03.839><c> protocol</c><00:40:04.320><c> message</c><00:40:04.640><c> into</c>

00:40:04.870 --> 00:40:04.880 align:start position:0%
two messages. A protocol message into
 

00:40:04.880 --> 00:40:07.270 align:start position:0%
two messages. A protocol message into
the<00:40:05.040><c> receive</c><00:40:05.440><c> queue</c><00:40:06.079><c> and</c><00:40:06.320><c> a</c><00:40:06.560><c> data</c><00:40:06.880><c> message</c>

00:40:07.270 --> 00:40:07.280 align:start position:0%
the receive queue and a data message
 

00:40:07.280 --> 00:40:10.870 align:start position:0%
the receive queue and a data message
into<00:40:07.680><c> the</c><00:40:08.400><c> into</c><00:40:08.720><c> the</c><00:40:08.880><c> buffer</c><00:40:09.280><c> space.</c><00:40:10.160><c> Yeah,</c>

00:40:10.870 --> 00:40:10.880 align:start position:0%
into the into the buffer space. Yeah,
 

00:40:10.880 --> 00:40:15.510 align:start position:0%
into the into the buffer space. Yeah,
that's<00:40:11.200><c> my</c><00:40:11.520><c> belief.</c><00:40:12.320><c> Um</c>

00:40:15.510 --> 00:40:15.520 align:start position:0%
 
 

00:40:15.520 --> 00:40:19.349 align:start position:0%
 
um<00:40:16.560><c> yeah,</c><00:40:18.000><c> that's</c><00:40:18.320><c> so</c><00:40:18.480><c> that's</c><00:40:18.640><c> my</c><00:40:18.800><c> model.</c><00:40:19.200><c> That</c>

00:40:19.349 --> 00:40:19.359 align:start position:0%
um yeah, that's so that's my model. That
 

00:40:19.359 --> 00:40:21.510 align:start position:0%
um yeah, that's so that's my model. That
that's<00:40:19.680><c> my</c><00:40:19.920><c> model.</c>

00:40:21.510 --> 00:40:21.520 align:start position:0%
that's my model.
 

00:40:21.520 --> 00:40:23.030 align:start position:0%
that's my model.
Um

00:40:23.030 --> 00:40:23.040 align:start position:0%
Um
 

00:40:23.040 --> 00:40:25.190 align:start position:0%
Um
and<00:40:23.280><c> in</c><00:40:23.520><c> that</c><00:40:23.760><c> case,</c><00:40:24.079><c> that's</c><00:40:24.400><c> why</c><00:40:24.640><c> the</c><00:40:24.880><c> very</c>

00:40:25.190 --> 00:40:25.200 align:start position:0%
and in that case, that's why the very
 

00:40:25.200 --> 00:40:26.790 align:start position:0%
and in that case, that's why the very
short<00:40:25.440><c> message</c><00:40:25.760><c> is</c><00:40:25.920><c> even</c><00:40:26.160><c> faster</c><00:40:26.480><c> because</c><00:40:26.640><c> it</c>

00:40:26.790 --> 00:40:26.800 align:start position:0%
short message is even faster because it
 

00:40:26.800 --> 00:40:29.109 align:start position:0%
short message is even faster because it
is<00:40:27.040><c> actually</c><00:40:27.839><c> if</c><00:40:28.079><c> you</c><00:40:28.160><c> can</c><00:40:28.320><c> get</c><00:40:28.400><c> the</c><00:40:28.640><c> data</c><00:40:28.880><c> on</c>

00:40:29.109 --> 00:40:29.119 align:start position:0%
is actually if you can get the data on
 

00:40:29.119 --> 00:40:31.990 align:start position:0%
is actually if you can get the data on
the<00:40:29.280><c> header,</c><00:40:29.680><c> it</c><00:40:29.839><c> is</c><00:40:30.079><c> one</c><00:40:30.400><c> message.</c><00:40:31.119><c> Yeah.</c><00:40:31.839><c> As</c>

00:40:31.990 --> 00:40:32.000 align:start position:0%
the header, it is one message. Yeah. As
 

00:40:32.000 --> 00:40:35.349 align:start position:0%
the header, it is one message. Yeah. As
opposed<00:40:32.240><c> to</c><00:40:32.400><c> two.</c><00:40:32.800><c> That's</c><00:40:33.040><c> my</c><00:40:33.839><c> understanding.</c>

00:40:35.349 --> 00:40:35.359 align:start position:0%
opposed to two. That's my understanding.
 

00:40:35.359 --> 00:40:39.109 align:start position:0%
opposed to two. That's my understanding.
Um<00:40:36.800><c> so</c><00:40:37.839><c> again</c><00:40:38.160><c> we</c><00:40:38.480><c> may</c><00:40:38.640><c> have</c><00:40:38.800><c> very</c><00:40:38.960><c> short</c>

00:40:39.109 --> 00:40:39.119 align:start position:0%
Um so again we may have very short
 

00:40:39.119 --> 00:40:41.510 align:start position:0%
Um so again we may have very short
message<00:40:39.440><c> protocols.</c><00:40:40.240><c> Um</c><00:40:40.720><c> for</c><00:40:40.960><c> very</c><00:40:41.200><c> large</c>

00:40:41.510 --> 00:40:41.520 align:start position:0%
message protocols. Um for very large
 

00:40:41.520 --> 00:40:42.950 align:start position:0%
message protocols. Um for very large
messages<00:40:41.920><c> you</c><00:40:42.079><c> can</c><00:40:42.160><c> sometimes</c><00:40:42.480><c> do</c><00:40:42.640><c> direct</c>

00:40:42.950 --> 00:40:42.960 align:start position:0%
messages you can sometimes do direct
 

00:40:42.960 --> 00:40:44.870 align:start position:0%
messages you can sometimes do direct
memory<00:40:43.280><c> access.</c><00:40:43.680><c> What</c><00:40:43.839><c> that</c><00:40:44.000><c> means</c><00:40:44.160><c> is</c><00:40:44.480><c> data</c>

00:40:44.870 --> 00:40:44.880 align:start position:0%
memory access. What that means is data
 

00:40:44.880 --> 00:40:46.470 align:start position:0%
memory access. What that means is data
goes<00:40:45.119><c> straight</c><00:40:45.359><c> from</c><00:40:45.520><c> the</c><00:40:45.760><c> from</c><00:40:45.920><c> the</c><00:40:46.079><c> sender's</c>

00:40:46.470 --> 00:40:46.480 align:start position:0%
goes straight from the from the sender's
 

00:40:46.480 --> 00:40:48.230 align:start position:0%
goes straight from the from the sender's
memory<00:40:46.720><c> to</c><00:40:46.880><c> the</c><00:40:46.960><c> receivers's</c><00:40:47.440><c> memory.</c><00:40:47.920><c> So</c><00:40:48.079><c> you</c>

00:40:48.230 --> 00:40:48.240 align:start position:0%
memory to the receivers's memory. So you
 

00:40:48.240 --> 00:40:49.910 align:start position:0%
memory to the receivers's memory. So you
may<00:40:48.400><c> even</c><00:40:48.560><c> get</c><00:40:48.720><c> a</c><00:40:48.960><c> different</c><00:40:49.119><c> proc</c><00:40:49.520><c> for</c><00:40:49.680><c> very</c>

00:40:49.910 --> 00:40:49.920 align:start position:0%
may even get a different proc for very
 

00:40:49.920 --> 00:40:51.990 align:start position:0%
may even get a different proc for very
very<00:40:50.160><c> large</c><00:40:50.480><c> messages.</c><00:40:51.119><c> However</c><00:40:51.839><c> the</c>

00:40:51.990 --> 00:40:52.000 align:start position:0%
very large messages. However the
 

00:40:52.000 --> 00:40:53.670 align:start position:0%
very large messages. However the
overhead<00:40:52.400><c> of</c><00:40:52.560><c> setting</c><00:40:52.800><c> this</c><00:40:52.960><c> up</c><00:40:53.200><c> is</c><00:40:53.440><c> very</c>

00:40:53.670 --> 00:40:53.680 align:start position:0%
overhead of setting this up is very
 

00:40:53.680 --> 00:40:55.829 align:start position:0%
overhead of setting this up is very
high.<00:40:54.000><c> So</c><00:40:54.240><c> it's</c><00:40:54.480><c> it's</c><00:40:54.720><c> it's</c><00:40:55.119><c> we</c><00:40:55.359><c> may</c><00:40:55.520><c> not</c><00:40:55.680><c> see</c>

00:40:55.829 --> 00:40:55.839 align:start position:0%
high. So it's it's it's we may not see
 

00:40:55.839 --> 00:40:57.910 align:start position:0%
high. So it's it's it's we may not see
it.<00:40:56.560><c> But</c><00:40:56.720><c> the</c><00:40:56.880><c> three</c><00:40:57.119><c> regions</c><00:40:57.440><c> you</c><00:40:57.599><c> should</c><00:40:57.760><c> be</c>

00:40:57.910 --> 00:40:57.920 align:start position:0%
it. But the three regions you should be
 

00:40:57.920 --> 00:40:59.190 align:start position:0%
it. But the three regions you should be
able<00:40:58.079><c> to</c><00:40:58.160><c> see</c><00:40:58.319><c> when</c><00:40:58.560><c> doing</c><00:40:58.720><c> a</c><00:40:58.880><c> standard</c>

00:40:59.190 --> 00:40:59.200 align:start position:0%
able to see when doing a standard
 

00:40:59.200 --> 00:41:01.589 align:start position:0%
able to see when doing a standard
pingpong<00:40:59.920><c> a</c><00:41:00.240><c> very</c><00:41:00.480><c> short</c><00:41:00.800><c> message</c>

00:41:01.589 --> 00:41:01.599 align:start position:0%
pingpong a very short message
 

00:41:01.599 --> 00:41:03.750 align:start position:0%
pingpong a very short message
intermediate<00:41:02.319><c> message</c><00:41:03.040><c> very</c><00:41:03.280><c> short</c><00:41:03.520><c> message</c>

00:41:03.750 --> 00:41:03.760 align:start position:0%
intermediate message very short message
 

00:41:03.760 --> 00:41:06.790 align:start position:0%
intermediate message very short message
where<00:41:04.000><c> the</c><00:41:04.160><c> data</c><00:41:04.480><c> is</c><00:41:04.880><c> is</c><00:41:05.280><c> put</c><00:41:05.440><c> on</c><00:41:05.680><c> the</c><00:41:05.839><c> header</c>

00:41:06.790 --> 00:41:06.800 align:start position:0%
where the data is is put on the header
 

00:41:06.800 --> 00:41:09.109 align:start position:0%
where the data is is put on the header
intermediate<00:41:07.359><c> where</c><00:41:07.599><c> my</c><00:41:07.920><c> model</c><00:41:08.160><c> is</c><00:41:08.880><c> two</c>

00:41:09.109 --> 00:41:09.119 align:start position:0%
intermediate where my model is two
 

00:41:09.119 --> 00:41:11.990 align:start position:0%
intermediate where my model is two
messages<00:41:09.680><c> sent</c><00:41:10.240><c> at</c><00:41:10.480><c> the</c><00:41:10.640><c> same</c><00:41:10.880><c> time</c><00:41:11.440><c> a</c><00:41:11.680><c> header</c>

00:41:11.990 --> 00:41:12.000 align:start position:0%
messages sent at the same time a header
 

00:41:12.000 --> 00:41:14.470 align:start position:0%
messages sent at the same time a header
and<00:41:12.240><c> the</c><00:41:12.400><c> data</c><00:41:13.200><c> and</c><00:41:13.359><c> and</c><00:41:13.599><c> a</c><00:41:13.839><c> large</c><00:41:14.079><c> message</c>

00:41:14.470 --> 00:41:14.480 align:start position:0%
and the data and and a large message
 

00:41:14.480 --> 00:41:16.950 align:start position:0%
and the data and and a large message
regime<00:41:15.040><c> above</c><00:41:15.440><c> the</c><00:41:15.680><c> tens</c><00:41:16.000><c> of</c><00:41:16.079><c> kilobytes</c><00:41:16.720><c> where</c>

00:41:16.950 --> 00:41:16.960 align:start position:0%
regime above the tens of kilobytes where
 

00:41:16.960 --> 00:41:19.190 align:start position:0%
regime above the tens of kilobytes where
it's<00:41:17.119><c> a</c><00:41:17.280><c> rendevous</c><00:41:18.079><c> here's</c><00:41:18.319><c> the</c><00:41:18.480><c> header</c><00:41:19.040><c> get</c>

00:41:19.190 --> 00:41:19.200 align:start position:0%
it's a rendevous here's the header get
 

00:41:19.200 --> 00:41:22.069 align:start position:0%
it's a rendevous here's the header get
back<00:41:19.440><c> to</c><00:41:19.599><c> me</c><00:41:19.839><c> here's</c><00:41:20.079><c> the</c><00:41:20.240><c> data</c><00:41:20.640><c> and</c><00:41:20.800><c> you</c><00:41:21.040><c> have</c>

00:41:22.069 --> 00:41:22.079 align:start position:0%
back to me here's the data and you have
 

00:41:22.079 --> 00:41:25.670 align:start position:0%
back to me here's the data and you have
to<00:41:22.160><c> have</c><00:41:22.319><c> this</c><00:41:22.480><c> hand</c><00:41:22.800><c> shaking</c>

00:41:25.670 --> 00:41:25.680 align:start position:0%
to have this hand shaking
 

00:41:25.680 --> 00:41:27.829 align:start position:0%
to have this hand shaking
Um<00:41:26.240><c> I'm</c><00:41:26.480><c> coming</c><00:41:26.720><c> to</c><00:41:26.800><c> the</c><00:41:26.960><c> end</c><00:41:27.040><c> of</c><00:41:27.119><c> the</c><00:41:27.280><c> time.</c><00:41:27.599><c> So</c>

00:41:27.829 --> 00:41:27.839 align:start position:0%
Um I'm coming to the end of the time. So
 

00:41:27.839 --> 00:41:30.630 align:start position:0%
Um I'm coming to the end of the time. So
collectives<00:41:28.880><c> um</c><00:41:29.280><c> what</c><00:41:29.520><c> I</c><00:41:29.680><c> would</c><00:41:29.920><c> say</c><00:41:30.079><c> here</c><00:41:30.319><c> is</c>

00:41:30.630 --> 00:41:30.640 align:start position:0%
collectives um what I would say here is
 

00:41:30.640 --> 00:41:33.750 align:start position:0%
collectives um what I would say here is
that<00:41:31.119><c> um</c><00:41:31.680><c> the</c><00:41:32.079><c> reason</c><00:41:32.319><c> that</c><00:41:32.640><c> collectives</c><00:41:33.359><c> were</c>

00:41:33.750 --> 00:41:33.760 align:start position:0%
that um the reason that collectives were
 

00:41:33.760 --> 00:41:37.190 align:start position:0%
that um the reason that collectives were
like<00:41:34.079><c> all</c><00:41:34.319><c> reduce</c><00:41:34.880><c> were</c><00:41:36.319><c> uh</c><00:41:36.480><c> defined</c><00:41:36.880><c> as</c>

00:41:37.190 --> 00:41:37.200 align:start position:0%
like all reduce were uh defined as
 

00:41:37.200 --> 00:41:40.150 align:start position:0%
like all reduce were uh defined as
single<00:41:37.599><c> routines</c><00:41:38.000><c> at</c><00:41:38.160><c> NPI</c><00:41:38.560><c> was</c><00:41:38.720><c> to</c><00:41:38.880><c> allow</c><00:41:40.079><c> um</c>

00:41:40.150 --> 00:41:40.160 align:start position:0%
single routines at NPI was to allow um
 

00:41:40.160 --> 00:41:42.790 align:start position:0%
single routines at NPI was to allow um
the<00:41:40.400><c> NPI</c><00:41:40.880><c> library</c><00:41:41.359><c> to</c><00:41:41.680><c> do</c><00:41:42.000><c> them</c><00:41:42.319><c> efficiently</c>

00:41:42.790 --> 00:41:42.800 align:start position:0%
the NPI library to do them efficiently
 

00:41:42.800 --> 00:41:44.710 align:start position:0%
the NPI library to do them efficiently
without<00:41:43.119><c> you</c><00:41:43.359><c> having</c><00:41:43.520><c> to</c><00:41:43.680><c> do</c><00:41:43.760><c> it</c><00:41:43.920><c> yourself.</c><00:41:44.319><c> So</c>

00:41:44.710 --> 00:41:44.720 align:start position:0%
without you having to do it yourself. So
 

00:41:44.720 --> 00:41:46.790 align:start position:0%
without you having to do it yourself. So
people<00:41:44.960><c> spend</c><00:41:45.200><c> their</c><00:41:45.440><c> lives</c><00:41:45.760><c> researching</c><00:41:46.640><c> uh</c>

00:41:46.790 --> 00:41:46.800 align:start position:0%
people spend their lives researching uh
 

00:41:46.800 --> 00:41:49.030 align:start position:0%
people spend their lives researching uh
efficient<00:41:47.359><c> collective</c><00:41:47.839><c> operations.</c><00:41:48.800><c> You</c>

00:41:49.030 --> 00:41:49.040 align:start position:0%
efficient collective operations. You
 

00:41:49.040 --> 00:41:50.870 align:start position:0%
efficient collective operations. You
don't<00:41:49.280><c> really</c><00:41:49.599><c> care</c><00:41:49.839><c> how</c><00:41:50.079><c> they're</c><00:41:50.319><c> done.</c><00:41:50.720><c> You</c>

00:41:50.870 --> 00:41:50.880 align:start position:0%
don't really care how they're done. You
 

00:41:50.880 --> 00:41:52.630 align:start position:0%
don't really care how they're done. You
just<00:41:51.200><c> hope</c><00:41:51.440><c> the</c><00:41:51.599><c> NPI</c><00:41:52.000><c> library</c><00:41:52.240><c> does</c><00:41:52.400><c> a</c><00:41:52.560><c> good</c>

00:41:52.630 --> 00:41:52.640 align:start position:0%
just hope the NPI library does a good
 

00:41:52.640 --> 00:41:54.230 align:start position:0%
just hope the NPI library does a good
thing.<00:41:52.720><c> And</c><00:41:52.960><c> one</c><00:41:53.200><c> important</c><00:41:53.599><c> thing</c><00:41:53.760><c> here</c><00:41:54.000><c> is</c>

00:41:54.230 --> 00:41:54.240 align:start position:0%
thing. And one important thing here is
 

00:41:54.240 --> 00:41:57.190 align:start position:0%
thing. And one important thing here is
that<00:41:54.960><c> um</c><00:41:55.200><c> the</c><00:41:55.760><c> collectors</c><00:41:56.319><c> don't</c><00:41:56.640><c> even</c><00:41:56.960><c> have</c>

00:41:57.190 --> 00:41:57.200 align:start position:0%
that um the collectors don't even have
 

00:41:57.200 --> 00:42:02.069 align:start position:0%
that um the collectors don't even have
to<00:41:57.359><c> be</c><00:41:58.079><c> um</c><00:41:59.520><c> uh</c><00:42:00.640><c> implemented</c><00:42:01.119><c> in</c><00:42:01.359><c> software</c><00:42:01.920><c> with</c>

00:42:02.069 --> 00:42:02.079 align:start position:0%
to be um uh implemented in software with
 

00:42:02.079 --> 00:42:04.550 align:start position:0%
to be um uh implemented in software with
NPI<00:42:02.560><c> calls.</c><00:42:03.200><c> For</c><00:42:03.280><c> example,</c><00:42:03.680><c> a</c><00:42:03.920><c> modern</c><00:42:04.240><c> network</c>

00:42:04.550 --> 00:42:04.560 align:start position:0%
NPI calls. For example, a modern network
 

00:42:04.560 --> 00:42:06.309 align:start position:0%
NPI calls. For example, a modern network
might<00:42:04.800><c> have</c><00:42:04.960><c> a</c><00:42:05.200><c> hardware</c><00:42:05.520><c> barrier.</c><00:42:06.160><c> There</c>

00:42:06.309 --> 00:42:06.319 align:start position:0%
might have a hardware barrier. There
 

00:42:06.319 --> 00:42:07.910 align:start position:0%
might have a hardware barrier. There
might<00:42:06.480><c> be</c><00:42:06.560><c> a</c><00:42:06.800><c> you</c><00:42:06.880><c> know</c><00:42:06.960><c> a</c><00:42:07.200><c> barrier</c><00:42:07.520><c> call</c><00:42:07.760><c> which</c>

00:42:07.910 --> 00:42:07.920 align:start position:0%
might be a you know a barrier call which
 

00:42:07.920 --> 00:42:10.470 align:start position:0%
might be a you know a barrier call which
is<00:42:08.240><c> done</c><00:42:08.400><c> in</c><00:42:08.640><c> hardware.</c><00:42:09.520><c> So</c><00:42:09.680><c> on</c><00:42:09.920><c> a</c><00:42:10.079><c> network</c>

00:42:10.470 --> 00:42:10.480 align:start position:0%
is done in hardware. So on a network
 

00:42:10.480 --> 00:42:11.990 align:start position:0%
is done in hardware. So on a network
which<00:42:10.720><c> has</c><00:42:10.880><c> a</c><00:42:11.119><c> hardware</c><00:42:11.440><c> barrier,</c><00:42:11.760><c> you</c><00:42:11.920><c> would</c>

00:42:11.990 --> 00:42:12.000 align:start position:0%
which has a hardware barrier, you would
 

00:42:12.000 --> 00:42:13.750 align:start position:0%
which has a hardware barrier, you would
hope<00:42:12.160><c> that</c><00:42:12.240><c> that</c><00:42:12.480><c> NPI</c><00:42:12.880><c> library</c><00:42:13.280><c> would</c><00:42:13.440><c> would</c>

00:42:13.750 --> 00:42:13.760 align:start position:0%
hope that that NPI library would would
 

00:42:13.760 --> 00:42:16.150 align:start position:0%
hope that that NPI library would would
say<00:42:14.640><c> David</c><00:42:14.960><c> wants</c><00:42:15.119><c> to</c><00:42:15.200><c> do</c><00:42:15.280><c> a</c><00:42:15.440><c> barrier.</c><00:42:15.839><c> I'm</c><00:42:16.000><c> not</c>

00:42:16.150 --> 00:42:16.160 align:start position:0%
say David wants to do a barrier. I'm not
 

00:42:16.160 --> 00:42:17.589 align:start position:0%
say David wants to do a barrier. I'm not
even<00:42:16.319><c> going</c><00:42:16.400><c> to</c><00:42:16.560><c> call</c><00:42:16.800><c> NPI.</c><00:42:17.200><c> I'm</c><00:42:17.359><c> going</c><00:42:17.440><c> to</c>

00:42:17.589 --> 00:42:17.599 align:start position:0%
even going to call NPI. I'm going to
 

00:42:17.599 --> 00:42:19.670 align:start position:0%
even going to call NPI. I'm going to
call<00:42:17.760><c> this</c><00:42:18.160><c> special</c><00:42:18.640><c> hardware</c><00:42:19.040><c> barrier</c><00:42:19.440><c> which</c>

00:42:19.670 --> 00:42:19.680 align:start position:0%
call this special hardware barrier which
 

00:42:19.680 --> 00:42:22.069 align:start position:0%
call this special hardware barrier which
exists<00:42:19.920><c> in</c><00:42:20.160><c> this</c><00:42:20.400><c> particular</c><00:42:20.800><c> network.</c><00:42:21.680><c> So,</c>

00:42:22.069 --> 00:42:22.079 align:start position:0%
exists in this particular network. So,
 

00:42:22.079 --> 00:42:24.069 align:start position:0%
exists in this particular network. So,
so<00:42:22.640><c> and</c><00:42:22.880><c> it</c><00:42:23.040><c> will</c><00:42:23.200><c> use</c><00:42:23.359><c> lots</c><00:42:23.599><c> and</c><00:42:23.760><c> lots</c><00:42:23.920><c> and</c>

00:42:24.069 --> 00:42:24.079 align:start position:0%
so and it will use lots and lots and
 

00:42:24.079 --> 00:42:26.550 align:start position:0%
so and it will use lots and lots and
lots<00:42:24.319><c> of</c><00:42:24.480><c> tricks.</c><00:42:25.359><c> So,</c><00:42:25.599><c> I</c><00:42:25.760><c> mean</c><00:42:25.839><c> the</c><00:42:26.079><c> main</c><00:42:26.319><c> this</c>

00:42:26.550 --> 00:42:26.560 align:start position:0%
lots of tricks. So, I mean the main this
 

00:42:26.560 --> 00:42:28.470 align:start position:0%
lots of tricks. So, I mean the main this
is<00:42:26.720><c> basically</c><00:42:27.119><c> saying</c><00:42:27.440><c> use</c><00:42:27.680><c> collectives</c><00:42:28.240><c> when</c>

00:42:28.470 --> 00:42:28.480 align:start position:0%
is basically saying use collectives when
 

00:42:28.480 --> 00:42:31.750 align:start position:0%
is basically saying use collectives when
you<00:42:28.640><c> can</c><00:42:29.440><c> because</c><00:42:30.640><c> they</c><00:42:30.960><c> will</c><00:42:31.119><c> be</c><00:42:31.280><c> implemented</c>

00:42:31.750 --> 00:42:31.760 align:start position:0%
you can because they will be implemented
 

00:42:31.760 --> 00:42:34.870 align:start position:0%
you can because they will be implemented
efficiently.<00:42:32.800><c> Often</c><00:42:33.839><c> your</c><00:42:34.079><c> data</c><00:42:34.480><c> access</c>

00:42:34.870 --> 00:42:34.880 align:start position:0%
efficiently. Often your data access
 

00:42:34.880 --> 00:42:36.710 align:start position:0%
efficiently. Often your data access
patterns<00:42:35.440><c> don't</c><00:42:35.760><c> actually</c><00:42:36.079><c> map</c><00:42:36.400><c> onto</c>

00:42:36.710 --> 00:42:36.720 align:start position:0%
patterns don't actually map onto
 

00:42:36.720 --> 00:42:38.390 align:start position:0%
patterns don't actually map onto
collectives.<00:42:37.599><c> But</c><00:42:37.760><c> that's</c><00:42:38.160><c> right.</c>

00:42:38.390 --> 00:42:38.400 align:start position:0%
collectives. But that's right.
 

00:42:38.400 --> 00:42:39.910 align:start position:0%
collectives. But that's right.
Hopefully,<00:42:38.720><c> if</c><00:42:38.880><c> I</c><00:42:39.040><c> get</c><00:42:39.119><c> time</c><00:42:39.280><c> to</c><00:42:39.440><c> do</c><00:42:39.520><c> the</c><00:42:39.680><c> final</c>

00:42:39.910 --> 00:42:39.920 align:start position:0%
Hopefully, if I get time to do the final
 

00:42:39.920 --> 00:42:43.910 align:start position:0%
Hopefully, if I get time to do the final
lecture<00:42:40.240><c> today,</c><00:42:40.960><c> you'll</c><00:42:41.280><c> see</c><00:42:41.520><c> that</c><00:42:42.720><c> for</c><00:42:43.680><c> the</c>

00:42:43.910 --> 00:42:43.920 align:start position:0%
lecture today, you'll see that for the
 

00:42:43.920 --> 00:42:46.390 align:start position:0%
lecture today, you'll see that for the
the<00:42:44.000><c> the</c>

00:42:46.390 --> 00:42:46.400 align:start position:0%
the the
 

00:42:46.400 --> 00:42:48.309 align:start position:0%
the the
use<00:42:46.640><c> of</c><00:42:46.800><c> advanced</c><00:42:47.200><c> use</c><00:42:47.359><c> of</c><00:42:47.599><c> drive</c><00:42:47.839><c> data</c><00:42:48.079><c> types</c>

00:42:48.309 --> 00:42:48.319 align:start position:0%
use of advanced use of drive data types
 

00:42:48.319 --> 00:42:50.150 align:start position:0%
use of advanced use of drive data types
can<00:42:48.480><c> allow</c><00:42:48.640><c> you</c><00:42:48.800><c> to</c><00:42:48.960><c> use</c><00:42:49.119><c> collectives</c><00:42:49.920><c> when</c>

00:42:50.150 --> 00:42:50.160 align:start position:0%
can allow you to use collectives when
 

00:42:50.160 --> 00:42:51.510 align:start position:0%
can allow you to use collectives when
you<00:42:50.319><c> might</c><00:42:50.560><c> think</c><00:42:50.640><c> you</c><00:42:50.880><c> might</c><00:42:51.040><c> not</c><00:42:51.119><c> be</c><00:42:51.280><c> able</c><00:42:51.359><c> to</c>

00:42:51.510 --> 00:42:51.520 align:start position:0%
you might think you might not be able to
 

00:42:51.520 --> 00:42:54.230 align:start position:0%
you might think you might not be able to
do<00:42:51.680><c> them.</c><00:42:52.400><c> Um,</c><00:42:53.280><c> that'll</c><00:42:53.599><c> become</c><00:42:53.760><c> more</c><00:42:54.000><c> obvious</c>

00:42:54.230 --> 00:42:54.240 align:start position:0%
do them. Um, that'll become more obvious
 

00:42:54.240 --> 00:42:56.790 align:start position:0%
do them. Um, that'll become more obvious
when<00:42:54.400><c> I</c><00:42:54.560><c> do.</c><00:42:55.200><c> So</c><00:42:55.680><c> uh</c><00:42:55.760><c> the</c><00:42:56.000><c> collectives</c><00:42:56.560><c> I'm</c>

00:42:56.790 --> 00:42:56.800 align:start position:0%
when I do. So uh the collectives I'm
 

00:42:56.800 --> 00:42:58.790 align:start position:0%
when I do. So uh the collectives I'm
just<00:42:57.760><c> I'm</c><00:42:58.000><c> going</c><00:42:58.079><c> to</c><00:42:58.160><c> go</c><00:42:58.319><c> through</c><00:42:58.480><c> this</c><00:42:58.640><c> quite</c>

00:42:58.790 --> 00:42:58.800 align:start position:0%
just I'm going to go through this quite
 

00:42:58.800 --> 00:43:00.630 align:start position:0%
just I'm going to go through this quite
quickly<00:42:59.040><c> but</c><00:42:59.359><c> you</c><00:42:59.440><c> know</c><00:42:59.839><c> a</c><00:43:00.079><c> typically</c><00:43:00.400><c> good</c>

00:43:00.630 --> 00:43:00.640 align:start position:0%
quickly but you know a typically good
 

00:43:00.640 --> 00:43:03.510 align:start position:0%
quickly but you know a typically good
collectors<00:43:01.119><c> will</c><00:43:02.000><c> a</c><00:43:02.240><c> naive</c><00:43:02.560><c> implementation</c>

00:43:03.510 --> 00:43:03.520 align:start position:0%
collectors will a naive implementation
 

00:43:03.520 --> 00:43:04.870 align:start position:0%
collectors will a naive implementation
all<00:43:03.680><c> reduce</c><00:43:04.000><c> would</c><00:43:04.160><c> be</c><00:43:04.319><c> everybody</c><00:43:04.640><c> sends</c>

00:43:04.870 --> 00:43:04.880 align:start position:0%
all reduce would be everybody sends
 

00:43:04.880 --> 00:43:07.430 align:start position:0%
all reduce would be everybody sends
their<00:43:05.119><c> data</c><00:43:05.440><c> to</c><00:43:06.160><c> rank</c><00:43:06.480><c> zero</c><00:43:06.800><c> who</c><00:43:06.960><c> ran</c><00:43:07.200><c> them</c><00:43:07.359><c> up</c>

00:43:07.430 --> 00:43:07.440 align:start position:0%
their data to rank zero who ran them up
 

00:43:07.440 --> 00:43:09.270 align:start position:0%
their data to rank zero who ran them up
and<00:43:07.599><c> broadcast</c><00:43:08.000><c> them</c><00:43:08.240><c> out</c><00:43:08.640><c> sends</c><00:43:08.880><c> them</c><00:43:09.040><c> out</c>

00:43:09.270 --> 00:43:09.280 align:start position:0%
and broadcast them out sends them out
 

00:43:09.280 --> 00:43:11.829 align:start position:0%
and broadcast them out sends them out
again<00:43:09.920><c> that</c><00:43:10.079><c> would</c><00:43:10.319><c> scale</c><00:43:11.119><c> that</c><00:43:11.280><c> would</c><00:43:11.440><c> be</c><00:43:11.599><c> P</c>

00:43:11.829 --> 00:43:11.839 align:start position:0%
again that would scale that would be P
 

00:43:11.839 --> 00:43:14.309 align:start position:0%
again that would scale that would be P
messages<00:43:12.240><c> on</c><00:43:12.480><c> P</c><00:43:12.720><c> processors</c><00:43:13.200><c> it</c><00:43:13.359><c> would</c><00:43:13.440><c> scale</c>

00:43:14.309 --> 00:43:14.319 align:start position:0%
messages on P processors it would scale
 

00:43:14.319 --> 00:43:16.550 align:start position:0%
messages on P processors it would scale
that<00:43:14.480><c> would</c><00:43:14.560><c> be</c><00:43:14.640><c> a</c><00:43:14.880><c> disaster</c><00:43:16.319><c> good</c>

00:43:16.550 --> 00:43:16.560 align:start position:0%
that would be a disaster good
 

00:43:16.560 --> 00:43:18.710 align:start position:0%
that would be a disaster good
collectives<00:43:17.200><c> tend</c><00:43:17.440><c> to</c><00:43:17.599><c> use</c><00:43:18.240><c> things</c><00:43:18.480><c> like</c>

00:43:18.710 --> 00:43:18.720 align:start position:0%
collectives tend to use things like
 

00:43:18.720 --> 00:43:21.030 align:start position:0%
collectives tend to use things like
binary<00:43:19.200><c> trees</c><00:43:19.599><c> or</c><00:43:19.839><c> or</c><00:43:20.240><c> whatever</c><00:43:20.800><c> and</c>

00:43:21.030 --> 00:43:21.040 align:start position:0%
binary trees or or whatever and
 

00:43:21.040 --> 00:43:23.750 align:start position:0%
binary trees or or whatever and
hopefully<00:43:21.839><c> the</c><00:43:22.079><c> time</c><00:43:22.400><c> scales</c><00:43:22.880><c> the</c><00:43:23.119><c> log</c><00:43:23.440><c> of</c>

00:43:23.750 --> 00:43:23.760 align:start position:0%
hopefully the time scales the log of
 

00:43:23.760 --> 00:43:25.990 align:start position:0%
hopefully the time scales the log of
number<00:43:23.920><c> of</c><00:43:24.079><c> processes</c><00:43:24.960><c> Okay.</c><00:43:25.440><c> So</c><00:43:25.599><c> that</c><00:43:25.839><c> you</c>

00:43:25.990 --> 00:43:26.000 align:start position:0%
number of processes Okay. So that you
 

00:43:26.000 --> 00:43:28.069 align:start position:0%
number of processes Okay. So that you
know<00:43:26.079><c> that's</c><00:43:26.400><c> typically</c><00:43:26.800><c> your</c><00:43:27.040><c> model</c>

00:43:28.069 --> 00:43:28.079 align:start position:0%
know that's typically your model
 

00:43:28.079 --> 00:43:31.109 align:start position:0%
know that's typically your model
typically<00:43:28.640><c> most</c><00:43:28.960><c> well</c>

00:43:31.109 --> 00:43:31.119 align:start position:0%
typically most well
 

00:43:31.119 --> 00:43:33.829 align:start position:0%
typically most well
collectives<00:43:32.000><c> well</c><00:43:32.319><c> implemented</c><00:43:32.960><c> will</c><00:43:33.200><c> scale</c>

00:43:33.829 --> 00:43:33.839 align:start position:0%
collectives well implemented will scale
 

00:43:33.839 --> 00:43:35.430 align:start position:0%
collectives well implemented will scale
the<00:43:34.079><c> log</c><00:43:34.319><c> of</c><00:43:34.400><c> the</c><00:43:34.640><c> number</c><00:43:34.800><c> of</c><00:43:34.960><c> processes</c>

00:43:35.430 --> 00:43:35.440 align:start position:0%
the log of the number of processes
 

00:43:35.440 --> 00:43:37.510 align:start position:0%
the log of the number of processes
whereas<00:43:35.680><c> if</c><00:43:35.839><c> you</c><00:43:36.000><c> did</c><00:43:36.079><c> them</c><00:43:36.240><c> naively</c><00:43:37.200><c> it</c><00:43:37.359><c> would</c>

00:43:37.510 --> 00:43:37.520 align:start position:0%
whereas if you did them naively it would
 

00:43:37.520 --> 00:43:38.870 align:start position:0%
whereas if you did them naively it would
scale<00:43:37.760><c> linearly</c><00:43:38.160><c> the</c><00:43:38.319><c> number</c><00:43:38.480><c> of</c><00:43:38.560><c> processes</c>

00:43:38.870 --> 00:43:38.880 align:start position:0%
scale linearly the number of processes
 

00:43:38.880 --> 00:43:40.069 align:start position:0%
scale linearly the number of processes
and<00:43:39.040><c> that's</c><00:43:39.280><c> the</c><00:43:39.440><c> huge</c><00:43:39.680><c> difference</c><00:43:39.839><c> because</c>

00:43:40.069 --> 00:43:40.079 align:start position:0%
and that's the huge difference because
 

00:43:40.079 --> 00:43:42.470 align:start position:0%
and that's the huge difference because
even<00:43:40.240><c> on</c><00:43:40.400><c> a</c><00:43:40.480><c> thousand</c><00:43:40.880><c> processes</c><00:43:41.760><c> log</c><00:43:42.079><c> to</c><00:43:42.240><c> a</c>

00:43:42.470 --> 00:43:42.480 align:start position:0%
even on a thousand processes log to a
 

00:43:42.480 --> 00:43:45.670 align:start position:0%
even on a thousand processes log to a
thousand<00:43:42.720><c> is</c><00:43:42.960><c> 10.</c><00:43:43.760><c> So</c><00:43:44.079><c> you</c><00:43:44.240><c> know</c><00:43:45.359><c> using</c>

00:43:45.670 --> 00:43:45.680 align:start position:0%
thousand is 10. So you know using
 

00:43:45.680 --> 00:43:48.150 align:start position:0%
thousand is 10. So you know using
collectors<00:43:46.240><c> it</c><00:43:46.480><c> already</c><00:43:47.280><c> ballpark</c><00:43:47.760><c> a</c><00:43:47.920><c> 100</c>

00:43:48.150 --> 00:43:48.160 align:start position:0%
collectors it already ballpark a 100
 

00:43:48.160 --> 00:43:50.470 align:start position:0%
collectors it already ballpark a 100
times<00:43:48.400><c> faster</c><00:43:48.640><c> from</c><00:43:48.880><c> a</c><00:43:48.960><c> thousand</c><00:43:49.359><c> process.</c>

00:43:50.470 --> 00:43:50.480 align:start position:0%
times faster from a thousand process.
 

00:43:50.480 --> 00:43:56.550 align:start position:0%
times faster from a thousand process.
Um,

00:43:56.550 --> 00:43:56.560 align:start position:0%
 
 

00:43:56.560 --> 00:43:58.710 align:start position:0%
 
people<00:43:56.800><c> help</c><00:43:56.960><c> me</c><00:43:57.280><c> with</c><00:43:57.359><c> this</c><00:43:57.520><c> spike.</c><00:43:58.000><c> I</c><00:43:58.240><c> So</c><00:43:58.480><c> I</c>

00:43:58.710 --> 00:43:58.720 align:start position:0%
people help me with this spike. I So I
 

00:43:58.720 --> 00:44:00.230 align:start position:0%
people help me with this spike. I So I
So,<00:43:58.960><c> so</c><00:43:59.200><c> I</c><00:43:59.440><c> don't</c><00:43:59.599><c> really</c><00:43:59.839><c> have</c><00:44:00.000><c> much</c>

00:44:00.230 --> 00:44:00.240 align:start position:0%
So, so I don't really have much
 

00:44:00.240 --> 00:44:04.230 align:start position:0%
So, so I don't really have much
experience<00:44:00.640><c> of</c><00:44:00.880><c> of</c><00:44:00.880><c> of</c><00:44:01.119><c> of</c><00:44:02.079><c> building</c>

00:44:04.230 --> 00:44:04.240 align:start position:0%
experience of of of of building
 

00:44:04.240 --> 00:44:06.870 align:start position:0%
experience of of of of building
NPI<00:44:05.200><c> libraries</c><00:44:05.680><c> myself</c><00:44:06.000><c> because</c><00:44:06.240><c> I've</c><00:44:06.480><c> tended</c>

00:44:06.870 --> 00:44:06.880 align:start position:0%
NPI libraries myself because I've tended
 

00:44:06.880 --> 00:44:08.309 align:start position:0%
NPI libraries myself because I've tended
to<00:44:07.040><c> always</c><00:44:07.280><c> work</c><00:44:07.359><c> on</c><00:44:07.599><c> large</c><00:44:07.839><c> system</c><00:44:08.079><c> where</c>

00:44:08.309 --> 00:44:08.319 align:start position:0%
to always work on large system where
 

00:44:08.319 --> 00:44:11.349 align:start position:0%
to always work on large system where
it's<00:44:08.480><c> pre-built.</c><00:44:09.680><c> Um,</c><00:44:10.640><c> how</c><00:44:10.800><c> can</c><00:44:10.960><c> you</c><00:44:11.040><c> show</c><00:44:11.200><c> us</c>

00:44:11.349 --> 00:44:11.359 align:start position:0%
it's pre-built. Um, how can you show us
 

00:44:11.359 --> 00:44:13.430 align:start position:0%
it's pre-built. Um, how can you show us
perform?<00:44:11.760><c> I</c><00:44:12.000><c> think</c><00:44:12.160><c> I</c><00:44:12.319><c> mean</c><00:44:12.560><c> probably</c><00:44:13.040><c> most</c>

00:44:13.430 --> 00:44:13.440 align:start position:0%
perform? I think I mean probably most
 

00:44:13.440 --> 00:44:15.109 align:start position:0%
perform? I think I mean probably most
systems<00:44:13.839><c> look</c><00:44:14.000><c> pretty</c><00:44:14.240><c> similar</c><00:44:14.560><c> nowadays.</c>

00:44:15.109 --> 00:44:15.119 align:start position:0%
systems look pretty similar nowadays.
 

00:44:15.119 --> 00:44:17.349 align:start position:0%
systems look pretty similar nowadays.
Most<00:44:15.520><c> systems</c><00:44:15.920><c> are</c><00:44:16.240><c> Linux</c><00:44:16.800><c> shared</c><00:44:17.040><c> memory</c>

00:44:17.349 --> 00:44:17.359 align:start position:0%
Most systems are Linux shared memory
 

00:44:17.359 --> 00:44:19.430 align:start position:0%
Most systems are Linux shared memory
node<00:44:17.520><c> with</c><00:44:17.680><c> Infinity</c><00:44:18.160><c> Band.</c><00:44:18.800><c> So,</c><00:44:19.040><c> I</c><00:44:19.280><c> think</c>

00:44:19.430 --> 00:44:19.440 align:start position:0%
node with Infinity Band. So, I think
 

00:44:19.440 --> 00:44:20.950 align:start position:0%
node with Infinity Band. So, I think
unless<00:44:19.760><c> you're</c><00:44:19.920><c> building</c><00:44:20.240><c> something</c><00:44:20.480><c> weird,</c>

00:44:20.950 --> 00:44:20.960 align:start position:0%
unless you're building something weird,
 

00:44:20.960 --> 00:44:24.230 align:start position:0%
unless you're building something weird,
it<00:44:21.200><c> would</c><00:44:21.359><c> it</c><00:44:21.599><c> would</c><00:44:21.760><c> be</c><00:44:22.000><c> it</c><00:44:22.240><c> would</c><00:44:22.480><c> work.</c><00:44:23.599><c> Um,</c>

00:44:24.230 --> 00:44:24.240 align:start position:0%
it would it would be it would work. Um,
 

00:44:24.240 --> 00:44:27.430 align:start position:0%
it would it would be it would work. Um,
that's<00:44:24.480><c> my</c><00:44:24.800><c> guess.</c><00:44:25.839><c> Um,</c><00:44:26.720><c> I</c><00:44:26.960><c> don't</c><00:44:27.119><c> actually</c>

00:44:27.430 --> 00:44:27.440 align:start position:0%
that's my guess. Um, I don't actually
 

00:44:27.440 --> 00:44:30.309 align:start position:0%
that's my guess. Um, I don't actually
know,<00:44:27.680><c> but</c><00:44:28.400><c> that</c><00:44:28.560><c> would</c><00:44:28.720><c> be</c><00:44:28.800><c> my</c><00:44:29.040><c> guess.</c><00:44:30.000><c> I</c>

00:44:30.309 --> 00:44:30.319 align:start position:0%
know, but that would be my guess. I
 

00:44:30.319 --> 00:44:31.910 align:start position:0%
know, but that would be my guess. I
think

00:44:31.910 --> 00:44:31.920 align:start position:0%
think
 

00:44:31.920 --> 00:44:33.510 align:start position:0%
think
yeah,<00:44:32.160><c> that's</c><00:44:32.400><c> a</c><00:44:32.560><c> good</c><00:44:32.720><c> question.</c><00:44:33.119><c> I</c><00:44:33.359><c> don't</c>

00:44:33.510 --> 00:44:33.520 align:start position:0%
yeah, that's a good question. I don't
 

00:44:33.520 --> 00:44:35.190 align:start position:0%
yeah, that's a good question. I don't
know<00:44:33.760><c> as</c><00:44:33.920><c> I</c><00:44:34.160><c> don't</c><00:44:34.240><c> have</c><00:44:34.400><c> I</c><00:44:34.720><c> don't</c><00:44:34.800><c> have</c><00:44:34.960><c> much</c>

00:44:35.190 --> 00:44:35.200 align:start position:0%
know as I don't have I don't have much
 

00:44:35.200 --> 00:44:37.990 align:start position:0%
know as I don't have I don't have much
experience<00:44:35.680><c> building</c><00:44:36.400><c> NPI</c><00:44:36.800><c> libraries</c><00:44:37.119><c> myself</c>

00:44:37.990 --> 00:44:38.000 align:start position:0%
experience building NPI libraries myself
 

00:44:38.000 --> 00:44:42.309 align:start position:0%
experience building NPI libraries myself
because<00:44:39.119><c> um</c><00:44:39.280><c> I've</c><00:44:39.680><c> always</c><00:44:39.920><c> used</c><00:44:40.640><c> um</c><00:44:41.760><c> Yes.</c><00:44:42.079><c> So,</c>

00:44:42.309 --> 00:44:42.319 align:start position:0%
because um I've always used um Yes. So,
 

00:44:42.319 --> 00:44:43.750 align:start position:0%
because um I've always used um Yes. So,
so<00:44:42.480><c> yes.</c><00:44:42.720><c> So,</c><00:44:42.880><c> that</c><00:44:42.960><c> that</c><00:44:43.200><c> is</c><00:44:43.359><c> why</c><00:44:43.520><c> you</c><00:44:43.599><c> should</c>

00:44:43.750 --> 00:44:43.760 align:start position:0%
so yes. So, that that is why you should
 

00:44:43.760 --> 00:44:44.790 align:start position:0%
so yes. So, that that is why you should
pick<00:44:43.839><c> up</c><00:44:44.000><c> the</c><00:44:44.160><c> system</c><00:44:44.319><c> libraries.</c>

00:44:44.790 --> 00:44:44.800 align:start position:0%
pick up the system libraries.
 

00:44:44.800 --> 00:44:46.150 align:start position:0%
pick up the system libraries.
Absolutely.<00:44:45.280><c> Yeah,</c><00:44:45.520><c> you</c><00:44:45.680><c> should</c><00:44:45.760><c> pick</c><00:44:45.920><c> up</c><00:44:46.079><c> the</c>

00:44:46.150 --> 00:44:46.160 align:start position:0%
Absolutely. Yeah, you should pick up the
 

00:44:46.160 --> 00:44:47.829 align:start position:0%
Absolutely. Yeah, you should pick up the
system<00:44:46.480><c> libraries.</c><00:44:47.200><c> But</c><00:44:47.359><c> if</c><00:44:47.520><c> you</c><00:44:47.680><c> are</c>

00:44:47.829 --> 00:44:47.839 align:start position:0%
system libraries. But if you are
 

00:44:47.839 --> 00:44:50.150 align:start position:0%
system libraries. But if you are
building<00:44:48.079><c> it</c><00:44:48.319><c> yourself</c><00:44:49.119><c> then</c><00:44:49.440><c> I</c><00:44:49.839><c> actually</c>

00:44:50.150 --> 00:44:50.160 align:start position:0%
building it yourself then I actually
 

00:44:50.160 --> 00:44:52.150 align:start position:0%
building it yourself then I actually
don't<00:44:50.400><c> know</c><00:44:50.560><c> what</c><00:44:51.119><c> tweaks</c><00:44:51.520><c> and</c><00:44:51.680><c> knobs</c><00:44:52.000><c> there</c>

00:44:52.150 --> 00:44:52.160 align:start position:0%
don't know what tweaks and knobs there
 

00:44:52.160 --> 00:44:54.790 align:start position:0%
don't know what tweaks and knobs there
are<00:44:52.319><c> to</c><00:44:52.480><c> twiddle</c><00:44:52.960><c> and</c><00:44:53.119><c> now</c><00:44:53.599><c> uh</c><00:44:53.920><c> I</c><00:44:54.160><c> I</c><00:44:54.480><c> have</c><00:44:54.640><c> seen</c>

00:44:54.790 --> 00:44:54.800 align:start position:0%
are to twiddle and now uh I I have seen
 

00:44:54.800 --> 00:44:56.470 align:start position:0%
are to twiddle and now uh I I have seen
a<00:44:54.960><c> lot</c><00:44:55.200><c> that</c><00:44:55.359><c> a</c><00:44:55.599><c> lot</c><00:44:55.680><c> of</c><00:44:55.760><c> things</c><00:44:56.000><c> are</c><00:44:56.240><c> actually</c>

00:44:56.470 --> 00:44:56.480 align:start position:0%
a lot that a lot of things are actually
 

00:44:56.480 --> 00:44:58.870 align:start position:0%
a lot that a lot of things are actually
configurable<00:44:57.040><c> at</c><00:44:57.200><c> runtime.</c><00:44:58.079><c> So</c><00:44:58.319><c> for</c><00:44:58.480><c> example</c>

00:44:58.870 --> 00:44:58.880 align:start position:0%
configurable at runtime. So for example
 

00:44:58.880 --> 00:45:01.589 align:start position:0%
configurable at runtime. So for example
if<00:44:59.119><c> open</c><00:44:59.440><c> API</c><00:44:59.839><c> has</c><00:45:00.000><c> a</c><00:45:00.160><c> bunch</c><00:45:00.400><c> of</c><00:45:00.720><c> different</c>

00:45:01.589 --> 00:45:01.599 align:start position:0%
if open API has a bunch of different
 

00:45:01.599 --> 00:45:03.270 align:start position:0%
if open API has a bunch of different
algorithms<00:45:02.240><c> which</c><00:45:02.480><c> you</c><00:45:02.640><c> can</c><00:45:02.800><c> use</c><00:45:02.960><c> for</c>

00:45:03.270 --> 00:45:03.280 align:start position:0%
algorithms which you can use for
 

00:45:03.280 --> 00:45:05.910 align:start position:0%
algorithms which you can use for
reductions<00:45:04.319><c> they're</c><00:45:04.560><c> often</c><00:45:05.280><c> choosable</c><00:45:05.680><c> at</c>

00:45:05.910 --> 00:45:05.920 align:start position:0%
reductions they're often choosable at
 

00:45:05.920 --> 00:45:07.670 align:start position:0%
reductions they're often choosable at
runtime<00:45:06.319><c> with</c><00:45:06.560><c> weird</c><00:45:06.880><c> and</c><00:45:07.040><c> wonderful</c>

00:45:07.670 --> 00:45:07.680 align:start position:0%
runtime with weird and wonderful
 

00:45:07.680 --> 00:45:09.430 align:start position:0%
runtime with weird and wonderful
environment<00:45:08.160><c> variables</c><00:45:08.640><c> not</c><00:45:08.880><c> at</c><00:45:09.040><c> compile</c>

00:45:09.430 --> 00:45:09.440 align:start position:0%
environment variables not at compile
 

00:45:09.440 --> 00:45:11.589 align:start position:0%
environment variables not at compile
time.<00:45:10.079><c> So</c><00:45:10.240><c> I</c><00:45:10.400><c> think</c><00:45:10.560><c> maybe</c><00:45:10.800><c> to</c><00:45:11.040><c> try</c><00:45:11.200><c> and</c>

00:45:11.589 --> 00:45:11.599 align:start position:0%
time. So I think maybe to try and
 

00:45:11.599 --> 00:45:13.270 align:start position:0%
time. So I think maybe to try and
circumvent<00:45:12.160><c> that</c><00:45:12.400><c> problem</c><00:45:12.720><c> they</c><00:45:12.960><c> make</c><00:45:13.040><c> a</c><00:45:13.200><c> lot</c>

00:45:13.270 --> 00:45:13.280 align:start position:0%
circumvent that problem they make a lot
 

00:45:13.280 --> 00:45:15.430 align:start position:0%
circumvent that problem they make a lot
of<00:45:13.440><c> stuff</c><00:45:13.680><c> configurable</c><00:45:14.160><c> at</c><00:45:14.400><c> runtime.</c><00:45:15.280><c> So</c>

00:45:15.430 --> 00:45:15.440 align:start position:0%
of stuff configurable at runtime. So
 

00:45:15.440 --> 00:45:17.109 align:start position:0%
of stuff configurable at runtime. So
when<00:45:15.680><c> you</c><00:45:15.839><c> build</c><00:45:16.000><c> it,</c><00:45:16.400><c> you</c><00:45:16.560><c> just</c><00:45:16.720><c> build</c><00:45:16.960><c> it,</c>

00:45:17.109 --> 00:45:17.119 align:start position:0%
when you build it, you just build it,
 

00:45:17.119 --> 00:45:18.710 align:start position:0%
when you build it, you just build it,
but<00:45:17.280><c> then</c><00:45:17.440><c> new</c><00:45:17.680><c> experimentation</c><00:45:18.240><c> is</c><00:45:18.400><c> done</c><00:45:18.560><c> at</c>

00:45:18.710 --> 00:45:18.720 align:start position:0%
but then new experimentation is done at
 

00:45:18.720 --> 00:45:20.550 align:start position:0%
but then new experimentation is done at
runtime.<00:45:19.680><c> Again,</c><00:45:19.920><c> that</c><00:45:20.079><c> means</c><00:45:20.240><c> you'd</c><00:45:20.400><c> have</c><00:45:20.480><c> to</c>

00:45:20.550 --> 00:45:20.560 align:start position:0%
runtime. Again, that means you'd have to
 

00:45:20.560 --> 00:45:21.910 align:start position:0%
runtime. Again, that means you'd have to
pick<00:45:20.720><c> the</c><00:45:20.880><c> same</c><00:45:21.040><c> parameters.</c><00:45:21.520><c> The</c><00:45:21.680><c> other</c>

00:45:21.910 --> 00:45:21.920 align:start position:0%
pick the same parameters. The other
 

00:45:21.920 --> 00:45:22.710 align:start position:0%
pick the same parameters. The other
reason<00:45:22.000><c> why</c><00:45:22.160><c> you</c><00:45:22.319><c> want</c><00:45:22.480><c> it</c><00:45:22.560><c> to</c><00:45:22.640><c> be</c>

00:45:22.710 --> 00:45:22.720 align:start position:0%
reason why you want it to be
 

00:45:22.720 --> 00:45:24.390 align:start position:0%
reason why you want it to be
configurable<00:45:23.200><c> at</c><00:45:23.280><c> runtime</c><00:45:23.599><c> is</c><00:45:23.839><c> that,</c><00:45:24.160><c> you</c>

00:45:24.390 --> 00:45:24.400 align:start position:0%
configurable at runtime is that, you
 

00:45:24.400 --> 00:45:27.109 align:start position:0%
configurable at runtime is that, you
know,<00:45:25.760><c> it's</c><00:45:26.000><c> horses</c><00:45:26.400><c> for</c><00:45:26.560><c> courses.</c><00:45:26.960><c> Some</c>

00:45:27.109 --> 00:45:27.119 align:start position:0%
know, it's horses for courses. Some
 

00:45:27.119 --> 00:45:29.190 align:start position:0%
know, it's horses for courses. Some
algorithms<00:45:27.520><c> might</c><00:45:27.760><c> work</c><00:45:27.920><c> well</c><00:45:28.160><c> for</c><00:45:28.480><c> for</c><00:45:28.800><c> one</c>

00:45:29.190 --> 00:45:29.200 align:start position:0%
algorithms might work well for for one
 

00:45:29.200 --> 00:45:30.710 align:start position:0%
algorithms might work well for for one
user<00:45:29.520><c> and</c><00:45:29.680><c> not</c><00:45:29.839><c> for</c><00:45:30.000><c> another</c><00:45:30.319><c> depending</c><00:45:30.560><c> on</c>

00:45:30.710 --> 00:45:30.720 align:start position:0%
user and not for another depending on
 

00:45:30.720 --> 00:45:33.510 align:start position:0%
user and not for another depending on
their<00:45:30.880><c> data</c><00:45:31.200><c> patterns.</c><00:45:31.680><c> So</c><00:45:32.400><c> again,</c><00:45:33.119><c> it's</c><00:45:33.359><c> a</c>

00:45:33.510 --> 00:45:33.520 align:start position:0%
their data patterns. So again, it's a
 

00:45:33.520 --> 00:45:34.790 align:start position:0%
their data patterns. So again, it's a
good<00:45:33.680><c> question.</c><00:45:33.920><c> I</c><00:45:34.079><c> think</c><00:45:34.160><c> a</c><00:45:34.319><c> lot</c><00:45:34.480><c> more</c>

00:45:34.790 --> 00:45:34.800 align:start position:0%
good question. I think a lot more
 

00:45:34.800 --> 00:45:36.309 align:start position:0%
good question. I think a lot more
configurable<00:45:35.200><c> at</c><00:45:35.359><c> runtime</c><00:45:35.680><c> now</c><00:45:35.839><c> than</c><00:45:36.000><c> it</c><00:45:36.160><c> used</c>

00:45:36.309 --> 00:45:36.319 align:start position:0%
configurable at runtime now than it used
 

00:45:36.319 --> 00:45:39.349 align:start position:0%
configurable at runtime now than it used
to<00:45:36.560><c> be.</c><00:45:38.000><c> Um,</c><00:45:38.319><c> so</c><00:45:38.560><c> I've</c><00:45:38.720><c> just</c><00:45:38.800><c> got</c><00:45:38.880><c> a</c><00:45:39.040><c> pitch</c><00:45:39.200><c> for</c>

00:45:39.349 --> 00:45:39.359 align:start position:0%
to be. Um, so I've just got a pitch for
 

00:45:39.359 --> 00:45:42.790 align:start position:0%
to be. Um, so I've just got a pitch for
a<00:45:39.520><c> binary</c><00:45:39.839><c> tree.</c><00:45:40.160><c> Okay,</c><00:45:40.400><c> there</c><00:45:40.560><c> you</c><00:45:40.720><c> go.</c><00:45:41.200><c> Um,</c>

00:45:42.790 --> 00:45:42.800 align:start position:0%
a binary tree. Okay, there you go. Um,
 

00:45:42.800 --> 00:45:45.030 align:start position:0%
a binary tree. Okay, there you go. Um,
I<00:45:43.119><c> won't</c><00:45:43.280><c> talk</c><00:45:43.440><c> about</c><00:45:43.599><c> process</c><00:45:44.000><c> topologies.</c>

00:45:45.030 --> 00:45:45.040 align:start position:0%
I won't talk about process topologies.
 

00:45:45.040 --> 00:45:47.270 align:start position:0%
I won't talk about process topologies.
uh<00:45:45.359><c> or</c><00:45:45.760><c> singlesided.</c>

00:45:47.270 --> 00:45:47.280 align:start position:0%
uh or singlesided.
 

00:45:47.280 --> 00:45:53.829 align:start position:0%
uh or singlesided.
Um<00:45:48.720><c> but</c><00:45:48.960><c> I</c><00:45:49.280><c> will</c><00:45:50.319><c> oh</c>

00:45:53.829 --> 00:45:53.839 align:start position:0%
 
 

00:45:53.839 --> 00:45:55.910 align:start position:0%
 
so<00:45:54.560><c> okay</c><00:45:54.880><c> sorry</c><00:45:55.119><c> this</c><00:45:55.280><c> is</c><00:45:55.359><c> the</c><00:45:55.520><c> this</c><00:45:55.680><c> is</c><00:45:55.760><c> the</c>

00:45:55.910 --> 00:45:55.920 align:start position:0%
so okay sorry this is the this is the
 

00:45:55.920 --> 00:45:58.870 align:start position:0%
so okay sorry this is the this is the
slide<00:45:56.160><c> so</c><00:45:56.480><c> I'm</c><00:45:56.800><c> okay</c><00:45:57.280><c> this</c><00:45:57.520><c> is</c><00:45:57.599><c> the</c><00:45:57.839><c> slide</c><00:45:58.480><c> that</c>

00:45:58.870 --> 00:45:58.880 align:start position:0%
slide so I'm okay this is the slide that
 

00:45:58.880 --> 00:46:00.950 align:start position:0%
slide so I'm okay this is the slide that
someone<00:45:59.200><c> mentioned</c><00:45:59.520><c> about</c><00:45:59.839><c> you</c><00:46:00.319><c> logically</c>

00:46:00.950 --> 00:46:00.960 align:start position:0%
someone mentioned about you logically
 

00:46:00.960 --> 00:46:02.470 align:start position:0%
someone mentioned about you logically
communicator<00:46:01.599><c> independent</c><00:46:02.079><c> communication</c>

00:46:02.470 --> 00:46:02.480 align:start position:0%
communicator independent communication
 

00:46:02.480 --> 00:46:05.910 align:start position:0%
communicator independent communication
domains<00:46:03.119><c> okay</c><00:46:04.240><c> so</c><00:46:04.319><c> so</c><00:46:04.800><c> communicators</c><00:46:05.760><c> a</c>

00:46:05.910 --> 00:46:05.920 align:start position:0%
domains okay so so communicators a
 

00:46:05.920 --> 00:46:07.270 align:start position:0%
domains okay so so communicators a
message<00:46:06.079><c> you</c><00:46:06.240><c> send</c><00:46:06.400><c> in</c><00:46:06.640><c> one</c><00:46:06.800><c> communicator</c>

00:46:07.270 --> 00:46:07.280 align:start position:0%
message you send in one communicator
 

00:46:07.280 --> 00:46:09.030 align:start position:0%
message you send in one communicator
can't<00:46:07.520><c> be</c><00:46:07.680><c> can't</c><00:46:07.920><c> be</c><00:46:08.160><c> can't</c><00:46:08.400><c> be</c><00:46:08.560><c> received</c><00:46:08.880><c> in</c>

00:46:09.030 --> 00:46:09.040 align:start position:0%
can't be can't be can't be received in
 

00:46:09.040 --> 00:46:11.510 align:start position:0%
can't be can't be can't be received in
another<00:46:10.400><c> so</c><00:46:10.640><c> you</c><00:46:10.880><c> could</c><00:46:11.040><c> use</c><00:46:11.280><c> separate</c>

00:46:11.510 --> 00:46:11.520 align:start position:0%
another so you could use separate
 

00:46:11.520 --> 00:46:12.870 align:start position:0%
another so you could use separate
message<00:46:11.839><c> cues</c><00:46:12.079><c> to</c><00:46:12.240><c> speed</c><00:46:12.400><c> up</c><00:46:12.560><c> matching</c>

00:46:12.870 --> 00:46:12.880 align:start position:0%
message cues to speed up matching
 

00:46:12.880 --> 00:46:17.829 align:start position:0%
message cues to speed up matching
processes<00:46:14.000><c> in</c><00:46:14.319><c> practice</c><00:46:15.440><c> Um</c>

00:46:17.829 --> 00:46:17.839 align:start position:0%
processes in practice Um
 

00:46:17.839 --> 00:46:19.589 align:start position:0%
processes in practice Um
most<00:46:18.240><c> application</c><00:46:18.720><c> codes</c><00:46:18.960><c> only</c><00:46:19.200><c> use</c><00:46:19.280><c> a</c><00:46:19.440><c> few</c>

00:46:19.589 --> 00:46:19.599 align:start position:0%
most application codes only use a few
 

00:46:19.599 --> 00:46:21.829 align:start position:0%
most application codes only use a few
communicators<00:46:20.079><c> at</c><00:46:20.240><c> once</c><00:46:20.560><c> you</c><00:46:21.200><c> so</c><00:46:21.520><c> actually</c>

00:46:21.829 --> 00:46:21.839 align:start position:0%
communicators at once you so actually
 

00:46:21.839 --> 00:46:23.510 align:start position:0%
communicators at once you so actually
most<00:46:22.000><c> implementations</c><00:46:22.640><c> use</c><00:46:22.800><c> a</c><00:46:22.960><c> native.</c><00:46:23.359><c> So</c>

00:46:23.510 --> 00:46:23.520 align:start position:0%
most implementations use a native. So
 

00:46:23.520 --> 00:46:25.109 align:start position:0%
most implementations use a native. So
what<00:46:23.760><c> what</c><00:46:24.079><c> we're</c><00:46:24.240><c> saying</c><00:46:24.480><c> is</c><00:46:24.640><c> that</c><00:46:24.800><c> in</c>

00:46:25.109 --> 00:46:25.119 align:start position:0%
what what we're saying is that in
 

00:46:25.119 --> 00:46:29.829 align:start position:0%
what what we're saying is that in
although<00:46:26.480><c> um</c><00:46:27.680><c> in</c><00:46:28.079><c> practice</c><00:46:28.880><c> okay</c><00:46:29.520><c> the</c>

00:46:29.829 --> 00:46:29.839 align:start position:0%
although um in practice okay the
 

00:46:29.839 --> 00:46:33.589 align:start position:0%
although um in practice okay the
communicator<00:46:30.319><c> is</c><00:46:30.560><c> just</c><00:46:30.720><c> another</c><00:46:31.040><c> tag</c><00:46:32.079><c> in</c><00:46:32.560><c> okay</c>

00:46:33.589 --> 00:46:33.599 align:start position:0%
communicator is just another tag in okay
 

00:46:33.599 --> 00:46:36.069 align:start position:0%
communicator is just another tag in okay
it's<00:46:33.920><c> different</c><00:46:34.319><c> because</c><00:46:35.040><c> user</c><00:46:35.440><c> tags</c><00:46:35.760><c> you</c><00:46:35.920><c> can</c>

00:46:36.069 --> 00:46:36.079 align:start position:0%
it's different because user tags you can
 

00:46:36.079 --> 00:46:37.990 align:start position:0%
it's different because user tags you can
wild<00:46:36.400><c> card</c><00:46:36.640><c> on</c><00:46:36.800><c> them</c><00:46:36.880><c> and</c><00:46:37.040><c> you</c><00:46:37.280><c> but</c><00:46:37.440><c> but</c><00:46:37.760><c> in</c>

00:46:37.990 --> 00:46:38.000 align:start position:0%
wild card on them and you but but in
 

00:46:38.000 --> 00:46:41.109 align:start position:0%
wild card on them and you but but in
practice<00:46:39.040><c> the</c><00:46:39.280><c> MP</c><00:46:39.680><c> implementation</c><00:46:40.160><c> will</c><00:46:40.400><c> just</c>

00:46:41.109 --> 00:46:41.119 align:start position:0%
practice the MP implementation will just
 

00:46:41.119 --> 00:46:43.430 align:start position:0%
practice the MP implementation will just
basically<00:46:41.760><c> send</c><00:46:42.079><c> and</c><00:46:42.240><c> receive</c><00:46:42.640><c> messages</c><00:46:43.040><c> in</c>

00:46:43.430 --> 00:46:43.440 align:start position:0%
basically send and receive messages in
 

00:46:43.440 --> 00:46:46.069 align:start position:0%
basically send and receive messages in
com<00:46:43.760><c> world</c><00:46:44.319><c> basically</c><00:46:45.440><c> but</c><00:46:45.839><c> the</c>

00:46:46.069 --> 00:46:46.079 align:start position:0%
com world basically but the
 

00:46:46.079 --> 00:46:47.349 align:start position:0%
com world basically but the
communicators<00:46:46.720><c> will</c><00:46:46.880><c> be</c><00:46:46.960><c> done</c><00:46:47.200><c> through</c>

00:46:47.349 --> 00:46:47.359 align:start position:0%
communicators will be done through
 

00:46:47.359 --> 00:46:49.910 align:start position:0%
communicators will be done through
through<00:46:47.599><c> some</c><00:46:47.839><c> special</c><00:46:48.240><c> hidden</c><00:46:48.640><c> tag</c><00:46:49.520><c> if</c><00:46:49.680><c> that</c>

00:46:49.910 --> 00:46:49.920 align:start position:0%
through some special hidden tag if that
 

00:46:49.920 --> 00:46:52.150 align:start position:0%
through some special hidden tag if that
makes<00:46:50.160><c> sense.</c><00:46:50.880><c> So,</c><00:46:51.040><c> so</c><00:46:51.280><c> that</c><00:46:51.440><c> is</c><00:46:51.520><c> how</c><00:46:51.680><c> the</c><00:46:51.760><c> MP</c>

00:46:52.150 --> 00:46:52.160 align:start position:0%
makes sense. So, so that is how the MP
 

00:46:52.160 --> 00:46:55.270 align:start position:0%
makes sense. So, so that is how the MP
will<00:46:52.240><c> do.</c><00:46:52.480><c> It</c><00:46:52.560><c> will</c><00:46:52.720><c> just</c><00:46:52.880><c> be</c><00:46:52.960><c> a</c><00:46:53.119><c> magic</c><00:46:53.440><c> tag</c><00:46:54.640><c> uh</c>

00:46:55.270 --> 00:46:55.280 align:start position:0%
will do. It will just be a magic tag uh
 

00:46:55.280 --> 00:46:57.990 align:start position:0%
will do. It will just be a magic tag uh
which<00:46:55.520><c> is</c><00:46:55.680><c> added</c><00:46:55.920><c> on</c><00:46:56.079><c> to</c><00:46:56.240><c> the</c><00:46:56.400><c> normal</c><00:46:56.720><c> tag.</c><00:46:57.599><c> Um</c>

00:46:57.990 --> 00:46:58.000 align:start position:0%
which is added on to the normal tag. Um
 

00:46:58.000 --> 00:47:01.190 align:start position:0%
which is added on to the normal tag. Um
so,<00:46:58.319><c> so</c><00:46:58.640><c> so</c><00:46:58.640><c> so</c><00:46:59.119><c> it</c><00:46:59.359><c> will</c><00:46:59.599><c> not</c>

00:47:01.190 --> 00:47:01.200 align:start position:0%
so, so so so it will not
 

00:47:01.200 --> 00:47:03.510 align:start position:0%
so, so so so it will not
yeah<00:47:01.440><c> it</c><00:47:01.680><c> will</c><00:47:01.839><c> use</c><00:47:02.079><c> global</c><00:47:02.480><c> sets</c><00:47:02.720><c> of</c><00:47:02.880><c> cues</c><00:47:03.280><c> raw</c>

00:47:03.510 --> 00:47:03.520 align:start position:0%
yeah it will use global sets of cues raw
 

00:47:03.520 --> 00:47:05.750 align:start position:0%
yeah it will use global sets of cues raw
sends<00:47:03.760><c> and</c><00:47:04.000><c> receives</c><00:47:04.880><c> but</c><00:47:05.119><c> it</c><00:47:05.280><c> will</c><00:47:05.440><c> pick</c><00:47:05.599><c> up</c>

00:47:05.750 --> 00:47:05.760 align:start position:0%
sends and receives but it will pick up
 

00:47:05.760 --> 00:47:07.349 align:start position:0%
sends and receives but it will pick up
the<00:47:05.920><c> correct</c><00:47:06.240><c> communicator</c><00:47:06.720><c> because</c><00:47:06.880><c> the</c><00:47:07.119><c> the</c>

00:47:07.349 --> 00:47:07.359 align:start position:0%
the correct communicator because the the
 

00:47:07.359 --> 00:47:09.510 align:start position:0%
the correct communicator because the the
protocol<00:47:07.680><c> message</c><00:47:08.000><c> will</c><00:47:08.240><c> have</c><00:47:08.400><c> some</c><00:47:09.040><c> magic</c>

00:47:09.510 --> 00:47:09.520 align:start position:0%
protocol message will have some magic
 

00:47:09.520 --> 00:47:11.910 align:start position:0%
protocol message will have some magic
tag<00:47:09.839><c> attached</c><00:47:10.160><c> to</c><00:47:10.319><c> it</c><00:47:10.400><c> which</c><00:47:10.880><c> which</c><00:47:11.520><c> reflects</c>

00:47:11.910 --> 00:47:11.920 align:start position:0%
tag attached to it which which reflects
 

00:47:11.920 --> 00:47:14.150 align:start position:0%
tag attached to it which which reflects
the<00:47:12.160><c> communicator</c><00:47:12.640><c> which</c><00:47:12.960><c> was</c><00:47:13.119><c> sent</c><00:47:13.359><c> from.</c><00:47:14.000><c> So</c>

00:47:14.150 --> 00:47:14.160 align:start position:0%
the communicator which was sent from. So
 

00:47:14.160 --> 00:47:15.270 align:start position:0%
the communicator which was sent from. So
I<00:47:14.240><c> can't</c><00:47:14.400><c> remember</c><00:47:14.560><c> who</c><00:47:14.640><c> asked</c><00:47:14.880><c> that</c><00:47:15.040><c> question</c>

00:47:15.270 --> 00:47:15.280 align:start position:0%
I can't remember who asked that question
 

00:47:15.280 --> 00:47:17.190 align:start position:0%
I can't remember who asked that question
but<00:47:15.440><c> you're</c><00:47:15.599><c> right</c><00:47:15.760><c> in</c><00:47:15.920><c> principle</c><00:47:16.800><c> you</c><00:47:17.040><c> could</c>

00:47:17.190 --> 00:47:17.200 align:start position:0%
but you're right in principle you could
 

00:47:17.200 --> 00:47:18.309 align:start position:0%
but you're right in principle you could
have<00:47:17.359><c> different</c><00:47:17.599><c> cues</c><00:47:17.920><c> for</c><00:47:18.079><c> each</c>

00:47:18.309 --> 00:47:18.319 align:start position:0%
have different cues for each
 

00:47:18.319 --> 00:47:19.430 align:start position:0%
have different cues for each
communicating<00:47:18.800><c> that</c><00:47:18.960><c> would</c><00:47:18.960><c> be</c><00:47:19.119><c> a</c><00:47:19.200><c> good</c><00:47:19.359><c> thing</c>

00:47:19.430 --> 00:47:19.440 align:start position:0%
communicating that would be a good thing
 

00:47:19.440 --> 00:47:21.190 align:start position:0%
communicating that would be a good thing
to<00:47:19.599><c> do</c><00:47:19.760><c> possibly</c><00:47:20.160><c> but</c><00:47:20.400><c> in</c><00:47:20.560><c> practice</c><00:47:20.800><c> they</c><00:47:21.040><c> tend</c>

00:47:21.190 --> 00:47:21.200 align:start position:0%
to do possibly but in practice they tend
 

00:47:21.200 --> 00:47:23.670 align:start position:0%
to do possibly but in practice they tend
not<00:47:21.359><c> to</c><00:47:21.520><c> do</c><00:47:21.680><c> that.</c>

00:47:23.670 --> 00:47:23.680 align:start position:0%
not to do that.
 

00:47:23.680 --> 00:47:25.750 align:start position:0%
not to do that.
Um

00:47:25.750 --> 00:47:25.760 align:start position:0%
Um
 

00:47:25.760 --> 00:47:27.349 align:start position:0%
Um
I'm<00:47:26.000><c> not</c><00:47:26.079><c> going</c><00:47:26.160><c> to</c><00:47:26.240><c> talk</c><00:47:26.319><c> about</c><00:47:26.480><c> process</c><00:47:27.200><c> or</c>

00:47:27.349 --> 00:47:27.359 align:start position:0%
I'm not going to talk about process or
 

00:47:27.359 --> 00:47:28.790 align:start position:0%
I'm not going to talk about process or
singlesided<00:47:28.000><c> because</c><00:47:28.160><c> people</c><00:47:28.319><c> weren't</c><00:47:28.560><c> that</c>

00:47:28.790 --> 00:47:28.800 align:start position:0%
singlesided because people weren't that
 

00:47:28.800 --> 00:47:30.870 align:start position:0%
singlesided because people weren't that
interested<00:47:29.040><c> in</c><00:47:29.200><c> that.</c><00:47:29.920><c> So,</c><00:47:30.240><c> so</c><00:47:30.480><c> there's</c><00:47:30.640><c> a</c>

00:47:30.870 --> 00:47:30.880 align:start position:0%
interested in that. So, so there's a
 

00:47:30.880 --> 00:47:33.109 align:start position:0%
interested in that. So, so there's a
summary<00:47:31.520><c> a</c><00:47:31.680><c> bit</c><00:47:31.839><c> over</c><00:47:32.160><c> time.</c><00:47:32.640><c> There</c><00:47:32.800><c> are</c><00:47:32.960><c> many</c>

00:47:33.109 --> 00:47:33.119 align:start position:0%
summary a bit over time. There are many
 

00:47:33.119 --> 00:47:35.430 align:start position:0%
summary a bit over time. There are many
ways<00:47:33.280><c> of</c><00:47:33.440><c> besting</c><00:47:33.599><c> NPI</c><00:47:34.079><c> communication.</c><00:47:35.200><c> Which</c>

00:47:35.430 --> 00:47:35.440 align:start position:0%
ways of besting NPI communication. Which
 

00:47:35.440 --> 00:47:38.150 align:start position:0%
ways of besting NPI communication. Which
one<00:47:35.599><c> is</c><00:47:35.920><c> fastest</c><00:47:36.480><c> depends</c><00:47:36.880><c> on</c><00:47:37.520><c> what</c><00:47:37.760><c> NPI</c>

00:47:38.150 --> 00:47:38.160 align:start position:0%
one is fastest depends on what NPI
 

00:47:38.160 --> 00:47:39.430 align:start position:0%
one is fastest depends on what NPI
library<00:47:38.480><c> using,</c><00:47:38.640><c> what</c><00:47:38.800><c> hardware</c><00:47:39.119><c> using,</c><00:47:39.359><c> what</c>

00:47:39.430 --> 00:47:39.440 align:start position:0%
library using, what hardware using, what
 

00:47:39.440 --> 00:47:42.150 align:start position:0%
library using, what hardware using, what
operator<00:47:39.760><c> you're</c><00:47:39.920><c> using.</c><00:47:41.359><c> Performance</c><00:47:41.839><c> port</c>

00:47:42.150 --> 00:47:42.160 align:start position:0%
operator you're using. Performance port
 

00:47:42.160 --> 00:47:43.670 align:start position:0%
operator you're using. Performance port
is<00:47:42.319><c> therefore</c><00:47:42.640><c> really</c><00:47:42.880><c> hard.</c><00:47:43.119><c> It's</c><00:47:43.280><c> very</c><00:47:43.520><c> hard</c>

00:47:43.670 --> 00:47:43.680 align:start position:0%
is therefore really hard. It's very hard
 

00:47:43.680 --> 00:47:46.630 align:start position:0%
is therefore really hard. It's very hard
to<00:47:43.839><c> write</c><00:47:44.000><c> an</c><00:47:44.240><c> NPI</c><00:47:44.800><c> program</c><00:47:45.599><c> which</c><00:47:46.480><c> is</c>

00:47:46.630 --> 00:47:46.640 align:start position:0%
to write an NPI program which is
 

00:47:46.640 --> 00:47:49.990 align:start position:0%
to write an NPI program which is
optimally<00:47:47.119><c> performant</c><00:47:47.520><c> everywhere.</c><00:47:48.319><c> My</c><00:47:49.520><c> my</c>

00:47:49.990 --> 00:47:50.000 align:start position:0%
optimally performant everywhere. My my
 

00:47:50.000 --> 00:47:51.589 align:start position:0%
optimally performant everywhere. My my
advice<00:47:50.319><c> is</c><00:47:50.560><c> always</c><00:47:50.880><c> implement</c><00:47:51.280><c> lots</c><00:47:51.520><c> of</c>

00:47:51.589 --> 00:47:51.599 align:start position:0%
advice is always implement lots of
 

00:47:51.599 --> 00:47:54.309 align:start position:0%
advice is always implement lots of
different<00:47:51.839><c> methods</c><00:47:52.960><c> and</c><00:47:53.520><c> each</c><00:47:53.839><c> time</c><00:47:54.160><c> just</c>

00:47:54.309 --> 00:47:54.319 align:start position:0%
different methods and each time just
 

00:47:54.319 --> 00:47:55.750 align:start position:0%
different methods and each time just
test<00:47:54.560><c> them</c><00:47:54.640><c> and</c><00:47:54.880><c> pick</c><00:47:55.040><c> the</c><00:47:55.200><c> best</c><00:47:55.359><c> one.</c><00:47:55.599><c> You</c>

00:47:55.750 --> 00:47:55.760 align:start position:0%
test them and pick the best one. You
 

00:47:55.760 --> 00:47:57.510 align:start position:0%
test them and pick the best one. You
know,<00:47:55.920><c> if</c><00:47:56.160><c> as</c><00:47:56.240><c> I</c><00:47:56.400><c> said,</c><00:47:56.480><c> if</c><00:47:56.640><c> there's</c><00:47:56.880><c> 101</c><00:47:57.280><c> ways,</c>

00:47:57.510 --> 00:47:57.520 align:start position:0%
know, if as I said, if there's 101 ways,
 

00:47:57.520 --> 00:47:59.750 align:start position:0%
know, if as I said, if there's 101 ways,
sorry,<00:47:57.839><c> 100</c><00:47:58.480><c> half</c><00:47:58.720><c> a</c><00:47:58.800><c> dozen</c><00:47:59.040><c> ways</c><00:47:59.200><c> to</c><00:47:59.359><c> do</c><00:47:59.440><c> to</c><00:47:59.680><c> do</c>

00:47:59.750 --> 00:47:59.760 align:start position:0%
sorry, 100 half a dozen ways to do to do
 

00:47:59.760 --> 00:48:02.630 align:start position:0%
sorry, 100 half a dozen ways to do to do
halo<00:48:00.160><c> swapping,</c><00:48:01.520><c> implement</c><00:48:01.920><c> them</c><00:48:02.160><c> all</c><00:48:02.400><c> and</c>

00:48:02.630 --> 00:48:02.640 align:start position:0%
halo swapping, implement them all and
 

00:48:02.640 --> 00:48:04.630 align:start position:0%
halo swapping, implement them all and
just<00:48:02.880><c> have</c><00:48:02.960><c> a</c><00:48:03.119><c> little</c><00:48:03.440><c> and</c><00:48:03.680><c> just</c><00:48:03.920><c> have</c><00:48:04.000><c> a</c><00:48:04.240><c> go</c>

00:48:04.630 --> 00:48:04.640 align:start position:0%
just have a little and just have a go
 

00:48:04.640 --> 00:48:06.230 align:start position:0%
just have a little and just have a go
the<00:48:04.880><c> first</c><00:48:05.040><c> time</c><00:48:05.200><c> you</c><00:48:05.359><c> use</c><00:48:05.520><c> a</c><00:48:05.599><c> new</c><00:48:05.839><c> machine</c><00:48:06.079><c> and</c>

00:48:06.230 --> 00:48:06.240 align:start position:0%
the first time you use a new machine and
 

00:48:06.240 --> 00:48:08.390 align:start position:0%
the first time you use a new machine and
see<00:48:06.400><c> which</c><00:48:06.560><c> is</c><00:48:06.720><c> fastest</c><00:48:07.040><c> for</c><00:48:07.280><c> you.</c><00:48:08.079><c> You</c><00:48:08.240><c> know,</c>

00:48:08.390 --> 00:48:08.400 align:start position:0%
see which is fastest for you. You know,
 

00:48:08.400 --> 00:48:10.230 align:start position:0%
see which is fastest for you. You know,
that<00:48:08.560><c> is</c><00:48:08.800><c> probably</c><00:48:09.200><c> what</c><00:48:09.440><c> I</c><00:48:09.599><c> would</c><00:48:09.760><c> say.</c><00:48:10.000><c> You</c>

00:48:10.230 --> 00:48:10.240 align:start position:0%
that is probably what I would say. You
 

00:48:10.240 --> 00:48:12.150 align:start position:0%
that is probably what I would say. You
know<00:48:10.480><c> there</c><00:48:10.720><c> are</c><00:48:10.880><c> some</c><00:48:11.119><c> hard</c><00:48:11.359><c> and</c><00:48:11.599><c> fast</c><00:48:11.920><c> sorry</c>

00:48:12.150 --> 00:48:12.160 align:start position:0%
know there are some hard and fast sorry
 

00:48:12.160 --> 00:48:14.230 align:start position:0%
know there are some hard and fast sorry
there<00:48:12.319><c> are</c><00:48:12.480><c> some</c><00:48:12.640><c> general</c><00:48:13.040><c> rules</c><00:48:13.760><c> which</c><00:48:14.079><c> will</c>

00:48:14.230 --> 00:48:14.240 align:start position:0%
there are some general rules which will
 

00:48:14.240 --> 00:48:16.710 align:start position:0%
there are some general rules which will
help<00:48:14.400><c> you</c><00:48:14.640><c> which</c><00:48:14.880><c> are</c><00:48:15.119><c> things</c><00:48:15.359><c> like</c><00:48:16.319><c> post</c>

00:48:16.710 --> 00:48:16.720 align:start position:0%
help you which are things like post
 

00:48:16.720 --> 00:48:18.470 align:start position:0%
help you which are things like post
receives<00:48:17.119><c> early</c><00:48:17.440><c> so</c><00:48:17.599><c> that</c><00:48:17.760><c> when</c><00:48:18.000><c> the</c><00:48:18.160><c> send</c>

00:48:18.470 --> 00:48:18.480 align:start position:0%
receives early so that when the send
 

00:48:18.480 --> 00:48:20.710 align:start position:0%
receives early so that when the send
comes<00:48:18.720><c> in</c><00:48:19.440><c> they</c><00:48:19.680><c> will</c><00:48:19.839><c> be</c><00:48:20.000><c> there</c><00:48:20.160><c> in</c><00:48:20.400><c> matching</c>

00:48:20.710 --> 00:48:20.720 align:start position:0%
comes in they will be there in matching
 

00:48:20.720 --> 00:48:23.990 align:start position:0%
comes in they will be there in matching
and<00:48:20.960><c> such</c><00:48:21.200><c> like</c><00:48:21.920><c> but</c><00:48:22.240><c> it's</c><00:48:22.559><c> very</c><00:48:22.800><c> hard</c><00:48:23.119><c> to</c><00:48:23.680><c> um</c>

00:48:23.990 --> 00:48:24.000 align:start position:0%
and such like but it's very hard to um
 

00:48:24.000 --> 00:48:26.710 align:start position:0%
and such like but it's very hard to um
it's<00:48:24.319><c> very</c><00:48:24.559><c> hard</c><00:48:24.880><c> to</c><00:48:25.200><c> to</c><00:48:25.200><c> to</c><00:48:25.680><c> be</c><00:48:25.839><c> definitive</c>

00:48:26.710 --> 00:48:26.720 align:start position:0%
it's very hard to to to be definitive
 

00:48:26.720 --> 00:48:30.390 align:start position:0%
it's very hard to to to be definitive
but<00:48:27.040><c> again</c><00:48:28.319><c> um</c>

00:48:30.390 --> 00:48:30.400 align:start position:0%
but again um
 

00:48:30.400 --> 00:48:32.390 align:start position:0%
but again um
and<00:48:30.640><c> again</c><00:48:30.880><c> I</c><00:48:31.119><c> have</c><00:48:31.200><c> a</c><00:48:31.359><c> I</c><00:48:31.599><c> have</c><00:48:31.680><c> a</c><00:48:31.760><c> halo</c><00:48:32.079><c> swap</c>

00:48:32.390 --> 00:48:32.400 align:start position:0%
and again I have a I have a halo swap
 

00:48:32.400 --> 00:48:35.030 align:start position:0%
and again I have a I have a halo swap
benchmark<00:48:32.720><c> which</c><00:48:32.960><c> will</c><00:48:33.200><c> run</c><00:48:33.839><c> sometime</c><00:48:34.319><c> today</c>

00:48:35.030 --> 00:48:35.040 align:start position:0%
benchmark which will run sometime today
 

00:48:35.040 --> 00:48:37.750 align:start position:0%
benchmark which will run sometime today
which<00:48:35.280><c> does</c><00:48:35.599><c> halo</c><00:48:36.000><c> swapping</c><00:48:36.319><c> in</c><00:48:36.480><c> a</c><00:48:37.280><c> six</c><00:48:37.520><c> or</c>

00:48:37.750 --> 00:48:37.760 align:start position:0%
which does halo swapping in a six or
 

00:48:37.760 --> 00:48:38.870 align:start position:0%
which does halo swapping in a six or
seven<00:48:37.920><c> different</c><00:48:38.160><c> ways</c><00:48:38.319><c> and</c><00:48:38.480><c> you</c><00:48:38.640><c> can</c><00:48:38.720><c> see</c>

00:48:38.870 --> 00:48:38.880 align:start position:0%
seven different ways and you can see
 

00:48:38.880 --> 00:48:42.309 align:start position:0%
seven different ways and you can see
which<00:48:39.119><c> one's</c><00:48:39.359><c> faster.</c><00:48:39.760><c> this.</c>

00:48:42.309 --> 00:48:42.319 align:start position:0%
which one's faster. this.
 

00:48:42.319 --> 00:48:44.150 align:start position:0%
which one's faster. this.
Okay,<00:48:42.559><c> I've</c><00:48:42.800><c> overrun</c><00:48:43.280><c> slightly.</c><00:48:43.839><c> What</c><00:48:44.000><c> we're</c>

00:48:44.150 --> 00:48:44.160 align:start position:0%
Okay, I've overrun slightly. What we're
 

00:48:44.160 --> 00:48:46.230 align:start position:0%
Okay, I've overrun slightly. What we're
going<00:48:44.240><c> to</c><00:48:44.400><c> do,</c><00:48:44.880><c> we'll</c><00:48:45.119><c> come</c><00:48:45.440><c> come</c><00:48:45.599><c> back</c><00:48:45.839><c> after</c>

00:48:46.230 --> 00:48:46.240 align:start position:0%
going to do, we'll come come back after
 

00:48:46.240 --> 00:48:50.150 align:start position:0%
going to do, we'll come come back after
half<00:48:46.559><c> 12.</c><00:48:47.359><c> Um</c><00:48:48.319><c> the</c><00:48:48.480><c> the</c><00:48:48.800><c> idea</c><00:48:49.200><c> will</c><00:48:49.440><c> be</c><00:48:49.680><c> if</c><00:48:49.920><c> I</c>

00:48:50.150 --> 00:48:50.160 align:start position:0%
half 12. Um the the idea will be if I
 

00:48:50.160 --> 00:48:52.630 align:start position:0%
half 12. Um the the idea will be if I
can<00:48:50.400><c> find</c><00:48:50.800><c> my</c>

00:48:52.630 --> 00:48:52.640 align:start position:0%
can find my
 

00:48:52.640 --> 00:48:54.390 align:start position:0%
can find my
window.

00:48:54.390 --> 00:48:54.400 align:start position:0%
window.
 

00:48:54.400 --> 00:49:09.910 align:start position:0%
window.
Stop<00:48:54.800><c> that.</c>

00:49:09.910 --> 00:49:09.920 align:start position:0%
 
 

00:49:09.920 --> 00:49:18.870 align:start position:0%
 
weird<00:49:10.240><c> is</c><00:49:10.319><c> going</c><00:49:10.480><c> on</c><00:49:10.720><c> here.</c><00:49:11.359><c> Um</c>

00:49:18.870 --> 00:49:18.880 align:start position:0%
 
 

00:49:18.880 --> 00:49:20.309 align:start position:0%
 
hopefully<00:49:19.200><c> you're</c><00:49:19.359><c> seeing</c><00:49:19.520><c> my</c><00:49:19.760><c> window</c><00:49:20.079><c> now.</c>

00:49:20.309 --> 00:49:20.319 align:start position:0%
hopefully you're seeing my window now.
 

00:49:20.319 --> 00:49:22.630 align:start position:0%
hopefully you're seeing my window now.
Yes.<00:49:20.480><c> So</c><00:49:20.640><c> we'll</c><00:49:20.960><c> come</c><00:49:21.119><c> back</c><00:49:21.440><c> at</c><00:49:21.920><c> have</c><00:49:22.160><c> lunch</c><00:49:22.480><c> to</c>

00:49:22.630 --> 00:49:22.640 align:start position:0%
Yes. So we'll come back at have lunch to
 

00:49:22.640 --> 00:49:27.109 align:start position:0%
Yes. So we'll come back at have lunch to
a<00:49:22.800><c> half</c><00:49:23.200><c> one</c><00:49:24.480><c> go</c><00:49:25.520><c> um</c><00:49:25.839><c> 55</c><00:49:26.160><c> minutes</c><00:49:26.400><c> at</c><00:49:26.400><c> least</c><00:49:26.880><c> and</c>

00:49:27.109 --> 00:49:27.119 align:start position:0%
a half one go um 55 minutes at least and
 

00:49:27.119 --> 00:49:31.750 align:start position:0%
a half one go um 55 minutes at least and
then<00:49:27.280><c> we're</c><00:49:27.440><c> going</c><00:49:27.520><c> to</c><00:49:27.680><c> run</c><00:49:28.480><c> um</c><00:49:29.760><c> uh</c><00:49:30.480><c> a</c><00:49:31.520><c> a</c>

00:49:31.750 --> 00:49:31.760 align:start position:0%
then we're going to run um uh a a
 

00:49:31.760 --> 00:49:33.670 align:start position:0%
then we're going to run um uh a a
pointto-oint<00:49:32.480><c> benchmark</c><00:49:33.040><c> a</c><00:49:33.200><c> simple</c><00:49:33.440><c> ping</c>

00:49:33.670 --> 00:49:33.680 align:start position:0%
pointto-oint benchmark a simple ping
 

00:49:33.680 --> 00:49:35.270 align:start position:0%
pointto-oint benchmark a simple ping
pong<00:49:33.920><c> but</c><00:49:34.079><c> hopefully</c><00:49:34.319><c> we'll</c><00:49:34.559><c> now</c><00:49:34.720><c> be</c><00:49:34.800><c> able</c><00:49:34.960><c> to</c>

00:49:35.270 --> 00:49:35.280 align:start position:0%
pong but hopefully we'll now be able to
 

00:49:35.280 --> 00:49:37.430 align:start position:0%
pong but hopefully we'll now be able to
actually<00:49:35.680><c> understand</c><00:49:36.079><c> the</c><00:49:36.400><c> results</c><00:49:37.119><c> and</c><00:49:37.280><c> then</c>

00:49:37.430 --> 00:49:37.440 align:start position:0%
actually understand the results and then
 

00:49:37.440 --> 00:49:39.589 align:start position:0%
actually understand the results and then
I'll<00:49:37.680><c> give</c><00:49:37.760><c> a</c><00:49:38.000><c> general</c><00:49:38.319><c> talk</c><00:49:38.559><c> on</c><00:49:38.800><c> on</c><00:49:39.200><c> how</c><00:49:39.440><c> you</c>

00:49:39.589 --> 00:49:39.599 align:start position:0%
I'll give a general talk on on how you
 

00:49:39.599 --> 00:49:41.430 align:start position:0%
I'll give a general talk on on how you
can<00:49:40.400><c> yeah</c><00:49:40.720><c> things</c><00:49:40.880><c> you</c><00:49:41.040><c> might</c><00:49:41.200><c> want</c><00:49:41.359><c> to</c>

00:49:41.430 --> 00:49:41.440 align:start position:0%
can yeah things you might want to
 

00:49:41.440 --> 00:49:45.349 align:start position:0%
can yeah things you might want to
improve<00:49:41.680><c> on</c><00:49:41.839><c> your</c><00:49:42.000><c> NPI</c><00:49:42.480><c> program.</c><00:49:43.359><c> Um</c><00:49:43.760><c> and</c><00:49:44.000><c> then</c>

00:49:45.349 --> 00:49:45.359 align:start position:0%
improve on your NPI program. Um and then
 

00:49:45.359 --> 00:49:47.430 align:start position:0%
improve on your NPI program. Um and then
uh<00:49:45.680><c> yeah</c><00:49:46.319><c> that's</c><00:49:46.640><c> the</c><00:49:46.880><c> plan</c><00:49:47.040><c> for</c><00:49:47.200><c> this</c>

00:49:47.430 --> 00:49:47.440 align:start position:0%
uh yeah that's the plan for this
 

00:49:47.440 --> 00:49:50.069 align:start position:0%
uh yeah that's the plan for this
afternoon.<00:49:48.000><c> So</c><00:49:48.480><c> I'll</c><00:49:48.800><c> see</c><00:49:49.040><c> I'll</c><00:49:49.440><c> see</c><00:49:49.680><c> you</c><00:49:49.839><c> guys</c>

00:49:50.069 --> 00:49:50.079 align:start position:0%
afternoon. So I'll see I'll see you guys
 

00:49:50.079 --> 00:49:54.230 align:start position:0%
afternoon. So I'll see I'll see you guys
again<00:49:50.559><c> at</c><00:49:51.520><c> um</c><00:49:52.400><c> half</c>

00:49:54.230 --> 00:49:54.240 align:start position:0%
again at um half
 

00:49:54.240 --> 00:49:56.230 align:start position:0%
again at um half
one<00:49:54.720><c> which</c><00:49:54.960><c> is</c><00:49:54.960><c> a</c><00:49:55.200><c> practical</c><00:49:55.520><c> till</c><00:49:55.839><c> two</c><00:49:56.079><c> and</c>

00:49:56.230 --> 00:49:56.240 align:start position:0%
one which is a practical till two and
 

00:49:56.240 --> 00:49:57.750 align:start position:0%
one which is a practical till two and
then<00:49:56.400><c> the</c><00:49:56.559><c> next</c><00:49:56.720><c> lecture</c><00:49:56.960><c> is</c><00:49:57.119><c> two.</c><00:49:57.520><c> We'll</c><00:49:57.680><c> be</c>

00:49:57.750 --> 00:49:57.760 align:start position:0%
then the next lecture is two. We'll be
 

00:49:57.760 --> 00:50:01.640 align:start position:0%
then the next lecture is two. We'll be
back<00:49:57.920><c> at</c><00:49:58.079><c> half</c><00:49:58.640><c> one.</c>

